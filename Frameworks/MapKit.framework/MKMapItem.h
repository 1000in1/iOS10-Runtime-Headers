/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/MapKit.framework/MapKit
 */

@class NSURL, _MKMapItemPlaceAttribution, <GEOMapItemPrivate>, GEOPDFlyover, _MKMapItemReviewsAttribution, GEOMapRegion, _MKMapItemPhotosAttribution, MKPlacemark, NSString, GEOFeatureStyleAttributes, GEOPlace, NSData, GEOAddress, MKMapItemMetadata;

@interface MKMapItem : NSObject <GEOURLSerializable> {
    bool_isCurrentLocation;
    NSString *_extSessionGuid;
    bool_isPlaceHolder;
    <GEOMapItemPrivate> *_geoMapItem;
    _MKMapItemPlaceAttribution *_attribution;
    _MKMapItemPhotosAttribution *_photosAttribution;
    _MKMapItemReviewsAttribution *_reviewsAttribution;
    MKMapItemMetadata *_metadata;
    GEOPlace *_place;
}

@property(readonly) NSString * formattedNumberOfReviews;
@property(readonly) NSString * formattedNumberOfReviewsIncludingProvider;
@property(getter=_hasDisplayableAmenities,readonly) bool hasDisplayableAmenities;
@property(readonly) MKPlacemark * placemark;
@property bool isCurrentLocation;
@property(copy) NSString * name;
@property(copy) NSString * phoneNumber;
@property(retain) NSURL * url;
@property(readonly) MKMapItemMetadata * metadata;
@property(readonly) GEOPlace * place;
@property(copy) NSString * extSessionGuid;
@property(getter=_geoMapItem,readonly) <GEOMapItemPrivate> * geoMapItem;
@property(readonly) NSString * yelpID;
@property(readonly) bool isPlaceHolder;
@property(getter=_hasSessionGUID,readonly) bool hasSessionGUID;
@property(getter=_sessionGUID,readonly) struct { unsigned long long x1; unsigned long long x2; } sessionGUID;
@property(getter=_sequenceNumber,readonly) unsigned int sequenceNumber;
@property(getter=_coordinate,readonly) struct { double x1; double x2; } coordinate;
@property(getter=_displayMapRegion,readonly) GEOMapRegion * displayMapRegion;
@property(getter=_geoFenceMapRegion,readonly) GEOMapRegion * geoFenceMapRegion;
@property(getter=_geoAddress,readonly) GEOAddress * geoAddress;
@property(getter=_hasFlyover,readonly) bool hasFlyover;
@property(getter=_flyover,readonly) GEOPDFlyover * flyover;
@property(getter=_hasMUID,readonly) bool hasMUID;
@property(getter=_muid,readonly) unsigned long long muid;
@property(getter=_firstLocalizedCategoryName,readonly) NSString * firstLocalizedCategoryName;
@property(getter=_hasUserRatingScore,readonly) bool hasUserRatingScore;
@property(getter=_sampleSizeForUserRatingScore,readonly) unsigned int sampleSizeForUserRatingScore;
@property(getter=_normalizedUserRatingScore,readonly) float normalizedUserRatingScore;
@property(getter=_hasPriceRange,readonly) bool hasPriceRange;
@property(getter=_priceRangeString,readonly) NSString * priceRangeString;
@property(getter=_hasFormattedTelephone,readonly) bool hasFormattedTelephone;
@property(getter=_formattedTelephone,readonly) NSString * formattedTelephone;
@property(getter=_shortAddress,readonly) NSString * shortAddress;
@property(getter=_hasAnyAmenities,readonly) bool hasAnyAmenities;
@property(getter=_hasDeliveryAmenity,readonly) bool hasDeliveryAmenity;
@property(getter=_hasDelivery,readonly) bool hasDelivery;
@property(getter=_hasGoodForKidsAmenity,readonly) bool hasGoodForKidsAmenity;
@property(getter=_goodForKids,readonly) bool goodForKids;
@property(getter=_hasTakesReservationsAmenity,readonly) bool hasTakesReservationsAmenity;
@property(getter=_takesReservations,readonly) bool takesReservations;
@property(getter=_hasResolvablePartialInformation,readonly) bool hasResolvablePartialInformation;
@property(getter=_hasOperatingHours,readonly) bool hasOperatingHours;
@property(getter=_hasLocalizedOperatingHours,readonly) bool hasLocalizedOperatingHours;
@property(getter=_localizedOperatingHours,readonly) NSString * localizedOperatingHours;
@property(getter=_disambiguationName,readonly) NSString * disambiguationName;
@property(getter=_openState,readonly) unsigned int openState;
@property(getter=_placeDataAsData,readonly) NSData * placeDataAsData;
@property(getter=_placeAsData,readonly) NSData * placeAsData;
@property(getter=_poiSurveyURLString,readonly) NSString * poiSurveyURLString;
@property(getter=_needsAttribution,readonly) bool needsAttribution;
@property(getter=_webURL,copy,readonly) NSURL * webURL;
@property(getter=_providerURL,copy,readonly) NSURL * providerURL;
@property(getter=_vendorID,copy,readonly) NSString * vendorID;
@property(getter=_reviewsDisplayName,readonly) NSString * reviewsDisplayName;
@property(getter=_attribution,readonly) _MKMapItemPlaceAttribution * attribution;
@property(getter=_photosAttribution,readonly) _MKMapItemPhotosAttribution * photosAttribution;
@property(getter=_reviewsAttribution,readonly) _MKMapItemReviewsAttribution * reviewsAttribution;
@property(getter=_styleAttributes,readonly) GEOFeatureStyleAttributes * styleAttributes;
@property(getter=_customIconID,readonly) unsigned long long customIconID;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;

+ (unsigned long long)_placeCardIDForMapsDataString:(id)arg1;
+ (id)_mapItemWithWithLocation:(id)arg1 addressDictionary:(id)arg2 name:(id)arg3 businessURL:(id)arg4 phoneNumber:(id)arg5 sessionID:(id)arg6 muid:(unsigned long long)arg7 attributionID:(id)arg8 sampleSizeForUserRatingScore:(unsigned int)arg9 normalizedUserRatingScore:(float)arg10;
+ (void)_mapItemsWithSerializedPlaceDataResponse:(id)arg1 handler:(id)arg2;
+ (id)mapItemWithSerializedPlaceData:(id)arg1;
+ (id)_itemWithAddressBookRef:(void*)arg1 geoMapItem:(id)arg2;
+ (id)mapItemsFromURL:(id)arg1 options:(id*)arg2;
+ (id)plistCompatibleDictionaryFromStandardOptions:(id)arg1;
+ (id)standardOptionsFromPlistCompatibleDictionary:(id)arg1;
+ (id)mapItemWithDictionary:(id)arg1;
+ (bool)openMapsWithItems:(id)arg1 launchOptions:(id)arg2;
+ (id)urlForMapItem:(id)arg1 options:(id)arg2;
+ (id)urlForMapItems:(id)arg1 options:(id)arg2;
+ (id)_itemWithGeoMapItem:(id)arg1;
+ (id)mapItemForCurrentLocation;

- (id)formattedNumberOfReviewsIncludingProvider;
- (id)formattedNumberOfReviews;
- (bool)isPlaceHolder;
- (id)extSessionGuid;
- (id)_reviewsAttributionWithSourceStringFormat:(id)arg1 moreSourceStringFormat:(id)arg2;
- (id)_photoAttributionWithSourceStringFormat:(id)arg1 moreSourceStringFormat:(id)arg2;
- (id)_reviewsDisplayName;
- (bool)_hasLocalizedOperatingHours;
- (id)_shortAddress;
- (id)_formattedTelephone;
- (bool)_hasFormattedTelephone;
- (id)_geoFenceMapRegion;
- (id)_displayMapRegion;
- (id)_attributionWithDisplayName:(id)arg1 attributionFormat:(id)arg2 logo:(id)arg3;
- (id)initWithPlace:(id)arg1 sessionGuid:(id)arg2;
- (void)setExtSessionGuid:(id)arg1;
- (id)_getBusiness;
- (id)initWithPlace:(id)arg1;
- (id)initWithGeoMapItem:(id)arg1 isPlaceHolderPlace:(bool)arg2;
- (id)initWithPlace:(id)arg1 isPlaceHolderPlace:(bool)arg2;
- (bool)openInMapsWithLaunchOptions:(id)arg1;
- (id)_priceRangeString;
- (id)_firstLocalizedCategoryName;
- (id)_localizedOperatingHours;
- (bool)_hasDisplayableAmenities;
- (id)_infoAttributionWithSourceStringFormat:(id)arg1 moreSourceStringFormat:(id)arg2;
- (void)_setRecord:(void*)arg1 property:(int)arg2 stringValue:(id)arg3 label:(id)arg4;
- (id)thumbnailWithSize:(struct CGSize { double x1; double x2; })arg1 annotationView:(id)arg2;
- (id)sharingURL;
- (id)yelpID;
- (id)_mapsDataString;
- (id)_geoAddress;
- (id)_placeCardContact;
- (struct { double x1; double x2; })_coordinate;
- (id)initWithCLLocation:(id)arg1;
- (id)placemark;
- (bool)isCurrentLocation;
- (void)setIsCurrentLocation:(bool)arg1;
- (id)_geoMapItem;
- (unsigned long long)_customIconID;
- (id)_styleAttributes;
- (id)_poiSurveyURLString;
- (id)_reviewsAttribution;
- (id)_photosAttribution;
- (id)_attribution;
- (id)_vendorID;
- (id)_providerURL;
- (bool)_needsAttribution;
- (unsigned int)_openState;
- (id)_disambiguationName;
- (id)_flyover;
- (bool)_hasFlyover;
- (bool)_hasSessionGUID;
- (bool)_hasResolvablePartialInformation;
- (id)_placeDataAsData;
- (id)_placeAsData;
- (id)_urlForWritingAReview;
- (id)_urlForReviewWithUID:(id)arg1;
- (unsigned int)_travelDistanceForTransportType:(int)arg1;
- (unsigned int)_travelTimeForTransportType:(int)arg1;
- (int)_recommendedTransportType;
- (id)_webURL;
- (id)_urlForPhotoWithUID:(id)arg1;
- (bool)_hasOperatingHours;
- (bool)_takesReservations;
- (bool)_hasTakesReservationsAmenity;
- (bool)_goodForKids;
- (bool)_hasGoodForKidsAmenity;
- (bool)_hasDelivery;
- (bool)_hasDeliveryAmenity;
- (bool)_hasAnyAmenities;
- (bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (id)_localizedCategoryNamesForType:(unsigned int)arg1;
- (bool)_hasPriceRange;
- (float)_normalizedUserRatingScore;
- (unsigned int)_sampleSizeForUserRatingScore;
- (bool)_hasUserRatingScore;
- (unsigned long long)_muid;
- (bool)_hasMUID;
- (struct { unsigned long long x1; unsigned long long x2; })_sessionGUID;
- (bool)_isEquivalentURLRepresentationTo:(id)arg1;
- (id)urlRepresentation;
- (id)initWithUrlRepresentation:(id)arg1;
- (id)place;
- (unsigned int)_sequenceNumber;
- (id)initWithAddressDictionary:(id)arg1;
- (id)initWithPlacemark:(id)arg1;
- (id)metadata;
- (void)setPhoneNumber:(id)arg1;
- (id)url;
- (void)setName:(id)arg1;
- (void)setUrl:(id)arg1;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)name;
- (void).cxx_destruct;
- (id)description;
- (id)phoneNumber;
- (id)dictionaryRepresentation;

@end
