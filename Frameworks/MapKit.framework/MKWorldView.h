/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/Frameworks/MapKit.framework/MapKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class MKBasicMapView, UIGestureRecognizer, MKAnnotationView, MKMapGestureController, NSMutableSet, VKMapView, NSTimer, UITapGestureRecognizer, MKUserLocation, GEOMapRegion, VKLabelMarker, UILongPressGestureRecognizer, UILabel, VKPuckAnimator, UITextView, UIPanGestureRecognizer, NSArray, MKNewAnnotationContainerView, MKMapAnnotationManager, <MKWorldViewDelegate>, UIImageView, UIView;

@interface MKWorldView : UIView <VKMapViewDelegate, UIGestureRecognizerDelegate, MKAnnotationManagerDelegate, MKAnnotationMarkerContainer, MKMapGestureControllerDelegate, MKMapGestureControllerDelegate, GEOResourceManifestTileGroupObserver, MKAnnotationContainerViewDelegate> {
    UIView *_contentView;
    MKBasicMapView *_basicMapView;
    VKMapView *_mapView;
    MKMapAnnotationManager *_annotationManager;
    MKNewAnnotationContainerView *_annotationContainer;
    <MKWorldViewDelegate> *_delegate;
    MKUserLocation *_userLocation;
    MKAnnotationView *_userLocationView;
    int _userTrackingMode;
    UILabel *_debugView;
    NSTimer *_debugTimer;
    UIGestureRecognizer *_debugConsoleGesture;
    UITextView *_vectorKitDebugView;
    UIPanGestureRecognizer *_vectorKitStyleDebugGesture;
    UITapGestureRecognizer *_selectingTapGestureRecognizer;
    UITapGestureRecognizer *_nonselectingTapGestureRecognizer;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    VKPuckAnimator *_userLocationAnimator;
    NSTimer *_defaultLocationTimer;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _annotationRectTest;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _annotationCoordinateTest;

    unsigned int _effectsPauseCount;
    int _originalLoopRate;
    int _preGesturingLoopRate;
    UIImageView *_attributionBadgeView;
    struct CGSize { 
        float width; 
        float height; 
    } _attributionAnchorOffset;
    MKMapGestureController *_gestureController;
    BOOL _shouldSplitRouteLine;
    MKAnnotationView *_longPressStartAnnotationView;
    NSMutableSet *_rasterOverlays;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _debugConsoleAdditionalInfoProvider;

    struct { 
        unsigned int showsUserLocation : 1; 
        unsigned int ignoreLocationUpdates : 1; 
        unsigned int debugConsoleEnabled : 1; 
        unsigned int vectorKitConsoleEnabled : 1; 
        unsigned int inactive : 1; 
        unsigned int gesturing : 1; 
        unsigned int panning : 1; 
        unsigned int zooming : 1; 
        unsigned int rotating : 1; 
        unsigned int animatingRegionChange : 1; 
        unsigned int didStartPanningDeceleration : 1; 
        unsigned int regionChangeIsAnimated : 1; 
        unsigned int canSelectPOIs : 1; 
        unsigned int canSelectAllLabels : 1; 
        unsigned int isDraggingAnnotationMarker : 1; 
        unsigned int userInteractionPausesLocationUpdates : 1; 
        unsigned int locationPropagationEnabled : 1; 
        unsigned int locationPulseEnabled : 1; 
        unsigned int allowsRotation : 1; 
        unsigned int rotationEnabled : 1; 
        unsigned int allowsTilt : 1; 
        unsigned int tiltEnabled : 1; 
        unsigned int allowsMotionControl : 1; 
        unsigned int motionControlEnabled : 1; 
        unsigned int loading : 1; 
        unsigned int hasCustomLabelScaleFactor : 1; 
        unsigned int scrollWasEnabledBeforeProgrammaticPan : 1; 
        unsigned int hasFinishedInitialRender : 1; 
        unsigned int delegateImplementsDidStartLoading : 1; 
        unsigned int delegateImplementsDidFinishLoading : 1; 
        unsigned int delegateImplementsDidFailLoading : 1; 
        unsigned int delegateImplementsDidBecomeFullyDrawn : 1; 
        unsigned int delegateImplementsCalloutAccessoryControlTapped : 1; 
        unsigned int delegateImplementsWillAnimateInAnnotationViews : 1; 
        unsigned int delegateImplementsDidAnimateInAnnotationViews : 1; 
        unsigned int delegateImplementsPainterForOverlay : 1; 
        unsigned int delegateImplementsDidChangeMapType : 1; 
        unsigned int delegateImplementsWillChangeToMapDisplayStyle : 1; 
        unsigned int delegateImplementsDidChangeMapDisplayStyle : 1; 
        unsigned int delegateImplementsDidUpdateUserLocation : 1; 
        unsigned int delegateImplementsDidFailToLocateUser : 1; 
        unsigned int delegateImplementsDidChangeUserTrackingModeButton : 1; 
        unsigned int delegateImplementsDidChangeUserTrackingMode : 1; 
        unsigned int delegateImplementsRegionWillChangeAnimated : 1; 
        unsigned int delegateImplementsRegionDidChangeAnimated : 1; 
        unsigned int delegateImplementsDidChangeVisibleRegion : 1; 
        unsigned int delegateImplementsShouldSelectLabelMarker : 1; 
        unsigned int delegateImplementsWillSelectLabelMarker : 1; 
        unsigned int delegateImplementsDidSelectLabelMarker : 1; 
        unsigned int delegateImplementsLabelMarkerCalloutAccessoryControlTapped : 1; 
        unsigned int delegateImplementsDidDeselectLabelMarker : 1; 
        unsigned int delegateImplementsDidBecomePitched : 1; 
        unsigned int delegateImplementsCanEnter3DModeDidChange : 1; 
        unsigned int delegateImplementsAllowsRotationDidChange : 1; 
        unsigned int delegateImplementsAllowsTiltDidChange : 1; 
        unsigned int delegateImplementsAllowsMotionControlDidChange : 1; 
        unsigned int delegateImplementsDidStartUserInteraction : 1; 
        unsigned int delegateImplementsDidStopUserInteraction : 1; 
        unsigned int delegateImplementsWillStartRespondingToGesture : 1; 
        unsigned int delegateImplementsDidStopRespondingToGesture : 1; 
        unsigned int delegateImplementsShouldDelayTapResponseForAnnotationView : 1; 
        unsigned int delegateImplementsRectToAvoidForCallout : 1; 
        unsigned int delegateImplementsCurrentRouteMatch : 1; 
        unsigned int delegateImplementsCanShowFlyover : 1; 
        unsigned int delegateImplementsShowingFlyover : 1; 
    } _flags;
}

@property <MKWorldViewDelegate> * delegate;
@property BOOL shouldSplitRouteLine;
@property(getter=isFullyDrawn,readonly) BOOL fullyDrawn;
@property struct CGSize { float x1; float x2; } attributionAnchorOffset;
@property(readonly) UITapGestureRecognizer * nonselectingTapGestureRecognizer;
@property double longPressDuration;
@property BOOL allowsPopoverWhenNotInWindow;
@property(getter=isZoomEnabled) BOOL zoomEnabled;
@property(getter=isScrollEnabled) BOOL scrollEnabled;
@property(getter=isRotationEnabled) BOOL rotationEnabled;
@property(getter=isRotating,readonly) BOOL rotating;
@property(getter=isZooming,readonly) BOOL zooming;
@property(getter=isTiltEnabled) BOOL tiltEnabled;
@property BOOL panWithMomentum;
@property(readonly) BOOL allowsRotation;
@property(readonly) BOOL allowsTilt;
@property(readonly) BOOL allowsMotionControl;
@property(getter=isLocationPropagationEnabled) BOOL locationPropagationEnabled;
@property struct UIEdgeInsets { float x1; float x2; float x3; float x4; } edgeInsets;
@property struct UIEdgeInsets { float x1; float x2; float x3; float x4; } fullyOccludedEdgeInsets;
@property struct { double x1; double x2; } centerCoordinate;
@property(retain) GEOMapRegion * mapRegion;
@property(readonly) GEOMapRegion * mapRegionOfInterest;
@property unsigned int mapType;
@property int mapDisplayStyle;
@property(readonly) float zoomLevel;
@property(getter=isChangingRegion,readonly) BOOL changingRegion;
@property(readonly) BOOL regionChangeIsUserInitiated;
@property(readonly) MKUserLocation * userLocation;
@property BOOL userInteractionPausesLocationUpdates;
@property(getter=isGoingToDefaultLocation,readonly) BOOL goingToDefaultLocation;
@property BOOL canSelectPOIs;
@property(readonly) VKLabelMarker * selectedLabelMarker;
@property BOOL canSelectAllLabels;
@property(readonly) NSArray * annotations;
@property(readonly) NSArray * annotationViews;
@property(readonly) MKAnnotationView * selectedAnnotationView;
@property(readonly) BOOL canShowAnimationForPlaceCard;
@property int labelScaleFactor;
@property(readonly) BOOL hasUserLocation;
@property BOOL showsUserLocation;
@property int userTrackingZoomStyle;
@property int userTrackingMode;
@property BOOL showingTraffic;
@property(getter=isLoadingEnabled) BOOL loadingEnabled;
@property(getter=isPitched,readonly) BOOL pitched;
@property(readonly) BOOL canEnter3DMode;
@property(getter=isMotionControlActive,readonly) BOOL motionControlActive;
@property(getter=isShowingFlyover,readonly) BOOL showingFlyover;
@property(readonly) BOOL canShowFlyover;
@property(getter=isDebugConsoleEnabled) BOOL debugConsoleEnabled;
@property(readonly) VKMapView * mapView;
@property(copy) id debugConsoleAdditionalInfoProvider;
@property(readonly) double yaw;
@property(readonly) NSArray * visibleTileSets;
@property(getter=isLocationPulseEnabled) BOOL locationPulseEnabled;
@property(getter=isVectorKitConsoleEnabled) BOOL vectorKitConsoleEnabled;
@property(getter=isVectorKitStyleDebugEnabled) BOOL vectorKitStyleDebugEnabled;
@property BOOL rendersInBackground;

+ (id)mapRegionWithCenterCoordinate:(struct { double x1; double x2; })arg1 zoomScale:(float)arg2 size:(struct CGSize { float x1; float x2; })arg3;
+ (void)_initializeSafeCategory;
+ (id)_initializeSafeCategoryFromValidationManager;

- (void)setTiltEnabled:(BOOL)arg1;
- (void)puckAnimator:(id)arg1 updatedPosition:(struct { double x1; double x2; double x3; })arg2 course:(double)arg3;
- (void)puckAnimator:(id)arg1 runAnimation:(id)arg2;
- (void)setCenterCoordinate:(struct { double x1; double x2; })arg1;
- (int)mapDisplayStyle;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(struct { double x1; double x2; double x3; })arg2;
- (void)puckAnimatorDidStop:(id)arg1;
- (BOOL)isFullyDrawn;
- (void)stopPanningAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)updatePanWithTranslation:(struct CGPoint { float x1; float x2; })arg1;
- (void)startPanningAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)mapView:(id)arg1 willTransitionFrom:(int)arg2 to:(int)arg3 duration:(double)arg4;
- (void)mapView:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;
- (void)mapView:(id)arg1 didFinishChangingMapDisplayStyle:(int)arg2;
- (void)mapView:(id)arg1 didBecomePitched:(BOOL)arg2;
- (void)mapViewDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(BOOL)arg2;
- (id)mapView:(id)arg1 painterForOverlay:(id)arg2;
- (void)mapView:(id)arg1 didFinishAddingAnnotationMarkers:(id)arg2;
- (id)mapView:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)mapViewDidStopRegionAnimation:(id)arg1 completed:(BOOL)arg2;
- (void)mapViewWillStartRegionAnimation:(id)arg1;
- (void)mapViewDidDraw:(id)arg1;
- (void)mapViewDidChangeVisibleRegion:(id)arg1;
- (void)mapViewDidFailLoadingTiles:(id)arg1 withError:(id)arg2;
- (void)mapViewDidFinishLoadingTiles:(id)arg1;
- (void)mapViewDidStartLoadingTiles:(id)arg1;
- (void)removeRasterOverlay:(id)arg1;
- (void)addRasterOverlay:(id)arg1;
- (void)setTracePlaybackSpeedMultiplier:(double)arg1;
- (id)selectedLabelMarker;
- (BOOL)shouldHideOffscreenSelectedAnnotation;
- (id)annotationCoordinateTest;
- (id)annotationRectTest;
- (void)stopMotionControl;
- (BOOL)isMotionControlActive;
- (BOOL)isPitched;
- (void)exit3DMode;
- (void)enter3DMode;
- (void)stopPlaceCardAnimation;
- (void)startPlaceCardAnimationAtCoordinate:(struct { double x1; double x2; })arg1 andDistance:(double)arg2;
- (BOOL)canShowAnimationForPlaceCard;
- (BOOL)canShowAnimationForSearchResultWithMapRegion:(id)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })fullyOccludedEdgeInsets;
- (void)setFullyOccludedEdgeInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (struct { double x1; double x2; })centerCoordinate;
- (void)setCenterCoordinate:(struct { double x1; double x2; })arg1 animated:(BOOL)arg2;
- (id)mapRegionOfInterest;
- (void)setMapRegion:(id)arg1 animated:(BOOL)arg2;
- (void)mapView:(id)arg1 showingFlyoverDidChange:(BOOL)arg2;
- (void)mapView:(id)arg1 canShowFlyoverDidChange:(BOOL)arg2;
- (void)mapView:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2;
- (BOOL)canEnter3DMode;
- (void)setMapType:(unsigned int)arg1;
- (void)addOverlay:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)addPersistentOverlay:(id)arg1;
- (void)removePersistentOverlay:(id)arg1;
- (BOOL)isShowingFlyover;
- (BOOL)canShowFlyover;
- (void)setRendersInBackground:(BOOL)arg1;
- (BOOL)rendersInBackground;
- (id)detailedDescription;
- (void)setLabelScaleFactor:(int)arg1;
- (int)labelScaleFactor;
- (id)visibleTileSets;
- (unsigned int)mapType;
- (void)setDebugConsoleAdditionalInfoProvider:(id)arg1;
- (id)debugConsoleAdditionalInfoProvider;
- (struct CGSize { float x1; float x2; })attributionAnchorOffset;
- (id)nonselectingTapGestureRecognizer;
- (BOOL)shouldSplitRouteLine;
- (void)selectLabelMarker:(id)arg1 animated:(BOOL)arg2;
- (void)setVectorKitStyleDebugEnabled:(BOOL)arg1;
- (BOOL)isVectorKitStyleDebugEnabled;
- (void)setVectorKitConsoleEnabled:(BOOL)arg1;
- (BOOL)isVectorKitConsoleEnabled;
- (BOOL)isDebugConsoleEnabled;
- (void)setUserTrackingZoomStyle:(int)arg1;
- (int)userTrackingZoomStyle;
- (void)setUserInteractionPausesLocationUpdates:(BOOL)arg1;
- (BOOL)userInteractionPausesLocationUpdates;
- (void)setShowingTraffic:(BOOL)arg1;
- (BOOL)showingTraffic;
- (id)selectedAnnotationView;
- (void)setCanSelectAllLabels:(BOOL)arg1;
- (BOOL)canSelectAllLabels;
- (void)setCanSelectPOIs:(BOOL)arg1;
- (BOOL)canSelectPOIs;
- (void)dismissExpandedCallout;
- (void)addViewsForAnnotations:(id)arg1;
- (id)annotationViews;
- (void)performScenicAnimationForLocation:(struct { double x1; double x2; })arg1 animationType:(int)arg2;
- (void)prepareScenicAnimationForLocation:(struct { double x1; double x2; })arg1 animationType:(int)arg2 completion:(id)arg3;
- (id)snapshotImage;
- (void)showAnimationForSearchResult:(id)arg1 withMapRegion:(id)arg2;
- (void)startMotionControl;
- (void)goToCoordinateRegion:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1 animationType:(int)arg2;
- (void)setMapRegion:(id)arg1 animationDuration:(double)arg2 pitch:(double)arg3 yaw:(double)arg4 completion:(id)arg5;
- (BOOL)regionChangeIsUserInitiated;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })defaultInsetsForPinAnnotations;
- (void)restoreViewportFromDictionary:(id)arg1;
- (id)viewportDictionary;
- (void)setLocationPulseEnabled:(BOOL)arg1;
- (BOOL)isLocationPulseEnabled;
- (void)setLocationPropagationEnabled:(BOOL)arg1;
- (BOOL)isLocationPropagationEnabled;
- (void)setAttributionAnchorOffset:(struct CGSize { float x1; float x2; })arg1;
- (void)setShouldSplitRouteLine:(BOOL)arg1;
- (void)setLongPressDuration:(double)arg1;
- (double)longPressDuration;
- (BOOL)hitSomethingAtTouch:(id)arg1;
- (id)calloutPopoverController;
- (void)selectLabelMarker:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3;
- (void)setDebugConsoleEnabled:(BOOL)arg1;
- (void)_handleStyleDebugGesture:(id)arg1;
- (void)_updateDebugConsole;
- (id)_descriptionForLocation:(id)arg1 compact:(BOOL)arg2;
- (void)_stopUpdatingUserLocation;
- (void)_startUpdatingUserLocation;
- (void)replaceAnnotation:(id)arg1 withAnnotation:(id)arg2;
- (void)addAnnotations:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)stopScenicAnimation;
- (void)_goToMapRegion:(id)arg1 animationType:(int)arg2;
- (id)mapRegionThatFits:(id)arg1 edgePadding:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg2;
- (void)setMapRegion:(id)arg1 animated:(BOOL)arg2 completion:(id)arg3;
- (void)_zoomWithAmount:(double)arg1;
- (void)setPanWithMomentum:(BOOL)arg1;
- (BOOL)panWithMomentum;
- (BOOL)isTiltEnabled;
- (BOOL)isRotationEnabled;
- (void)_sizeDidChange;
- (void)setMapDisplayStyle:(int)arg1;
- (BOOL)_supportsVKMapType:(int)arg1;
- (void)deselectLabelMarkerAnimated:(BOOL)arg1;
- (void)_didChangeRegion;
- (void)_willChangeRegion:(BOOL)arg1 userInitiated:(BOOL)arg2;
- (BOOL)isChangingRegion;
- (BOOL)_iconsShouldAlignToPixels;
- (void)_toggleDebugConsole:(id)arg1;
- (void)_updateUserLocationEffects;
- (void)setAllowsPopoverWhenNotInWindow:(BOOL)arg1;
- (BOOL)allowsPopoverWhenNotInWindow;
- (BOOL)allowsMotionControl;
- (BOOL)allowsTilt;
- (void)_handleLongPress:(id)arg1;
- (void)_handleTapToDeselect:(id)arg1;
- (void)_handleTapToSelect:(id)arg1;
- (void)_updateAllowsMotionControl;
- (void)_updateAllowsTilt;
- (void)_updateAllowsRotation;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 gestureRecognizerHostView:(id)arg2;
- (void)locationManagerUpdatedHeading:(id)arg1;
- (BOOL)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (id)viewForAnnotation:(id)arg1;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1;
- (void)addAnnotation:(id)arg1;
- (BOOL)canRotateForHeading;
- (BOOL)isGoingToDefaultLocation;
- (BOOL)isLoadingEnabled;
- (void)annotationManager:(id)arg1 didDeselectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 didSelectAnnotationRepresentation:(id)arg2;
- (id)annotationManager:(id)arg1 representationForAnnotation:(id)arg2;
- (void)annotationManager:(id)arg1 didAddAnnotationRepresentations:(id)arg2;
- (void)moveAnnotationRepresentation:(id)arg1 fromCoordinate:(struct { double x1; double x2; })arg2 animated:(BOOL)arg3 duration:(double)arg4;
- (void)deselectAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2;
- (void)showCalloutIfNecessaryForAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3;
- (void)selectAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3;
- (void)removeAnnotationRepresentation:(id)arg1;
- (void)addAnnotationRepresentation:(id)arg1 allowAnimation:(BOOL)arg2;
- (double)gestureController:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3;
- (void)gestureControllerDidStopTiltingDecelerating:(id)arg1;
- (void)gestureControllerDidStopTilting:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerWillStartTilting:(id)arg1;
- (void)gestureControllerDidStopRotatingDecelerating:(id)arg1;
- (void)gestureControllerDidStopRotating:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerWillStartRotating:(id)arg1;
- (void)gestureControllerDidStopTwoFingerLongPress:(id)arg1;
- (void)gestureControllerWillStartTwoFingerLongPress:(id)arg1;
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(int)arg2;
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(int)arg2 willDecelerate:(BOOL)arg3;
- (void)gestureControllerWillStartZooming:(id)arg1 animated:(BOOL)arg2;
- (void)gestureControllerDidStopPanningDecelerating:(id)arg1;
- (void)gestureControllerDidStopPanning:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerWillStartPanning:(id)arg1;
- (void)gestureControllerDidStopUserInteraction:(id)arg1;
- (void)gestureControllerWillStartUserInteraction:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })annotationContainerVisibleRect:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleRectInView:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleCenteringRectInView:(id)arg1;
- (void)annotationContainerDidDropPins:(id)arg1;
- (void)annotationContainerWillDropPins:(id)arg1;
- (void)annotationContainerDidAnimateBubble:(id)arg1;
- (void)annotationContainerWillAnimateBubble:(id)arg1;
- (float)annotationContainer:(id)arg1 pinDropDistanceForCoordinate:(struct { double x1; double x2; })arg2 maxDistance:(float*)arg3 startPoint:(struct CGPoint { float x1; float x2; }*)arg4 shadowStartPoint:(struct CGPoint { float x1; float x2; }*)arg5;
- (void)annotationContainer:(id)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint { float x1; float x2; })arg2 completionHandler:(id)arg3;
- (void)annotationContainer:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (BOOL)annotationContainerIsRotated:(id)arg1;
- (BOOL)annotationContainerShouldAlignToPixels:(id)arg1;
- (void)setAnnotationDeselectionCallback:(id)arg1;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })mapRectThatFits:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1 edgePadding:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_debugViewFrame;
- (void)removeAnnotations:(id)arg1;
- (void)removeAnnotation:(id)arg1;
- (void)addAnnotation:(id)arg1 allowAnimation:(BOOL)arg2;
- (id)annotations;
- (void)goToCenterCoordinate:(struct { double x1; double x2; })arg1 zoomLevel:(float)arg2 animationType:(int)arg3;
- (struct { double x1; double x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toCoordinateFromView:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertCoordinate:(struct { double x1; double x2; })arg1 toPointToView:(id)arg2;
- (id)_mapRegionWithCenterCoordinate:(struct { double x1; double x2; })arg1 zoomScale:(float)arg2;
- (void)addAnnotations:(id)arg1;
- (float)_zoomScaleForMapRegion:(id)arg1;
- (void)setRotationEnabled:(BOOL)arg1;
- (void)pauseUserLocationUpdates;
- (void)resumeUserLocationUpdates;
- (void)selectAnnotation:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3;
- (id)mapAttributionWithStringAttributes:(id)arg1;
- (void)_annotationViewDragStateChanged:(id)arg1;
- (void)deselectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)selectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)_addDebugGesture;
- (void)_updateIconsShouldAlignToPixels;
- (void)_setUserTrackingMode:(int)arg1 animated:(BOOL)arg2 fromTrackingButton:(BOOL)arg3;
- (void)setUserTrackingMode:(int)arg1 animated:(BOOL)arg2;
- (void)startEffects;
- (void)stopEffects;
- (void)_updateHeadingOrientation;
- (void)setUserTrackingMode:(int)arg1;
- (int)userTrackingMode;
- (BOOL)showsUserLocation;
- (void)setShowsUserLocation:(BOOL)arg1;
- (void)_updateAttribution;
- (void)goToDefaultLocation;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)geoDefaultsDidChange:(id)arg1;
- (id)mapView;
- (void)setLoadingEnabled:(BOOL)arg1;
- (int)_interfaceOrientation;
- (void)contentSizeCategoryDidChange:(id)arg1;
- (float)zoomLevel;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (id)userLocation;
- (BOOL)hasUserLocation;
- (id)mapRegion;
- (void)setMapRegion:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)zoomOut;
- (void)zoomIn;
- (BOOL)allowsRotation;
- (double)yaw;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })edgeInsets;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (void)setEdgeInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (float)_zoomScale;
- (BOOL)isZoomEnabled;
- (void)setZoomEnabled:(BOOL)arg1;
- (void)setScrollEnabled:(BOOL)arg1;
- (BOOL)isZooming;
- (BOOL)isUserInteractionEnabled;
- (BOOL)isRotating;
- (BOOL)isScrollEnabled;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)didMoveToWindow;
- (void)setUserInteractionEnabled:(BOOL)arg1;
- (id)accessibilityContainerElements;
- (id)_accessibilityHitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;

@end
