/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/CloudKit.framework/CloudKit
 */

@class NSData, NSString, CKSharedItemID, NSArray, NSMutableSet, CKShareID, NSMutableArray, NSMapTable;

@interface CKShare : NSObject <NSSecureCoding, NSCopying> {
    bool_isKnownToServer;
    CKShareID *_shareID;
    CKSharedItemID *_sharedItemID;
    NSData *_protectionData;
    NSString *_protectionVersion;
    NSMutableArray *_existingParticipants;
    NSMapTable *_addedParticipantsToOutgoingInvitationsTable;
    NSMutableArray *_removedParticipants;
    NSMutableSet *_pendingServerParticipants;
}

@property(copy) CKShareID * shareID;
@property(copy) CKSharedItemID * sharedItemID;
@property(copy,readonly) NSArray * allParticipants;
@property(retain) NSData * protectionData;
@property(retain) NSString * protectionVersion;
@property bool isKnownToServer;
@property(retain) NSMutableArray * existingParticipants;
@property(retain) NSMapTable * addedParticipantsToOutgoingInvitationsTable;
@property(retain) NSMutableArray * removedParticipants;
@property(retain) NSMutableSet * pendingServerParticipants;

+ (bool)supportsSecureCoding;

- (void)removeParticipant:(id)arg1;
- (void)setProtectionVersion:(id)arg1;
- (id)protectionVersion;
- (id)addParticipantWithEmailAddress:(id)arg1 invitationMessage:(id)arg2 invitationImageURL:(id)arg3;
- (id)addParticipantWithUserRecordID:(id)arg1 invitationMessage:(id)arg2 invitationImageURL:(id)arg3;
- (long long)acceptanceStatusForParticipant:(id)arg1;
- (long long)participantListPermissionForParticipant:(id)arg1;
- (void)setParticipantListPermission:(long long)arg1 forParticipant:(id)arg2;
- (long long)itemPermissionForParticipant:(id)arg1;
- (void)setItemPermission:(long long)arg1 forParticipant:(id)arg2;
- (id)initWithItem:(id)arg1 error:(id*)arg2;
- (void)setPendingServerParticipants:(id)arg1;
- (id)pendingServerParticipants;
- (id)_addParticipantWithUserRecordID:(id)arg1 emailAddress:(id)arg2 invitationMessage:(id)arg3 invitationImageURL:(id)arg4;
- (void)_addParticipant:(id)arg1 invitationMessage:(id)arg2 invitationImageURL:(id)arg3;
- (id)_matchingParticipantWithUserRecordID:(id)arg1 emailAddress:(id)arg2;
- (id)_knownParticipantEqualToParticipant:(id)arg1;
- (id)allParticipants;
- (void)setAddedParticipantsToOutgoingInvitationsTable:(id)arg1;
- (id)addedParticipantsToOutgoingInvitationsTable;
- (void)setRemovedParticipants:(id)arg1;
- (id)removedParticipants;
- (void)setExistingParticipants:(id)arg1;
- (void)setSharedItemID:(id)arg1;
- (id)initWithItem:(id)arg1 shareName:(id)arg2 error:(id*)arg3;
- (id)initWithItem:(id)arg1 shareName:(id)arg2;
- (id)_initWithSharedItemID:(id)arg1 shareID:(id)arg2 error:(id*)arg3;
- (id)_initBare;
- (void)setProtectionData:(id)arg1;
- (id)protectionData;
- (void)_updateFromPendingServerParticipants;
- (void)setIsKnownToServer:(bool)arg1;
- (bool)isKnownToServer;
- (void)_mergeServerParticipants:(id)arg1;
- (id)existingParticipants;
- (void)CKAssignToContainerWithID:(id)arg1;
- (void)setShareID:(id)arg1;
- (id)shareID;
- (id)sharedItemID;
- (id)CKPropertiesDescription;
- (id)init;
- (id)debugDescription;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)initWithItem:(id)arg1;

@end
