/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/CloudKit.framework/CloudKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSObject<OS_dispatch_queue>, NSArray, CKQueryCursor, CKQuery, CKRecordZoneID;

@interface CKQueryOperation : CKDatabaseOperation  {
    bool_shouldFetchAssetContent;
    bool_isFinishing;
    CKQuery *_query;
    CKQueryCursor *_cursor;
    CKRecordZoneID *_zoneID;
    unsigned long long _resultsLimit;
    NSArray *_desiredKeys;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _recordFetchedBlock;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _queryCompletionBlock;

    NSArray *_results;
    CKQueryCursor *_resultsCursor;
    NSObject<OS_dispatch_queue> *_queryResultQueue;
}

@property(copy) CKQuery * query;
@property(copy) CKQueryCursor * cursor;
@property(copy) CKRecordZoneID * zoneID;
@property unsigned long long resultsLimit;
@property(copy) NSArray * desiredKeys;
@property(copy) id recordFetchedBlock;
@property(copy) id queryCompletionBlock;
@property(retain) NSArray * results;
@property(retain) CKQueryCursor * resultsCursor;
@property bool shouldFetchAssetContent;
@property(retain) NSObject<OS_dispatch_queue> * queryResultQueue;
@property bool isFinishing;


- (void)setQueryResultQueue:(id)arg1;
- (void)setShouldFetchAssetContent:(bool)arg1;
- (bool)shouldFetchAssetContent;
- (id)desiredKeys;
- (void)setZoneID:(id)arg1;
- (void)setRecordFetchedBlock:(id)arg1;
- (void)setQueryCompletionBlock:(id)arg1;
- (id)resultsCursor;
- (void)setIsFinishing:(bool)arg1;
- (void)setResultsCursor:(id)arg1;
- (id)queryCompletionBlock;
- (id)queryResultQueue;
- (id)recordFetchedBlock;
- (bool)isFinishing;
- (id)initWithCursor:(id)arg1;
- (void)_handleCompletionCallback:(id)arg1;
- (void)setDesiredKeys:(id)arg1;
- (void)setResultsLimit:(unsigned long long)arg1;
- (unsigned long long)resultsLimit;
- (void)_handleProgressCallback:(id)arg1;
- (void)performCKOperation;
- (bool)CKOperationShouldRun:(id*)arg1;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (id)zoneID;
- (void)fillOutOperationInfo:(id)arg1;
- (id)initWithQuery:(id)arg1;
- (id)cursor;
- (void)setResults:(id)arg1;
- (id)init;
- (id)query;
- (void).cxx_destruct;
- (void)setCursor:(id)arg1;
- (id)results;
- (void)setQuery:(id)arg1;

@end
