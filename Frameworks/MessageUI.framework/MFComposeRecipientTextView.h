/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/MessageUI.framework/MessageUI
 */

@class NSMutableDictionary, <MFComposeRecipientTextViewDelegate>, UIFont, NSMutableArray, UIButton, UIView, UIColor, NSString, _MFAtomTextView, _MFAtomTextAttachment, NSTimer, UITextView, <MFDraggableItem>, NSArray;

@interface MFComposeRecipientTextView : MFComposeHeaderView <UITextViewDelegate, NSLayoutManagerDelegate, MFMultiDragSource, MFMultiDragDestination, MFComposeRecipientAtomDelegate> {
    _MFAtomTextView *_textView;
    UITextView *_inactiveTextView;
    UIColor *_inactiveTextColor;
    UIView *_atomContainerView;
    NSMutableArray *_atomViews;
    NSMutableDictionary *_atomPresentationOptionsByRecipient;
    NSMutableDictionary *_atomLayoutOptionsByRecipient;
    long long _atomViewAnimationDepth;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    } _dragSourceRange;
    <MFDraggableItem> *_pivotItem;
    bool_parentIsClosing;
    bool_textViewExclusionPathsAreValid;
    NSTimer *_inputDelayTimer;
    NSTimer *_collapsableUpdateTimer;
    NSArray *_properties;
    NSMutableArray *_recipientsBeingRemoved;
    bool_editable;
    bool_allowsDragAndDrop;
    bool_separatorHidden;
    bool_focused;
    bool_hasUnsafeRecipients;
    bool_didIgnoreFirstResponderResign;
    int _hideLastAtomComma;
    UIFont *_baseFont;
    long long _maxRecipients;
    double _inputDelay;
    UIButton *_addButton;
    _MFAtomTextAttachment *_placeholderAttachment;
}

@property <MFComposeRecipientTextViewDelegate> * delegate;
@property(copy) NSArray * recipients;
@property(copy) NSArray * addresses;
@property(copy,readonly) NSArray * uncommentedAddresses;
@property bool editable;
@property bool allowsDragAndDrop;
@property(getter=isSeparatorHidden) bool separatorHidden;
@property bool focused;
@property bool hasUnsafeRecipients;
@property(readonly) bool didIgnoreFirstResponderResign;
@property long long maxRecipients;
@property double inputDelay;
@property(readonly) NSString * text;
@property(readonly) UITextView * textView;
@property(readonly) UIButton * addButton;
@property(readonly) double offsetForRowWithTextField;
@property(readonly) unsigned long long numberOfRowsOfTextInField;
@property(retain) UIFont * baseFont;
@property(retain) UIColor * inactiveTextColor;
@property int hideLastAtomComma;
@property(retain) _MFAtomTextAttachment * placeholderAttachment;
@property(readonly) UIView * atomContainerView;

+ (id)defaultFont;

- (void)setBaseFont:(id)arg1;
- (void)setHideLastAtomComma:(int)arg1;
- (int)hideLastAtomComma;
- (void)setMaxRecipients:(long long)arg1;
- (long long)maxRecipients;
- (void)setHasUnsafeRecipients:(bool)arg1;
- (bool)hasUnsafeRecipients;
- (bool)focused;
- (bool)isSeparatorHidden;
- (id)atomContainerView;
- (void)atomTextView:(id)arg1 didChangeWritingDirection:(long long)arg2;
- (void)atomTextViewDidResignFirstResponder:(id)arg1;
- (void)atomTextViewDidBecomeFirstResponder:(id)arg1;
- (id)atomViewsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)invalidateAtomPresentationOptionsForRecipient:(id)arg1;
- (void)setInactiveTextColor:(id)arg1;
- (void)_invalidateAtomPresentationOptionsCache;
- (id)baseFont;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rangeForComposeRecipientAtom:(id)arg1;
- (void)_setValue:(id)arg1 forAtomLayoutOption:(id)arg2 withRecipient:(id)arg3;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_placeholderAttachmentRange;
- (void)setPlaceholderAttachment:(id)arg1;
- (id)_placeholderAttachmentForRecipient:(id)arg1;
- (bool)allowsDragAndDrop;
- (id)placeholderAttachment;
- (void)_removeAddressAtomSubview:(id)arg1;
- (bool)_shouldAnimateAtomViewChanges;
- (void)_addAddressAtomSubview:(id)arg1;
- (id)_valueForAtomLayoutOption:(id)arg1 withRecipient:(id)arg2;
- (void)_resetSelectionState;
- (void)_notifyDelegateOfTextChange:(id)arg1;
- (double)inputDelay;
- (id)_atomViewAtCharacterIndex:(unsigned long long)arg1;
- (void)_insertAtomAttachment:(id)arg1 andReplaceCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (bool)_isAddButtonVisible;
- (bool)_hasUnsafeRecipients;
- (bool)_textViewContainsAtomizedRecipients;
- (id)_baseAttributes;
- (id)_textContainerExclusionPathsWithAddButton:(bool)arg1;
- (bool)_isTextViewCollapsed;
- (id)atomViewForRecipient:(id)arg1;
- (unsigned long long)numberOfRowsOfTextInField;
- (unsigned long long)_atomPresentationOptionsForRecipient:(id)arg1;
- (bool)_canAddAdditionalAtoms;
- (void)_setTextViewIsCollapsed:(bool)arg1 animated:(bool)arg2;
- (id)_userEnteredTextWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg1;
- (void)_didRemoveRecipient:(id)arg1;
- (void)_insertAtomAttachment:(id)arg1 atCharacterIndex:(unsigned long long)arg2;
- (id)_atomAttachmentForRecipient:(id)arg1;
- (void)_beginAtomViewAnimations;
- (void)_addRecord:(void*)arg1 identifier:(int)arg2;
- (void)addRecipient:(id)arg1 index:(unsigned long long)arg2 animate:(bool)arg3;
- (void)_removeAllRecipients;
- (void)_invalidateTextContainerExclusionPaths;
- (void)_updateInactiveTextView;
- (void)_recomputeTextContainerExclusionPaths;
- (bool)_useRightToLeftLayout;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_recipientViewEdgeInsets;
- (void)_setAddButtonVisible:(bool)arg1 animated:(bool)arg2;
- (void)_addButtonTapped:(id)arg1;
- (void)setSeparatorHidden:(bool)arg1;
- (void)invalidateAtomPresentationOptions;
- (id)addButton;
- (void)addRecord:(void*)arg1 property:(int)arg2 identifier:(int)arg3;
- (void)setFocused:(bool)arg1;
- (bool)finishEnteringRecipient;
- (bool)containsAddress:(id)arg1;
- (void)addAddress:(id)arg1;
- (void)setAddresses:(id)arg1;
- (id)itemsForDragAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)allowsDrag;
- (id)supportedDropTypes:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForDroppedItem:(id)arg1;
- (void)animatePlaceholderForDragFailureWithItems:(id)arg1;
- (void)willDropItems:(id)arg1;
- (void)dragStartedWithItems:(id)arg1;
- (id)viewForDraggedItem:(id)arg1 atScale:(double)arg2;
- (bool)shouldCollapseMultipleItems;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForDraggedItem:(id)arg1 isPivotView:(out bool*)arg2;
- (void)dragEnteredAtPoint:(struct CGPoint { double x1; double x2; })arg1 withItems:(id)arg2;
- (void)dragExitedWithItems:(id)arg1;
- (void)dragMovedToPoint:(struct CGPoint { double x1; double x2; })arg1 withItems:(id)arg2;
- (id)destinationViewForDrop;
- (void)dragCompletedWithItems:(id)arg1 success:(bool)arg2;
- (void)dropItems:(id)arg1;
- (id)viewForDragSource;
- (void)parentDidClose;
- (void)parentWillClose;
- (id)uncommentedAddresses;
- (void)setAllowsDragAndDrop:(bool)arg1;
- (void)setInputDelay:(double)arg1;
- (bool)didIgnoreFirstResponderResign;
- (void)setEditable:(bool)arg1 animated:(bool)arg2;
- (double)offsetForRowWithTextField;
- (double)textFieldOffsetForNumberOfRowsToScroll:(unsigned long long)arg1 numberOfRowsAboveField:(long long)arg2;
- (void)refreshPreferredContentSize;
- (void)composeRecipientAtomSelectNext:(id)arg1;
- (void)composeRecipientAtomSelectPrevious:(id)arg1;
- (void)composeRecipientAtomShowPersonCard:(id)arg1;
- (void)deselectComposeRecipientAtom:(id)arg1;
- (void)selectComposeRecipientAtom:(id)arg1;
- (void)reflow;
- (void)setProperty:(int)arg1;
- (void)setProperties:(id)arg1;
- (id)recipients;
- (void)setRecipients:(id)arg1;
- (void)removeRecipient:(id)arg1;
- (void)addRecipient:(id)arg1;
- (bool)becomeFirstResponder;
- (id)text;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)textView;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(bool)arg3;
- (void)setDelegate:(id)arg1;
- (id)addresses;
- (id)delegate;
- (void)dealloc;
- (void)_tapGestureRecognized:(id)arg1;
- (id)inactiveTextColor;
- (void)_longPressGestureRecognized:(id)arg1;
- (bool)editable;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementText:(id)arg3;
- (bool)hasContent;
- (void)setEditable:(bool)arg1;
- (void)setLabel:(id)arg1;
- (void)clearText;
- (void)willMoveToSuperview:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)layoutSubviews;

@end
