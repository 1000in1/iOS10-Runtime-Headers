/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/MessageUI.framework/MessageUI
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSTimer, NSString, DOMRange, NSObject<MFMessageWebLayerDelegate>, NSMutableDictionary, MFLibraryMessage, MFMessageReformattingContext;

@interface MFMessageWebLayer : UIWebBrowserView  {
    NSString *_currentUUID;
    NSTimer *_ignorePendingStylesheetsTimer;
    NSObject<MFMessageWebLayerDelegate> *_mwlDelegate;
    int _displayStyle;
    unsigned int _shouldReformat : 1;
    unsigned int _unitTests : 1;
    unsigned int _isFromEntourage : 1;
    bool_prePrintDataDetectionPending;
    bool_showRemoteImages;
    bool_hasUnloadedRemoteImages;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _postDisplayOperationBlock;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _postDisplayCancellationBlock;

    NSString *_mainFrameURL;
    MFLibraryMessage *_displayInfoCacheLibraryMessage;
    NSMutableDictionary *_displayInfoCache;
    bool_stoppedLoading;
    bool_didReformatMessage;
    NSString *_originalHTMLString;
    MFMessageReformattingContext *_reformattingContext;
    DOMRange *_bottomReplyRange;
    unsigned long long _bottomReplyLastQuoteLevel;
}

@property bool prePrintDataDetectionPending;
@property bool showRemoteImages;
@property bool hasUnloadedRemoteImages;
@property(copy) NSString * originalHTMLString;
@property(retain) MFMessageReformattingContext * reformattingContext;
@property(retain) DOMRange * bottomReplyRange;
@property unsigned long long bottomReplyLastQuoteLevel;

+ (void)clearMessageContentCache;
+ (void)clearUnblockedRemoteImagesCache;
+ (void)endBlockingRemoteImages;
+ (void)beginBlockingRemoteImagesExceptForMessageWebLayer:(id)arg1;
+ (void)initialize;

- (int)displayStyle;
- (bool)_elementHasDefinedWidth:(id)arg1;
- (id)_rangeOfFirstText;
- (void)_didFinishReformattingMessage;
- (bool)_rescaleTopLevelElements;
- (bool)_shouldRescaleMessage;
- (void)_reformattingDidFail;
- (id)_reformatOneElementUsingMethod:(id)arg1 shouldCancel:(bool*)arg2;
- (bool)_shouldContinueResizingMessage;
- (bool)_shouldResizeMessage;
- (void)_willBeginReformattingMessage;
- (void)invalidateDisplayInfoCache;
- (bool)hasUnloadedRemoteImages;
- (void)setShowRemoteImages:(bool)arg1;
- (bool)prePrintDataDetectionPending;
- (id)attachmentDownloadProgressObserversByUniqueIdentifiers;
- (bool)hasPluginWithUninitializedSize;
- (void)displayDidEnd;
- (void)loadFragments:(id)arg1 forLibraryMessage:(id)arg2;
- (void)setMessageIsFromEntourage:(bool)arg1;
- (void)adjustSizeBasedOnMainFrame:(id)arg1;
- (void)updateImageWithSource:(id)arg1 withHTMLRepresentation:(id)arg2 completionBlock:(id)arg3;
- (void)updateInlinePluginWithContentID:(id)arg1 withHTMLRepresentation:(id)arg2 completionBlock:(id)arg3;
- (void)updateImageURL:(id)arg1 withURL:(id)arg2 completionBlock:(id)arg3;
- (void)appendMarkupString:(id)arg1 baseURL:(id)arg2;
- (void)performBatchUpdates:(id)arg1;
- (id)messageWebLayerDelegate;
- (void)setMessageWebLayerDelegate:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 visibleSize:(struct CGSize { double x1; double x2; })arg2 viewportWidth:(double)arg3 displayStyle:(int)arg4;
- (void)saveDisplayInfoCache;
- (void)clearMessageReformattingCache;
- (void)cancelPostDisplayOperation;
- (void)prepareDisplayInfoCacheWithLibraryMessage:(id)arg1;
- (void)_schedulePendingIgnoreStylesheets;
- (void)_frameDidFinishPrePrintURLification:(id)arg1;
- (void)_ignorePendingStylesheets:(id)arg1;
- (bool)canReformatMessageWithoutSubresources:(id)arg1 resultCanBeCached:(bool*)arg2;
- (void)reformatAttachments:(id)arg1;
- (void)reformatMessage:(id)arg1;
- (void)parseDocument:(id)arg1;
- (id)originalHTMLString;
- (void)attemptEarlyMessageReformat;
- (unsigned long long)bottomReplyLastQuoteLevel;
- (id)bottomReplyRange;
- (bool)reformatMessageOnce;
- (void)setPostDisplayOperationBlock:(id)arg1 cancellationBlock:(id)arg2;
- (id)newQuoteSubparser;
- (bool)boolForDisplayInfoCacheKey:(id)arg1;
- (void)setObject:(id)arg1 forDisplayInfoCacheKey:(id)arg2;
- (id)objectForDisplayInfoCacheKey:(id)arg1;
- (void)setBool:(bool)arg1 forDisplayInfoCacheKey:(id)arg2;
- (void)setPrePrintDataDetectionPending:(bool)arg1;
- (void)_cancelPendingIgnoreStylesheets;
- (void)setHasUnloadedRemoteImages:(bool)arg1;
- (void)addUnblockedRemoteImageURL:(id)arg1;
- (bool)showRemoteImages;
- (void)addMessageContentURL:(id)arg1;
- (id)_createInlinePluginElementWithHTMLRepresentation:(id)arg1 inDocument:(id)arg2;
- (void)_replaceElement:(id)arg1 with:(id)arg2;
- (bool)usePadDisplayStyle;
- (void)_sendDelegateSizeDidChange;
- (id)reformattingContext;
- (void)setBottomReplyLastQuoteLevel:(unsigned long long)arg1;
- (void)setBottomReplyRange:(id)arg1;
- (void)setReformattingContext:(id)arg1;
- (void)setOriginalHTMLString:(id)arg1;
- (void)_preferredContentSizeDidChangeNotification:(id)arg1;
- (void)reload;
- (void)stopLoadingAndClear;
- (void)_webthread_webView:(id)arg1 tileDidDraw:(id)arg2;
- (void)_webthread_webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)_webthread_webView:(id)arg1 didFinishDocumentLoadForFrame:(id)arg2;
- (void)webThreadWebView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (void)webThreadWebView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (bool)webView:(id)arg1 shouldPaintBrokenImageForURL:(id)arg2;
- (id)webThreadWebView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (id)webThreadWebView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;
- (void)webView:(id)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)stopLoading:(id)arg1;
- (bool)isCancelled;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)dealloc;
- (double)maximumDoubleTapScale;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)copy:(id)arg1;
- (double)defaultWidth;

@end
