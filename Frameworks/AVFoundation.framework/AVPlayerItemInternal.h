/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class AVWeakReference, AVCustomVideoCompositorSession, NSMutableDictionary, <AVPlayerItemDelegate>, AVPropertyStorage, NSError, AVPlayerItem, AVAsset, NSDate, AVVideoComposition, NSArray, NSObject<OS_dispatch_queue>, AVPlayerConnection, NSDictionary, NSString, AVAudioMix, NSMutableArray, NSURL;

@interface AVPlayerItemInternal : NSObject  {
    AVWeakReference *weakReference;
    AVPlayerItem *previousItem;
    AVPlayerItem *nextItem;
    struct OpaqueFigPlaybackItem { } *figPlaybackItem;
    struct OpaqueFigCPEProtector { } *figCPEProtector;
    struct OpaqueCMTimebase { } *figTimebase;
    <AVPlayerItemDelegate> *delegate;
    AVWeakReference *playerReference;
    AVPlayerConnection *playerConnection;
    BOOL isCurrentPlayerItem;
    NSObject<OS_dispatch_queue> *stateDispatchQueue;
    AVPropertyStorage *propertyStorage;
    int status;
    NSError *error;
    NSURL *URL;
    AVAsset *asset;
    NSArray *automaticallyLoadedAssetKeys;
    AVAsset *assetWithFigPlaybackItem;
    NSArray *trackIDsForAssetWithFigPlaybackItem;
    NSObject<OS_dispatch_queue> *syncLayersQ;
    NSMutableArray *syncLayers;
    NSArray *timedMetadata;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } initialTime;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } initialToleranceBefore;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } initialToleranceAfter;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } forwardPlaybackEndTime;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } reversePlaybackEndTime;
    NSDate *initialDate;
    NSDate *initialEstimatedDate;
    BOOL initialLimitReadAhead;
    int initialPlaybackLikelyToKeepUpTrigger;
    BOOL initialAlwaysMonitorsPlayability;
    BOOL initialWillNeverSeekBackwardsHint;
    BOOL initialContinuesPlayingDuringPrerollForSeek;
    BOOL initialContinuesPlayingDuringPrerollForRateChange;
    double initialBufferingTargetMinimum;
    double initialBufferingTargetMaximum;
    struct __CFString { } *initialFigTimePitchAlgorithm;
    BOOL savesDownloadedDataToDiskWhenDone;
    BOOL nonForcedSubtitlesEnabled;
    BOOL networkUsuallyExceedsMaxBitRate;
    BOOL allowProgressiveSwitchUp;
    float maximumBitRate;
    AVAudioMix *audioMix;
    AVVideoComposition *videoComposition;
    void *figVideoCompositor;
    AVCustomVideoCompositorSession *customVideoCompositorSession;
    BOOL seekingWaitsForVideoCompositionRendering;
    NSArray *textStyleRules;
    NSDictionary *gaplessInfo;
    int initialVariantIndex;
    NSDictionary *audibleDRMInfo;
    NSDictionary *rampInOutInfo;
    float soundCheckVolumeNormalization;
    float volumeAdjustment;
    NSMutableArray *handlersToCallWhenReadyForEnqueueing;
    NSMutableDictionary *mediaOptionsSelectedByClient;
    BOOL haveInitialSamples;
    BOOL haveCPEProtector;
    BOOL didSetAssetToAssetWithFigPlaybackItem;
    BOOL didBecomeReadyForBasicInspection;
    BOOL didBecomeReadyForInspectionOfMediaSelectionOptions;
    BOOL didBecomeReadyForInspectionOfTracks;
    BOOL didBecomeReadyForInspectionOfPresentationSize;
    BOOL didBecomeReadyForInspectionOfDuration;
    BOOL didInformObserversAboutAvailabilityOfTracks;
    BOOL didFireKVOForAssetForNonStreamingItem;
    BOOL didApplyInitialAudioMix;
    BOOL wasInitializedWithURL;
    BOOL needTimedMetadataNotification;
    BOOL externalSubtitlesEnabled;
    BOOL externalProtectionRequested;
    BOOL requiresAccessLog;
    int eqPreset;
    struct OpaqueFigSimpleMutex { } *seekIDMutex;
    int nextSeekIDToGenerate;
    int pendingSeekID;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id seekCompletionHandler;

    NSString *dataYouTubeID;
    NSArray *itemOutputs;
    NSMutableArray *itemVideoOutputs;
    NSMutableArray *itemLegibleOutputs;
    NSString *serviceIdentifier;
    NSString *mediaKind;
    unsigned int restrictions;
}



@end
