/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/SpriteKit.framework/SpriteKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSString, NSMutableDictionary, NSArray, NSMutableArray;

@interface SKShader : NSObject <NSCopying, NSCoding> {
    bool_builtInUniformsDirty;
    bool_programIsDirty;
    double _prevUniformUpdateTime;
    NSMutableArray *_uniforms;
    NSMutableDictionary *_uniformData;
    NSString *_source;
    struct xglProgram { boolx1; unsigned int x2; unsigned int x3; unsigned int x4; struct shared_ptr<char> { char *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; struct shared_ptr<char> { char *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_7_1_1; } x7; struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_8_1_1; } x8; } *_xglProgram;
}

@property(copy) NSString * source;
@property(copy) NSArray * uniforms;
@property struct xglProgram { boolx1; unsigned int x2; unsigned int x3; unsigned int x4; struct shared_ptr<char> { char *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; struct shared_ptr<char> { char *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; /* Warning: unhandled struct encoding: '{map<std::__1::basic_string<char>' */ struct x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; id x65; void*x66; unsigned char x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; inout unsigned short x83; unsigned char x84; void*x85; BOOL x86; void*x87; void*x88; double x89; void*x90; void*x91; void*x92; const int x93; unsigned int x94/* : ? */; void*x95; void*x96; void*x97; double x98; unsigned short x99; void*x100; const int x101; in void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; id x109; void*x110; unsigned char x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; long x130; int x131; BOOL x132; void*x133; void*x134; int x135; out in short x136; void*x137; void*x138; BOOL x139; out double x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; unsigned char x148; out in void*x149; void*x150; in void*x151; short x152; void*x153; void*x154; void*x155; void x156; void*x157; long x158; out void*x159; void*x160; const void*x161; void*x162; long x163; void*x164; void*x165; float x166; out const void*x167; short x168; void*x169; int x170; void*x171; void*x172; out in void*x173; unsigned short x174; int x175; void*x176; void*x177; long x178; void*x179; void*x180; out const void*x181; void*x182; long x183; void*x184; void*x185; float x186; out const void*x187; void*x188; void*x189; void*x190; void x191; void*x192; long x193; out void*x194; void*x195; const void*x196; unsigned short x197; void*x198; void*x199; short x200; void*x201; int x202; void*x203; void*x204; out in void*x205; unsigned short x206; int x207; void*x208; void*x209; long x210; void*x211; void*x212; out const void*x213; void*x214; void*x215; void*x216; short x217; double x218; void*x219; void*x220; unsigned short x221; void*x222; short x223; void*x224; void*x225; void*x226; void*x227; unsigned long x228; int x229; unsigned int x230/* : ? */; const void*x231; const void*x232; void*x233; void*x234; const int x235; void x236; void*x237; void*x238; void*x239; void*x240; const void*x241; void*x242; void*x243; void*x244; out const void*x245; short x246; void*x247; void*x248; unsigned int x249; void*x250; out void*x251; in double x252; void*x253; void*x254; int x255; out in void*x256; float x257; const void*x258; void*x259; void*x260; void*x261; out const void*x262; void*x263; void*x264; unsigned int x265; void*x266; out void*x267; in double x268; void*x269; void*x270; int x271; out in void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; int x279; unsigned char x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; unsigned char x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; char *x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; char *x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; unsigned char x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; char *x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; char *x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; id x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; struct x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; id x514; void*x515; unsigned char x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; inout unsigned short x531; void*x532; void*x533; void*x534; void*x535; unsigned int x536/* : ? */; long x537; void*x538; void*x539; void*x540; void*x541; const int x542; unsigned int x543/* : ? */; void*x544; void*x545; void*x546; double x547; unsigned short x548; void*x549; const int x550; in void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; id x558; void*x559; unsigned char x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; long x579; int x580; BOOL x581; void*x582; void*x583; int x584; out in short x585; void*x586; void*x587; BOOL x588; out double x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; unsigned char x597; out in void*x598; void*x599; in void*x600; short x601; void*x602; void*x603; void*x604; void x605; void*x606; long x607; out void*x608; void*x609; const void*x610; void*x611; long x612; void*x613; void*x614; float x615; out const void*x616; short x617; void*x618; int x619; void*x620; void*x621; out in void*x622; unsigned short x623; int x624; void*x625; void*x626; long x627; void*x628; void*x629; out const void*x630; void*x631; long x632; void*x633; void*x634; float x635; out const void*x636; void*x637; void*x638; void*x639; void x640; void*x641; long x642; out void*x643; void*x644; const void*x645; unsigned short x646; void*x647; void*x648; short x649; void*x650; int x651; void*x652; void*x653; out in void*x654; unsigned short x655; int x656; void*x657; void*x658; long x659; void*x660; void*x661; out const void*x662; void*x663; void*x664; void*x665; short x666; double x667; void*x668; void*x669; unsigned short x670; void*x671; short x672; void*x673; void*x674; void*x675; void*x676; unsigned long x677; int x678; unsigned int x679/* : ? */; const void*x680; const void*x681; void*x682; void*x683; const void*x684; void*x685; void*x686; void*x687; out const void*x688; short x689; void*x690; void*x691; out void*x692; in double x693; void*x694; void*x695; int x696; out in void*x697; float x698; const void*x699; void*x700; void*x701; void*x702; out const void*x703; void*x704; void*x705; out void*x706; in double x707; void*x708; void*x709; int x710; out in void*x711; void*x712; int x713; unsigned char x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; boolx753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; unsigned char x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; char *x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; char *x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; unsigned char x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; char *x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; char *x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; struct x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; void*x925; void*x926; void*x927; void*x928; void*x929; void*x930; id x931; void*x932; unsigned char x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; void*x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; inout unsigned short x948; void*x949; void*x950; void*x951; const int x952; unsigned int x953/* : ? */; void*x954; void*x955; void*x956; double x957; unsigned short x958; void*x959; const int x960; in void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; id x975; void*x976; unsigned char x977; void*x978; void*x979; void*x980; void*x981; void*x982; void*x983; void*x984; void*x985; void*x986; void*x987; void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; long x996; int x997; BOOL x998; void*x999; void*x1000; int x1001; out in short x1002; void*x1003; void*x1004; BOOL x1005; out double x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; unsigned char x1014; out in void*x1015; void*x1016; in void*x1017; short x1018; void*x1019; void*x1020; void*x1021; void x1022; void*x1023; long x1024; out void*x1025; void*x1026; const void*x1027; void*x1028; long x1029; void*x1030; void*x1031; float x1032; out const void*x1033; short x1034; void*x1035; int x1036; void*x1037; void*x1038; out in void*x1039; unsigned short x1040; int x1041; void*x1042; void*x1043; long x1044; void*x1045; void*x1046; out const void*x1047; void*x1048; long x1049; void*x1050; void*x1051; float x1052; out const void*x1053; void*x1054; void*x1055; void*x1056; void x1057; void*x1058; long x1059; out void*x1060; void*x1061; const void*x1062; unsigned short x1063; void*x1064; void*x1065; short x1066; void*x1067; int x1068; void*x1069; void*x1070; out in void*x1071; unsigned short x1072; int x1073; void*x1074; void*x1075; long x1076; void*x1077; void*x1078; out const void*x1079; void*x1080; void*x1081; void*x1082; short x1083; double x1084; void*x1085; void*x1086; unsigned short x1087; void*x1088; short x1089; void*x1090; void*x1091; void*x1092; void*x1093; unsigned long x1094; int x1095; unsigned int x1096/* : ? */; const void*x1097; const void*x1098; void*x1099; void*x1100; const void*x1101; void*x1102; void*x1103; void*x1104; out const void*x1105; short x1106; void*x1107; void*x1108; out void*x1109; in double x1110; void*x1111; void*x1112; int x1113; out in void*x1114; float x1115; const void*x1116; void*x1117; void*x1118; void*x1119; out const void*x1120; void*x1121; void*x1122; out void*x1123; in double x1124; void*x1125; void*x1126; int x1127; out in void*x1128; void*x1129; int x1130; unsigned char x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; void*x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; void*x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; void*x1165; void*x1166; void*x1167; void*x1168; void*x1169; }* _xglProgram; /* unknown property attribute:  true> >=Q}}}} */
@property(readonly) NSArray * _textureUniforms;

+ (id)shaderWithFileNamed:(id)arg1;
+ (id)shaderWithSource:(id)arg1;
+ (id)shaderWithSource:(id)arg1 uniforms:(id)arg2;
+ (id)shader;

- (id)_getShaderCompilationLog;
- (void)set_xglProgram:(struct xglProgram { boolx1; unsigned int x2; unsigned int x3; unsigned int x4; struct shared_ptr<char> { char *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; struct shared_ptr<char> { char *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_7_1_1; } x7; struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_8_1_1; } x8; }*)arg1;
- (id)_textureUniforms;
- (struct xglProgram { boolx1; unsigned int x2; unsigned int x3; unsigned int x4; struct shared_ptr<char> { char *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; struct shared_ptr<char> { char *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_7_1_1; } x7; struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_8_1_1; } x8; }*)_syncUniformsForTime:(double)arg1;
- (void)removeUniformNamed:(id)arg1;
- (id)uniformNamed:(id)arg1;
- (void)addUniform:(id)arg1;
- (id)uniforms;
- (struct xglProgram { boolx1; unsigned int x2; unsigned int x3; unsigned int x4; struct shared_ptr<char> { char *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; struct shared_ptr<char> { char *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_7_1_1; } x7; struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_8_1_1; } x8; }*)_xglProgram;
- (struct xglProgram { boolx1; unsigned int x2; unsigned int x3; unsigned int x4; struct shared_ptr<char> { char *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; struct shared_ptr<char> { char *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_7_1_1; } x7; struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_8_1_1; } x8; }*)_updateUniforms;
- (void)_createProgram;
- (void)setUniforms:(id)arg1;
- (id)initWithSource:(id)arg1 uniforms:(id)arg2;
- (id)source;
- (id)initWithSource:(id)arg1;
- (void)setSource:(id)arg1;
- (id)init;
- (bool)isValid;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;

@end
