/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/Frameworks/SpriteKit.framework/SpriteKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSObject<OS_dispatch_queue>, SKLabelNode, SKDisplayLink, SKScene, EAGLContext, NSMutableDictionary, NSData;

@interface SKView : UIView  {
    unsigned int _frameInterval;
    SKDisplayLink *_displayLink;
    NSObject<OS_dispatch_queue> *_updateQueue;
    double _timePreviousUpdate;
    SKLabelNode *_statsLabel;
    float _prevViewAspect;
    unsigned int _spritesRendered;
    unsigned int _spritesSubmitted;
    int _frames;
    unsigned int _prevSpritesRendered;
    unsigned int _prevSpritesRenderedSubmitted;
    double _timeBeginFrameCount;
    float _fps;
    EAGLContext *_context;
    unsigned int _colorRenderBuffer;
    unsigned int _depthStencilRenderBuffer;
    unsigned int _frameBuffer;
    BOOL _usesAsyncUpdateQueue;
    BOOL _hasRenderedOnce;
    BOOL _hasRenderedForCurrentUpdate;
    BOOL _isInTransition;
    BOOL _disableInput;
    float _transitionDuration;
    float _transitionTime;
    SKScene *_nextScene;
    SKScene *_scene;
    BOOL _paused;
    NSData *_spriteArrayHint;

  /* Error parsing encoded ivar type info: ^{SKCRenderer=[12i]@@ccff@@{?=I{?={?=ff}{?=ff}}I(_GLKMatrix4={?=ffffffffffffffff}[16f])III{?=ffff}i{?=ff}{?=IIII{?=ff}c}}{?=I{?={?=ff}{?=ff}}I(_GLKMatrix4={?=ffffffffffffffff}[16f])III{?=ffff}i{?=ff}{?=IIII{?=ff}c}}{stack<PKRect, std::__1::deque<PKRect, std::__1::allocator<PKRect> > >={deque<PKRect, std::__1::allocator<PKRect> >={__split_buffer<PKRect *, std::__1::allocator<PKRect *> >=^^{?}^^{?}^^{?}{__compressed_pair<PKRect **, std::__1::allocator<PKRect *> >=^^{?}}}I{__compressed_pair<unsigned long, std::__1::allocator<PKRect> >=L}}}{stack<_GLKMatrix4, std::__1::deque<_GLKMatrix4, std::__1::allocator<_GLKMatrix4> > >={deque<_GLKMatrix4, std::__1::allocator<_GLKMatrix4> >={__split_buffer<_GLKMatrix4 *, std::__1::allocator<_GLKMatrix4 *> >=^^(_GLKMatrix4)^^(_GLKMatrix4)^^(_GLKMatrix4){__compressed_pair<_GLKMatrix4 **, std::__1::allocator<_GLKMatrix4 *> >=^^(_GLKMatrix4)}}I{__compressed_pair<unsigned long, std::__1::allocator<_GLKMatrix4> >=L}}}{stack<SKCTextureAttachment, std::__1::deque<SKCTextureAttachment, std::__1::allocator<SKCTextureAttachment> > >={deque<SKCTextureAttachment, std::__1::allocator<SKCTextureAttachment> >={__split_buffer<SKCTextureAttachment *, std::__1::allocator<SKCTextureAttachment *> >=^^{?}^^{?}^^{?}{__compressed_pair<SKCTextureAttachment **, std::__1::allocator<SKCTextureAttachment *> >=^^{?}}}I{__compressed_pair<unsigned long, std::__1::allocator<SKCTextureAttachment> >=L}}}{?=ff}{?=ff}{?={?=ff}{?=ff}}(_GLKMatrix4={?=ffffffffffffffff}[16f]){SKCRenderPassNew=I(_GLKMatrix4={?=ffffffffffffffff}[16f])ILIIi{?={?=ff}{?=ff}}BBBBBBBBB{?=IIII{?=ff}c}BBBBBBBBI{?=ffff}@{?={?=ff}{?=ff}}{?={?=ff}{?=ff}}{?=ff}fIB*@}IiififIIIIIIffIIdfIi@@@@BB{list<SKCRenderPassNew, std::__1::allocator<SKCRenderPassNew> >={__list_node_base<SKCRenderPassNew, void *>=^{__list_node<SKCRenderPassNew, void *>}^{__list_node<SKCRenderPassNew, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCRenderPassNew, void *> > >=L}}II^S[10500{?=[4{?=[4C][3f][2f]}]}]IIIIIIIII@iII{list<SKCSprite *, std::__1::allocator<SKCSprite *> >={__list_node_base<SKCSprite *, void *>=^{__list_node<SKCSprite *, void *>}^{__list_node<SKCSprite *, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCSprite *, void *> > >=L}}@BBBBBBBBBB} */
    struct SKCRenderer { int x1[12]; id x2; id x3; BOOL x4; BOOL x5; float x6; float x7; id x8; id x9; struct { unsigned int x_10_1_1; struct { struct { float x_1_3_1; float x_1_3_2; } x_2_2_1; struct { float x_2_3_1; float x_2_3_2; } x_2_2_2; } x_10_1_2; unsigned int x_10_1_3; union _GLKMatrix4 { struct { float x_1_3_1; float x_1_3_2; float x_1_3_3; float x_1_3_4; float x_1_3_5; float x_1_3_6; float x_1_3_7; float x_1_3_8; float x_1_3_9; float x_1_3_10; float x_1_3_11; float x_1_3_12; float x_1_3_13; float x_1_3_14; float x_1_3_15; float x_1_3_16; } x_4_2_1; float x_4_2_2[16]; } x_10_1_4; unsigned int x_10_1_5; unsigned int x_10_1_6; unsigned int x_10_1_7; struct { float x_8_2_1; float x_8_2_2; float x_8_2_3; float x_8_2_4; } x_10_1_8; int x_10_1_9; struct { float x_10_2_1; float x_10_2_2; } x_10_1_10; struct { unsigned int x_11_2_1; unsigned int x_11_2_2; unsigned int x_11_2_3; unsigned int x_11_2_4; struct { float x_5_3_1; float x_5_3_2; } x_11_2_5; BOOL x_11_2_6; } x_10_1_11; } x10; struct { unsigned int x_11_1_1; struct { struct { float x_1_3_1; float x_1_3_2; } x_2_2_1; struct { float x_2_3_1; float x_2_3_2; } x_2_2_2; } x_11_1_2; unsigned int x_11_1_3; union _GLKMatrix4 { struct { float x_1_3_1; float x_1_3_2; float x_1_3_3; float x_1_3_4; float x_1_3_5; float x_1_3_6; float x_1_3_7; float x_1_3_8; float x_1_3_9; float x_1_3_10; float x_1_3_11; float x_1_3_12; float x_1_3_13; float x_1_3_14; float x_1_3_15; float x_1_3_16; } x_4_2_1; float x_4_2_2[16]; } x_11_1_4; unsigned int x_11_1_5; unsigned int x_11_1_6; unsigned int x_11_1_7; struct { float x_8_2_1; float x_8_2_2; float x_8_2_3; float x_8_2_4; } x_11_1_8; int x_11_1_9; struct { float x_10_2_1; float x_10_2_2; } x_11_1_10; struct { unsigned int x_11_2_1; unsigned int x_11_2_2; unsigned int x_11_2_3; unsigned int x_11_2_4; struct { float x_5_3_1; float x_5_3_2; } x_11_2_5; BOOL x_11_2_6; } x_11_1_11; } x11; struct stack<PKRect, std::__1::deque<PKRect, std::__1::allocator<PKRect> > > { struct deque<PKRect, std::__1::allocator<PKRect> > { struct __split_buffer<PKRect *, std::__1::allocator<PKRect *> > { struct { /* ? */ } **x_1_3_1; struct { /* ? */ } **x_1_3_2; struct { /* ? */ } **x_1_3_3; struct __compressed_pair<PKRect **, std::__1::allocator<PKRect *> > { struct { /* ? */ } **x_4_4_1; } x_1_3_4; } x_1_2_1; unsigned int x_1_2_2; struct __compressed_pair<unsigned long, std::__1::allocator<PKRect> > { unsigned long x_3_3_1; } x_1_2_3; } x_12_1_1; } x12; struct stack<_GLKMatrix4, std::__1::deque<_GLKMatrix4, std::__1::allocator<_GLKMatrix4> > > { struct deque<_GLKMatrix4, std::__1::allocator<_GLKMatrix4> > { struct __split_buffer<_GLKMatrix4 *, std::__1::allocator<_GLKMatrix4 *> > { union { /* Warning: Unrecognized filer type: '_' using 'void*' */ void*x_1_4_1; void*x_1_4_2; unsigned long x_1_4_3; void*x_1_4_4; void*x_1_4_5; void*x_1_4_6; void*x_1_4_7; const int x_1_4_8; void*x_1_4_9; void*x_1_4_10; } **x_1_3_1; union { void*x_2_4_1; void*x_2_4_2; unsigned long x_2_4_3; void*x_2_4_4; void*x_2_4_5; void*x_2_4_6; void*x_2_4_7; const int x_2_4_8; void*x_2_4_9; void*x_2_4_10; } **x_1_3_2; union { void*x_3_4_1; void*x_3_4_2; unsigned long x_3_4_3; void*x_3_4_4; void*x_3_4_5; void*x_3_4_6; void*x_3_4_7; const int x_3_4_8; void*x_3_4_9; void*x_3_4_10; } **x_1_3_3; struct __compressed_pair<_GLKMatrix4 **, std::__1::allocator<_GLKMatrix4 *> > { union { void*x_1_5_1; void*x_1_5_2; unsigned long x_1_5_3; void*x_1_5_4; void*x_1_5_5; void*x_1_5_6; void*x_1_5_7; const int x_1_5_8; void*x_1_5_9; void*x_1_5_10; } **x_4_4_1; } x_1_3_4; } x_1_2_1; unsigned int x_1_2_2; struct __compressed_pair<unsigned long, std::__1::allocator<_GLKMatrix4> > { unsigned long x_3_3_1; } x_1_2_3; } x_13_1_1; } x13; struct stack<SKCTextureAttachment, std::__1::deque<SKCTextureAttachment, std::__1::allocator<SKCTextureAttachment> > > { struct deque<SKCTextureAttachment, std::__1::allocator<SKCTextureAttachment> > { struct __split_buffer<SKCTextureAttachment *, std::__1::allocator<SKCTextureAttachment *> > { struct { /* ? */ } **x_1_3_1; struct { /* ? */ } **x_1_3_2; struct { /* ? */ } **x_1_3_3; struct __compressed_pair<SKCTextureAttachment **, std::__1::allocator<SKCTextureAttachment *> > { struct { /* ? */ } **x_4_4_1; } x_1_3_4; } x_1_2_1; unsigned int x_1_2_2; struct __compressed_pair<unsigned long, std::__1::allocator<SKCTextureAttachment> > { unsigned long x_3_3_1; } x_1_2_3; } x_14_1_1; } x14; struct { float x_15_1_1; float x_15_1_2; } x15; struct { float x_16_1_1; float x_16_1_2; } x16; struct { struct { float x_1_2_1; float x_1_2_2; } x_17_1_1; struct { float x_2_2_1; float x_2_2_2; } x_17_1_2; } x17; union _GLKMatrix4 { struct { float x_1_2_1; float x_1_2_2; float x_1_2_3; float x_1_2_4; float x_1_2_5; float x_1_2_6; float x_1_2_7; float x_1_2_8; float x_1_2_9; float x_1_2_10; float x_1_2_11; float x_1_2_12; float x_1_2_13; float x_1_2_14; float x_1_2_15; float x_1_2_16; } x_18_1_1; float x_18_1_2[16]; } x18; struct SKCRenderPassNew { unsigned int x_19_1_1; union _GLKMatrix4 { struct { float x_1_3_1; float x_1_3_2; float x_1_3_3; float x_1_3_4; float x_1_3_5; float x_1_3_6; float x_1_3_7; float x_1_3_8; float x_1_3_9; float x_1_3_10; float x_1_3_11; float x_1_3_12; float x_1_3_13; float x_1_3_14; float x_1_3_15; float x_1_3_16; } x_2_2_1; float x_2_2_2[16]; } x_19_1_2; unsigned int x_19_1_3; unsigned long x_19_1_4; unsigned int x_19_1_5; unsigned int x_19_1_6; int x_19_1_7; struct { struct { float x_1_3_1; float x_1_3_2; } x_8_2_1; struct { float x_2_3_1; float x_2_3_2; } x_8_2_2; } x_19_1_8; boolx_19_1_9; boolx_19_1_10; boolx_19_1_11; boolx_19_1_12; boolx_19_1_13; boolx_19_1_14; boolx_19_1_15; boolx_19_1_16; boolx_19_1_17; struct { unsigned int x_18_2_1; unsigned int x_18_2_2; unsigned int x_18_2_3; unsigned int x_18_2_4; struct { float x_5_3_1; float x_5_3_2; } x_18_2_5; BOOL x_18_2_6; } x_19_1_18; boolx_19_1_19; boolx_19_1_20; boolx_19_1_21; boolx_19_1_22; boolx_19_1_23; boolx_19_1_24; boolx_19_1_25; boolx_19_1_26; unsigned int x_19_1_27; struct { float x_28_2_1; float x_28_2_2; float x_28_2_3; float x_28_2_4; } x_19_1_28; id x_19_1_29; struct { struct { float x_1_3_1; float x_1_3_2; } x_30_2_1; struct { float x_2_3_1; float x_2_3_2; } x_30_2_2; } x_19_1_30; struct { struct { float x_1_3_1; float x_1_3_2; } x_31_2_1; struct { float x_2_3_1; float x_2_3_2; } x_31_2_2; } x_19_1_31; struct { float x_32_2_1; float x_32_2_2; } x_19_1_32; float x_19_1_33; unsigned int x_19_1_34; boolx_19_1_35; char *x_19_1_36; id x_19_1_37; } x19; unsigned int x20; int x21; int x22; float x23; int x24; float x25; unsigned int x26; unsigned int x27; unsigned int x28; unsigned int x29; unsigned int x30; unsigned int x31; float x32; float x33; unsigned int x34; unsigned int x35; double x36; float x37; unsigned int x38; int x39; id x40; id x41; id x42; id x43; boolx44; boolx45; struct list<SKCRenderPassNew, std::__1::allocator<SKCRenderPassNew> > { struct __list_node_base<SKCRenderPassNew, void *> { struct __list_node<SKCRenderPassNew, void *> {} *x_1_2_1; struct __list_node<SKCRenderPassNew, void *> {} *x_1_2_2; } x_46_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCRenderPassNew, void *> > > { unsigned long x_2_2_1; } x_46_1_2; } x46; unsigned int x47; unsigned int x48; unsigned short *x49; struct { struct { unsigned char x_1_2_1[4]; float x_1_2_2[3]; float x_1_2_3[2]; } x_50_1_1[4]; } x50[10500]; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; unsigned int x56; unsigned int x57; unsigned int x58; unsigned int x59; id x60; int x61; unsigned int x62; unsigned int x63; struct list<SKCSprite *, std::__1::allocator<SKCSprite *> > { struct __list_node_base<SKCSprite *, void *> { struct __list_node<SKCSprite *, void *> {} *x_1_2_1; struct __list_node<SKCSprite *, void *> {} *x_1_2_2; } x_64_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCSprite *, void *> > > { unsigned long x_2_2_1; } x_64_1_2; } x64; id x65; boolx66; boolx67; boolx68; boolx69; boolx70; boolx71; boolx72; boolx73; boolx74; boolx75; } *_renderer;

    NSMutableDictionary *_touchMap;
    float _prevBackingScaleFactor;
    NSObject<OS_dispatch_queue> *_renderQueue;
    BOOL showsFPS;
    BOOL showsNodeCount;
}

@property BOOL _shouldCenterStats;
@property BOOL _showsCoreAnimationFPS;
@property BOOL _showsGPUStats;
@property BOOL _showsCPUStats;
@property BOOL _showsCulledNodesInNodeCount;
@property BOOL _showsTotalAreaRendered;
@property BOOL _showsSpriteBounds;
@property(readonly) SKScene * _scene;
@property(readonly) SKScene * _nextScene;
@property(readonly) float _fps;
@property(readonly) int _spriteRenderCount;
@property(readonly) int _spriteSubmitCount;
@property BOOL _usesAsyncUpdateQueue;
@property(getter=isPaused) BOOL paused;
@property BOOL showsFPS;
@property BOOL showsDrawCount;
@property BOOL showsNodeCount;
@property(getter=isAsynchronous) BOOL asynchronous;
@property int frameInterval;
@property(readonly) SKScene * scene;
@property(readonly) struct CGSize { float x1; float x2; } pixelSize;
@property(retain) EAGLContext * _context;

+ (Class)layerClass;

- (int)_spriteSubmitCount;
- (int)_spriteRenderCount;
- (void)_showAllStats;
- (BOOL)_showsTotalAreaRendered;
- (BOOL)_showsCulledNodesInNodeCount;
- (BOOL)_showsGPUStats;
- (BOOL)_showsCPUStats;
- (BOOL)_showsCoreAnimationFPS;
- (BOOL)_shouldCenterStats;
- (void)set_shouldCenterStats:(BOOL)arg1;
- (BOOL)_showsSpriteBounds;
- (void)set_showsSpriteBounds:(BOOL)arg1;
- (void)renderToOpenGLTextureId:(unsigned int)arg1 size:(struct CGSize { float x1; float x2; })arg2 scaleFactor:(float)arg3;
- (void)set_showsTotalAreaRendered:(BOOL)arg1;
- (void)set_showsCoreAnimationFPS:(BOOL)arg1;
- (void)set_showsCPUStats:(BOOL)arg1;
- (void)set_showsGPUStats:(BOOL)arg1;
- (void)set_showsCulledNodesInNodeCount:(BOOL)arg1;
- (id)_scene;
- (id)_nextScene;
- (float)_fps;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 updateQueue:(id)arg2;
- (id)textureFromNode:(id)arg1;
- (BOOL)showsDrawCount;
- (void)setShowsDrawCount:(BOOL)arg1;
- (BOOL)showsNodeCount;
- (BOOL)showsFPS;
- (BOOL)showsSpriteBounds;
- (void)writeContentsToPNG:(id)arg1;
- (void)presentScene:(id)arg1 transition:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 fromScene:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toScene:(id)arg2;
- (BOOL)_usesAsyncUpdateQueue;
- (void)set_usesAsyncUpdateQueue:(BOOL)arg1;
- (id)_textureFromNode:(id)arg1;
- (void)startRenderCallbacks;
- (void)_setupContext;
- (void)_renderContent;
- (void)renderContent;
- (void)presentScene:(id)arg1;
- (void)remakeFramebuffer:(float)arg1;
- (void)setUpRenderCallback;
- (void)setShowsNodeCount:(BOOL)arg1;
- (void)setShowsFPS:(BOOL)arg1;
- (void)setShowsSpriteBounds:(BOOL)arg1;
- (void)set_context:(id)arg1;
- (void)bindOpenGLContext;
- (void)stopRenderCallbacks;
- (void)renderCallback:(double)arg1;
- (id)scene;
- (struct CGSize { float x1; float x2; })pixelSize;
- (void)_initialize;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setAsynchronous:(BOOL)arg1;
- (BOOL)isOpaque;
- (void)displayLayer:(id)arg1;
- (int)frameInterval;
- (id)init;
- (void)dealloc;
- (void).cxx_destruct;
- (void)setPaused:(BOOL)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (id)snapshot;
- (id)_context;
- (void)setFrameInterval:(int)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)layoutSubviews;
- (BOOL)isPaused;
- (BOOL)isAsynchronous;
- (void)_update:(double)arg1;
- (id)initWithCoder:(id)arg1;

@end
