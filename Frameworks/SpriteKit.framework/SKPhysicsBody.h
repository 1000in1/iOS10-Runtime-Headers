/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/Frameworks/SpriteKit.framework/SpriteKit
 */

@class SKNode, NSArray;

@interface SKPhysicsBody : NSObject <NSCopying, NSCoding> {
    BOOL _dynamic;
    BOOL _usesPreciseCollisionDetection;
    BOOL _allowsRotation;
    BOOL _resting;
    BOOL _affectedByGravity;
    float _friction;
    float _restitution;
    float _linearDamping;
    float _angularDamping;
    float _density;
    float _mass;
    float _area;
    unsigned int _categoryBitMask;
    unsigned int _collisionBitMask;
    unsigned int _contactTestBitMask;
    NSArray *_joints;
    SKNode *_node;
    float _angularVelocity;
    struct CGVector { 
        float dx; 
        float dy; 
    } _velocity;
}

@property(getter=isDynamic) BOOL dynamic;
@property BOOL usesPreciseCollisionDetection;
@property BOOL allowsRotation;
@property(getter=isResting) BOOL resting;
@property float friction;
@property float restitution;
@property float linearDamping;
@property float angularDamping;
@property float density;
@property float mass;
@property(readonly) float area;
@property BOOL affectedByGravity;
@property unsigned int categoryBitMask;
@property unsigned int collisionBitMask;
@property unsigned int contactTestBitMask;
@property(readonly) NSArray * joints;
@property(readonly) SKNode * node;
@property struct CGVector { float x1; float x2; } velocity;
@property float angularVelocity;

+ (id)bodyWithEdgeLoopFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
+ (id)bodyWithEdgeChainFromPath:(struct CGPath { }*)arg1;
+ (id)bodyWithPolygonFromPath:(struct CGPath { }*)arg1;
+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)copyWithZone:(struct _NSZone { }*)arg1;
+ (id)bodyWithEdgeFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2;
+ (id)bodyWithEdgeLoopFromPath:(struct CGPath { }*)arg1;
+ (id)bodyWithCircleOfRadius:(float)arg1;
+ (id)bodyWithRectangleOfSize:(struct CGSize { float x1; float x2; })arg1;

- (id)allContactedBodies;
- (float)area;
- (id)joints;
- (BOOL)isResting;
- (void)applyAngularImpulse:(float)arg1;
- (void)applyImpulse:(struct CGVector { float x1; float x2; })arg1 atPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)applyTorque:(float)arg1;
- (void)applyForce:(struct CGVector { float x1; float x2; })arg1;
- (void)applyForce:(struct CGVector { float x1; float x2; })arg1 atPoint:(struct CGPoint { float x1; float x2; })arg2;
- (float)mass;
- (void)setResting:(BOOL)arg1;
- (void)setAngularVelocity:(float)arg1;
- (void)setVelocity:(struct CGVector { float x1; float x2; })arg1;
- (void)setContactTestBitMask:(unsigned int)arg1;
- (void)setCollisionBitMask:(unsigned int)arg1;
- (void)setCategoryBitMask:(unsigned int)arg1;
- (void)setAffectedByGravity:(BOOL)arg1;
- (void)setDensity:(float)arg1;
- (void)setRestitution:(float)arg1;
- (void)setFriction:(float)arg1;
- (void)setAllowsRotation:(BOOL)arg1;
- (void)setUsesPreciseCollisionDetection:(BOOL)arg1;
- (void)setDynamic:(BOOL)arg1;
- (float)angularVelocity;
- (struct CGVector { float x1; float x2; })velocity;
- (unsigned int)contactTestBitMask;
- (unsigned int)collisionBitMask;
- (unsigned int)categoryBitMask;
- (BOOL)affectedByGravity;
- (float)density;
- (float)restitution;
- (float)friction;
- (BOOL)allowsRotation;
- (BOOL)usesPreciseCollisionDetection;
- (BOOL)isDynamic;
- (void).cxx_destruct;
- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)node;
- (void)applyImpulse:(struct CGVector { float x1; float x2; })arg1;
- (float)angularDamping;
- (float)linearDamping;
- (void)setAngularDamping:(float)arg1;
- (void)setLinearDamping:(float)arg1;
- (void)setMass:(float)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end
