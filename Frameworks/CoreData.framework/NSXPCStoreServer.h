/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/CoreData.framework/CoreData
 */

@class NSXPCStoreServerNotificationManager, NSString, NSArray, NSURL, NSDictionary, NSXPCStoreServerRequestHandlingPolicy, NSObject<OS_dispatch_queue>, NSXPCListener, NSManagedObjectModel, NSMapTable;

@interface NSXPCStoreServer : NSObject <NSXPCServerProtocol> {
    id _delegate;
    NSURL *_modelURL;
    NSManagedObjectModel *_model;
    NSURL *_storeURL;
    NSDictionary *_storeOptions;
    NSObject<OS_dispatch_queue> *_queue;
    NSArray *_entitlementNames;
    NSXPCListener *_listener;
    NSXPCStoreServerRequestHandlingPolicy *_policy;
    NSMapTable *_connectionToCoordinatorMap;
    NSXPCStoreServerNotificationManager *_observer;
}

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;

+ (unsigned long long)debugDefault;
+ (void)initialize;

- (void)_populateObject:(id)arg1 withValuesFromClient:(id)arg2;
- (id)requestHandlingPolicy;
- (void)setErrorHandlingDelegate:(id)arg1;
- (id)errorHandlingDelegate;
- (id)initForStoreWithURL:(id)arg1 usingModelAtURL:(id)arg2 options:(id)arg3 policy:(id)arg4;
- (id)handlePullChangesRequest:(id)arg1 inContext:(id)arg2 error:(id*)arg3;
- (id)handleNotificationNameRequestInContext:(id)arg1 error:(id*)arg2;
- (id)handleRelationshipFaultRequest:(id)arg1 inContext:(id)arg2 error:(id*)arg3;
- (id)handleFaultRequest:(id)arg1 inContext:(id)arg2 error:(id*)arg3;
- (id)handleObtainRequest:(id)arg1 inContext:(id)arg2 error:(id*)arg3;
- (id)handleSaveRequest:(id)arg1 inContext:(id)arg2 error:(id*)arg3;
- (id)handleFetchRequest:(id)arg1 inContext:(id)arg2 error:(id*)arg3;
- (id)handleMetadataRequestInContext:(id)arg1;
- (id)retainedCoordinatorForConnection:(id)arg1;
- (void)removeCachesForConnection:(id)arg1;
- (id)_createCoordinator;
- (bool)setupRecoveryForConnectionContext:(id)arg1 ifNecessary:(id)arg2;
- (bool)errorIsPlausiblyAnSQLiteIssue:(id)arg1;
- (oneway void)handleRequest:(id)arg1 reply:(id)arg2;
- (long long)context:(id)arg1 shouldHandleInaccessibleFault:(id)arg2 forObjectID:(id)arg3 andTrigger:(id)arg4;
- (id)delegate;
- (void)dealloc;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)replacementObjectForXPCConnection:(id)arg1 encoder:(id)arg2 object:(id)arg3;
- (void)startListening;

@end
