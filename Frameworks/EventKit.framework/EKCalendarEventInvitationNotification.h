/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/EventKit.framework/EventKit
 */

@class NSString, NSArray, NSDate;

@interface EKCalendarEventInvitationNotification : EKCalendarNotification  {
    bool_allDay;
    bool_hasRecurrenceRules;
    bool_timeChanged;
    bool_dateChanged;
    bool_locationChanged;
    bool_attendeeReplyChanged;
    int _participationStatus;
    int _status;
    NSString *_location;
    NSDate *_startDate;
    NSDate *_startDateForNextOccurrence;
    NSDate *_endDate;
    NSDate *_participationStatusModifiedDate;
    NSArray *_attendees;
}

@property(retain) NSString * location;
@property(retain) NSDate * startDate;
@property(retain) NSDate * startDateForNextOccurrence;
@property(retain) NSDate * endDate;
@property(retain) NSDate * participationStatusModifiedDate;
@property int participationStatus;
@property int status;
@property(getter=isAllDay) bool allDay;
@property bool hasRecurrenceRules;
@property bool timeChanged;
@property bool dateChanged;
@property bool locationChanged;
@property bool attendeeReplyChanged;
@property(retain) NSArray * attendees;


- (bool)isAllDay;
- (void)setEndDate:(id)arg1;
- (id)startDateForNextOccurrence;
- (void)setAttendeeReplyChanged:(bool)arg1;
- (void)setHasRecurrenceRules:(bool)arg1;
- (void)setStartDateForNextOccurrence:(id)arg1;
- (void)setLocationChanged:(bool)arg1;
- (void)setTimeChanged:(bool)arg1;
- (void)setDateChanged:(bool)arg1;
- (id)initWithEvent:(id)arg1;
- (void)setParticipationStatusModifiedDate:(id)arg1;
- (void)setAttendees:(id)arg1;
- (bool)attendeeReplyChanged;
- (bool)locationChanged;
- (bool)timeChanged;
- (bool)dateChanged;
- (void)setParticipationStatus:(int)arg1;
- (id)attendees;
- (id)participationStatusModifiedDate;
- (bool)hasRecurrenceRules;
- (int)participationStatus;
- (id)eventFromEventStore:(id)arg1;
- (void)setAllDay:(bool)arg1;
- (void)setStartDate:(id)arg1;
- (id)location;
- (id)endDate;
- (void)setStatus:(int)arg1;
- (int)status;
- (id)startDate;
- (void)setLocation:(id)arg1;
- (void)dealloc;

@end
