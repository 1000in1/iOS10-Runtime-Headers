/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKit.framework/EventKit
 */

@interface EKTravelEngineAgendaEntry : NSObject {
    BOOL  _dismissed;
    CLLocation * _geoLocation;
    BOOL  _geocodedEventEncountered;
    CalGeocoder * _geocoder;
    GEORouteHypothesizer * _hypothesizer;
    EKTravelEngineHypothesis * _latestHypothesis;
    NSData * _mapKitHandle;
    EKTravelEngineOriginalEvent * _originalEventInternal;
    NSObject<OS_dispatch_queue> * _queue;
    EKTravelEngineThrottle * _throttle;
    id /* block */  _updateBlock;
}

@property (nonatomic) BOOL dismissed;
@property (nonatomic, retain) CLLocation *geoLocation;
@property (nonatomic) BOOL geocodedEventEncountered;
@property (nonatomic, retain) CalGeocoder *geocoder;
@property (nonatomic, retain) GEORouteHypothesizer *hypothesizer;
@property (nonatomic, retain) EKTravelEngineHypothesis *latestHypothesis;
@property (nonatomic, retain) NSData *mapKitHandle;
@property (nonatomic, readonly) EKTravelEngineOriginalEvent *originalEvent;
@property (nonatomic, retain) EKTravelEngineOriginalEvent *originalEventInternal;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) EKTravelEngineThrottle *throttle;
@property (nonatomic, copy) id /* block */ updateBlock;

+ (double)_maximumAllowableTravelTime;
+ (double)fuzzyMaximumInitialUpdateIntervalBeforeStartDate;

- (void).cxx_destruct;
- (void)_accountForGeocodedEventEncounter;
- (void)_clearEverything;
- (void)_createHypothesizerForDestination:(id)arg1;
- (void)_createSyntheticHypothesis;
- (void)_enhanceLocation;
- (id)_generateDestination;
- (void)_sendFeedbackToHypothesizerForPostingNotification:(unsigned int)arg1;
- (void)_setUpRouteMonitoring;
- (void)_updateWithHypothesis:(id)arg1;
- (BOOL)dismissed;
- (id)geoLocation;
- (BOOL)geocodedEventEncountered;
- (id)geocoder;
- (id)hypothesizer;
- (id)init;
- (id)latestHypothesis;
- (id)mapKitHandle;
- (id)originalEvent;
- (id)originalEventInternal;
- (id)queue;
- (void)reset;
- (void)sendFeedbackForPostingLeaveByNotification;
- (void)sendFeedbackForPostingLeaveNowNotification;
- (void)setDismissed:(BOOL)arg1;
- (void)setGeoLocation:(id)arg1;
- (void)setGeocodedEventEncountered:(BOOL)arg1;
- (void)setGeocoder:(id)arg1;
- (void)setHypothesizer:(id)arg1;
- (void)setLatestHypothesis:(id)arg1;
- (void)setMapKitHandle:(id)arg1;
- (void)setOriginalEventInternal:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setThrottle:(id)arg1;
- (void)setUpdateBlock:(id /* block */)arg1;
- (id)throttle;
- (id /* block */)updateBlock;
- (void)updateWithOriginalEvent:(id)arg1;

@end
