/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@class NSString, MPAVItem, MPQueuePlayer, MPAVQueuePlayerFeeder, <MPAVPlaylistFeeder>;

@interface MPAVPlaylistManager : NSObject <MPAVQueuePlayerFeederSource> {
    NSString *_audioSessionModeOverride;
    MPAVItem *_currentItem;
    MPAVQueuePlayerFeeder *_feeder;
    bool_goToTargetIndex;
    long long _isChangingPlaylistFeeder;
    long long _lastSelectionDirection;
    MPQueuePlayer *_player;
    <MPAVPlaylistFeeder> *_playlistFeeder;
    int _repeatMode;
    long long _targetIndex;
    bool_updatedAudioSessionMode;
}

@property(readonly) bool canChangePlaylistFeeder;
@property(readonly) bool isChangingPlaylistFeeder;
@property(retain) <MPAVPlaylistFeeder> * playlistFeeder;
@property(readonly) MPQueuePlayer * player;
@property(readonly) MPAVItem * currentItem;
@property(readonly) long long currentIndex;
@property(readonly) long long lastSelectionDirection;
@property int repeatMode;
@property bool managesSystemDownloads;
@property bool forceSynchronousQueueFilling;
@property unsigned long long minQueueDepth;
@property unsigned long long maxQueueDepth;
@property(retain) NSString * audioSessionModeOverride;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;


- (void)updateForSoundCheckDefaultsChange;
- (void)queuePlayerFeederFailedToQueueAnyItems:(id)arg1;
- (void)queuePlayerFeederDidUpdateQueue:(id)arg1 queuedItems:(id)arg2 dequeuedItems:(id)arg3;
- (bool)queuePlayerFeeder:(id)arg1 willInsertItem:(id)arg2;
- (void)queuePlayerFeeder:(id)arg1 willRemoveItem:(id)arg2;
- (id)queuePlayerFeeder:(id)arg1 itemToFollowItem:(id)arg2;
- (id)_audioSessionModeForMediaItem:(id)arg1;
- (id)_itemToFollowItemIndex:(long long)arg1 skipUnavailableContent:(bool)arg2;
- (long long)_nextItemIndex:(long long)arg1 repeatMode:(int)arg2;
- (id)_feederItemForIndex:(long long)arg1;
- (void)contentInvalidatedWithNewIndex:(unsigned long long)arg1;
- (bool)canChangePlaylistFeeder;
- (long long)_prepareToQueuePlaybackIndex:(long long)arg1 selectionDirection:(long long)arg2;
- (void)_updateAudioSessionMode;
- (void)setMinQueueDepth:(unsigned long long)arg1;
- (unsigned long long)minQueueDepth;
- (unsigned long long)maxQueueDepth;
- (void)_reloadQueuedItemsIfPathBecameAvailable;
- (void)_mediaLibraryDisplayValuesDidChangeNotification:(id)arg1;
- (void)_assetCancelNotification:(id)arg1;
- (void)_downloadCancelledNotification:(id)arg1;
- (bool)managesSystemDownloads;
- (bool)forceSynchronousQueueFilling;
- (void)setMaxQueueDepth:(unsigned long long)arg1;
- (bool)isChangingPlaylistFeeder;
- (void)setManagesSystemDownloads:(bool)arg1;
- (void)setPlaylistFeeder:(id)arg1;
- (id)playlistFeeder;
- (long long)lastSelectionDirection;
- (void)setCurrentIndex:(long long)arg1 selectionDirection:(long long)arg2;
- (bool)setPlaylistFeeder:(id)arg1 startIndex:(long long)arg2;
- (void)contentInvalidated;
- (id)_feeder;
- (void)setForceSynchronousQueueFilling:(bool)arg1;
- (void)setAudioSessionModeOverride:(id)arg1;
- (id)audioSessionModeOverride;
- (int)repeatMode;
- (id)currentItem;
- (void)setRepeatMode:(int)arg1;
- (long long)currentIndex;
- (void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned long long)arg1;
- (void)contentsDidChangeByRemovingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)player;
- (id)init;
- (void)dealloc;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;

@end
