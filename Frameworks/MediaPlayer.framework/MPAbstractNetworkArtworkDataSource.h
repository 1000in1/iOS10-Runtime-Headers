/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@class NSURLSession, NSMapTable, NSString, NSObject<OS_dispatch_queue>, NSURLSessionConfiguration, NSCache;

@interface MPAbstractNetworkArtworkDataSource : NSObject <NSURLSessionDataDelegate, MPArtworkDataSource> {
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSCache *_artworkRepresentationCache;
    NSMapTable *_catalogTaskMap;
    NSURLSession *_URLSession;
}

@property(readonly) NSURLSessionConfiguration * URLSessionConfiguration;
@property(retain) NSObject<OS_dispatch_queue> * accessQueue;
@property(retain) NSCache * artworkRepresentationCache;
@property(retain) NSMapTable * catalogTaskMap;
@property(retain) NSURLSession * URLSession;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;


- (void)setURLSession:(id)arg1;
- (void)setCatalogTaskMap:(id)arg1;
- (void)setArtworkRepresentationCache:(id)arg1;
- (void)setAccessQueue:(id)arg1;
- (bool)_isRepresentationSize:(struct CGSize { double x1; double x2; })arg1 validForCatalog:(id)arg2;
- (bool)shouldLookForLargerRepresentationsWhenBestRepresentationIsUnavailable;
- (bool)wantsBackgroundImageDecompression;
- (id)catalogTaskMap;
- (id)accessQueue;
- (id)_artworkRepresentationWithImageFromData:(id)arg1 forURLResponse:(id)arg2 size:(struct CGSize { double x1; double x2; })arg3 immediateImageDecompressionAllowed:(bool)arg4;
- (id)URLSessionConfiguration;
- (id)_existingRepresentationFromURLCacheForArtworkCatalog:(id)arg1 immediateImageDecompressionAllowed:(bool)arg2;
- (id)_existingRepresentativeObjectForArtworkCatalog:(id)arg1 handler:(id)arg2;
- (id)artworkRepresentationCache;
- (id)URLSession;
- (void)_updateConfigurationForCellularDataRestriction:(id)arg1;
- (void)loadRepresentationForArtworkCatalog:(id)arg1 completionHandler:(id)arg2;
- (bool)isRepresentation:(id)arg1 bestRepresentationForArtworkCatalog:(id)arg2;
- (id)existingRepresentationForArtworkCatalog:(id)arg1;
- (void)cancelLoadingRepresentationForArtworkCatalog:(id)arg1;
- (id)requestForCatalog:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2;
- (id)cacheKeyForCatalog:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2;
- (bool)areRepresentationsForCatalog:(id)arg1 visuallyIdenticalToRepresentationsForCatalog:(id)arg2;
- (id)sortedSupportedSizesForCatalog:(id)arg1;
- (id)supportedSizesForCatalog:(id)arg1;
- (bool)areRepresentationsAvailableForCatalog:(id)arg1;
- (id)init;
- (void)dealloc;
- (void).cxx_destruct;

@end
