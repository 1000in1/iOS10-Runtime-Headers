/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@class NSString, NSArray, <MPAVQueuePlayerFeederSource>, MPAVItem, NSMutableSet, NSObject<OS_dispatch_queue>, MPDownloadManager, MPQueuePlayer, NSMutableArray;

@interface MPAVQueuePlayerFeeder : NSObject <SSDownloadManagerObserver> {
    unsigned long long _desiredQueueDepth;
    MPDownloadManager *_downloadManager;
    bool_forceSynchronousQueueFilling;
    bool_fillQueueActive;
    NSMutableArray *_items;
    bool_managesSystemDownloads;
    unsigned long long _maxQueueDepth;
    unsigned long long _minQueueDepth;
    long long _nextFillQueueToken;
    NSMutableSet *_pausedDownloads;
    NSObject<OS_dispatch_queue> *_pausedDownloadsQueue;
    MPQueuePlayer *_player;
    NSObject<OS_dispatch_queue> *_playerQueue;
    <MPAVQueuePlayerFeederSource> *_playlistItemSource;
    NSMutableSet *_reusableItems;
}

@property(readonly) MPAVItem * currentItem;
@property(readonly) NSArray * items;
@property unsigned long long minQueueDepth;
@property unsigned long long maxQueueDepth;
@property bool managesSystemDownloads;
@property bool forceSynchronousQueueFilling;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;


- (void)_fillInQueue;
- (void)_removeInvalidItems:(id)arg1;
- (void)_reloadQueueKeepingCurrentItem:(bool)arg1 allowReusingItems:(bool)arg2;
- (void)_updatePlayerQueueWithRemovedItems:(id)arg1 addedItems:(id)arg2 removeCurrentItem:(bool)arg3;
- (void)_markIsReusable:(bool)arg1 item:(id)arg2;
- (id)_fillInQueueWithExtraSpace:(int)arg1 ignoreExistingItems:(bool)arg2 removeCurrentItem:(bool)arg3;
- (id)_fillInQueueWithExtraSpace:(int)arg1 ignoreExistingItems:(bool)arg2;
- (id)_fillInQueueWithExtraSpace:(int)arg1;
- (void)_updateQueueDepthForRateChange;
- (void)_removeCurrentItemAndFillQueue:(bool)arg1;
- (void)_pauseOrResumeDownloads:(id)arg1 currentDownloadID:(long long)arg2;
- (void)reloadQueueKeepingCurrentItem:(bool)arg1;
- (id)acquireReusableItemsUsingBlock:(id)arg1;
- (void)setMinQueueDepth:(unsigned long long)arg1;
- (unsigned long long)minQueueDepth;
- (unsigned long long)maxQueueDepth;
- (void)cancelReusableItemsPassingTest:(id)arg1;
- (id)initWithMPQueuePlayer:(id)arg1 itemSource:(id)arg2;
- (bool)managesSystemDownloads;
- (bool)forceSynchronousQueueFilling;
- (void)setMaxQueueDepth:(unsigned long long)arg1;
- (void)setManagesSystemDownloads:(bool)arg1;
- (void)setForceSynchronousQueueFilling:(bool)arg1;
- (id)currentItem;
- (void)advanceToNextItem;
- (id)items;
- (void)invalidate;
- (void)downloadManager:(id)arg1 downloadStatesDidChange:(id)arg2;
- (void)dealloc;
- (void).cxx_destruct;
- (id)description;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;

@end
