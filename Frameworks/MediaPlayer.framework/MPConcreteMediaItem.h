/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@class MPConcreteMediaEntityPropertiesCache, MPMediaLibrary;

@interface MPConcreteMediaItem : MPMediaItem <NSCoding, NSCopying, MPCacheableConcreteMediaEntity> {
    MPMediaLibrary *_library;
    unsigned long long _persistentID;
    MPConcreteMediaEntityPropertiesCache *_propertiesCache;
}

@property(readonly) MPConcreteMediaEntityPropertiesCache * cachedPropertyValues;

+ (void)didChangeEntityWithDataProviderEntityClass:(Class)arg1 persistentID:(unsigned long long)arg2 deleted:(BOOL)arg3;
+ (id)concreteMediaItemWithPersistentID:(unsigned long long)arg1;
+ (id)concreteMediaItemWithPersistentID:(unsigned long long)arg1 library:(id)arg2;

- (BOOL)existsInLibrary;
- (void)invalidateCachedProperties;
- (id)initWithPersistentID:(unsigned long long)arg1 library:(id)arg2;
- (id)cachedPropertyValues;
- (void)reallyIncrementPlayCount;
- (double)nominalHasBeenPlayedThreshold;
- (id)_nonBatchableOrCachedValueForProperty:(id)arg1 needsFetch:(BOOL*)arg2;
- (id)_initWithPersistentID:(unsigned long long)arg1 library:(id)arg2 propertiesCache:(id)arg3;
- (void)updateDateAccessedToCurrentDateWithWriteCompletionBlock:(id)arg1;
- (BOOL)incrementPlayCountForStopTime:(double)arg1;
- (void)incrementPlayCountForPlayingToEnd;
- (void)incrementSkipCount;
- (void)noteWasPlayedToTime:(double)arg1 skipped:(BOOL)arg2;
- (void)markNominalAmountHasBeenPlayed;
- (BOOL)didSkipWithPlayedToTime:(double)arg1;
- (id)valuesForProperties:(id)arg1;
- (void)enumerateValuesForProperties:(id)arg1 usingBlock:(id)arg2;
- (void)setValue:(id)arg1 forProperty:(id)arg2 withCompletionBlock:(id)arg3;
- (id)initWithPersistentID:(unsigned long long)arg1;
- (id)mediaLibrary;
- (unsigned long long)persistentID;
- (id)init;
- (void)dealloc;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (BOOL)setValue:(id)arg1 forProperty:(id)arg2;
- (id)valueForProperty:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end
