/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
 */

@class NSURL, NSArray, NEProxyServer;

@interface NEProxySettings : NSObject <NEConfigurationValidating, NEPrettyDescription, NEConfigurationLegacySupport, NSSecureCoding, NSCopying> {
    bool_autoProxyDiscovery;
    bool_excludeSimpleHostnames;
    bool_usePassiveFTP;
    NSURL *_proxyAutoConfigURL;
    NEProxyServer *_HTTPServer;
    NEProxyServer *_HTTPSServer;
    NEProxyServer *_FTPServer;
    NEProxyServer *_SOCKSServer;
    NEProxyServer *_RTSPServer;
    NEProxyServer *_gopherServer;
    NSArray *_exceptionList;
}

@property bool autoProxyDiscovery;
@property(copy) NSURL * proxyAutoConfigURL;
@property(copy) NEProxyServer * HTTPServer;
@property(copy) NEProxyServer * HTTPSServer;
@property(copy) NEProxyServer * FTPServer;
@property(copy) NEProxyServer * SOCKSServer;
@property(copy) NEProxyServer * RTSPServer;
@property(copy) NEProxyServer * gopherServer;
@property bool excludeSimpleHostnames;
@property(copy) NSArray * exceptionList;
@property bool usePassiveFTP;

+ (bool)supportsSecureCoding;

- (void)setUsePassiveFTP:(bool)arg1;
- (void)setExceptionList:(id)arg1;
- (void)setExcludeSimpleHostnames:(bool)arg1;
- (void)setGopherServer:(id)arg1;
- (void)setRTSPServer:(id)arg1;
- (void)setSOCKSServer:(id)arg1;
- (void)setFTPServer:(id)arg1;
- (void)setHTTPSServer:(id)arg1;
- (void)setProxyAutoConfigURL:(id)arg1;
- (void)setAutoProxyDiscovery:(bool)arg1;
- (bool)usePassiveFTP;
- (id)exceptionList;
- (bool)excludeSimpleHostnames;
- (id)gopherServer;
- (id)RTSPServer;
- (id)SOCKSServer;
- (id)FTPServer;
- (id)HTTPSServer;
- (id)proxyAutoConfigURL;
- (bool)autoProxyDiscovery;
- (void)setHTTPServer:(id)arg1;
- (id)HTTPServer;
- (id)initFromLegacyDictionary:(id)arg1;
- (id)copyLegacyDictionary;
- (id)descriptionWithIndent:(int)arg1;
- (bool)checkValidityAndCollectErrors:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;

@end
