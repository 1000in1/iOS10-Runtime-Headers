/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
 */

@class NSString, NEConfigurationManager, NEConfiguration, NSMutableArray;

@interface NEProfileIngestion : NSObject <NEProfileIngestionDelegate> {
    NSString *_clientName;
    NSString *_payloadType;
    NEConfigurationManager *_manager;
    NSMutableArray *_currentConfigurations;
    NEConfiguration *_ingestedConfiguration;
}

@property(readonly) NSString * clientName;
@property(readonly) NSString * payloadType;
@property(readonly) NEConfigurationManager * manager;
@property(retain) NSMutableArray * currentConfigurations;
@property(retain) NEConfiguration * ingestedConfiguration;

+ (void)profileMigrationComplete;
+ (id)getServiceIDForPayload:(id)arg1;

- (bool)updateAppLayerVPNMappingRules:(id)arg1;
- (id)copyManagedConfigurationIDs;
- (bool)updateDefaultAfterDeletingConfiguration;
- (bool)updateDefaultAfterAddingConfiguration;
- (bool)enableAlwaysOnVpn;
- (void)enableDefaultService;
- (void)unlockConfigurations;
- (bool)lockConfigurations;
- (bool)isInstalled:(id)arg1;
- (id)setAsideConfigurationName:(id)arg1 unsetAside:(bool)arg2;
- (bool)removeConfigurationWithIdentifier:(id)arg1;
- (bool)removeIngestedConfiguration;
- (bool)saveIngestedConfiguration;
- (bool)createConfigurationFromPayload:(id)arg1 payloadType:(id)arg2;
- (bool)enableAlwaysOnVpnInternal:(bool)arg1;
- (bool)loadConfigurationsForceReloadFromDisk;
- (id)resolveConfigurationNameConflict:(id)arg1;
- (id)findConfigurationByPayloadUUID:(id)arg1;
- (bool)saveConfiguration:(id)arg1;
- (id)findConfigurationByName:(id)arg1;
- (bool)loadConfigurationsWithRefreshOption:(bool)arg1;
- (void)setIngestedConfiguration:(id)arg1;
- (id)findConfigurationByConfigurationID:(id)arg1;
- (id)ingestedConfiguration;
- (void)setCurrentConfigurations:(id)arg1;
- (id)currentConfigurations;
- (id)initWithNameAndType:(id)arg1 payloadType:(id)arg2;
- (bool)removeConfiguration:(id)arg1;
- (id)payloadType;
- (id)manager;
- (id)clientName;
- (id)initWithName:(id)arg1;
- (void)dealloc;
- (void).cxx_destruct;

@end
