/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/Frameworks/GameKit.framework/Frameworks/GameCenterUI.framework/GameCenterUI
 */

@class UIImageView;

@interface GKBubbleView : UIView  {
    float _animationScale[9];
    BOOL _animationReversed[9];
    BOOL _animating;
    BOOL _touchAnimationRunning;
    BOOL _touchAnimationCanEnd;
    int _bubbleType;
    UIImageView *_imageView;
    UIImageView *_highlightView;
    int _numVertices;
    int _numFaces;
    float _animationAngle;
    float _animationRadiansPerSecond;
    float _touchAnimationElapsed;
    float _touchAnimationAngle;
    float _moveAnimationAngle;
    float _moveAnimationRadiansPerSecond;
    float _moveAnimationScale;
}

@property BOOL animating;
@property int bubbleType;
@property(retain) UIImageView * imageView;
@property(retain) UIImageView * highlightView;
@property int numVertices;
@property int numFaces;
@property float animationAngle;
@property float animationRadiansPerSecond;
@property BOOL touchAnimationRunning;
@property BOOL touchAnimationCanEnd;
@property float touchAnimationElapsed;
@property float touchAnimationAngle;
@property float moveAnimationAngle;
@property float moveAnimationRadiansPerSecond;
@property float moveAnimationScale;


- (void)setMoveAnimationScale:(float)arg1;
- (float)moveAnimationScale;
- (void)setMoveAnimationRadiansPerSecond:(float)arg1;
- (float)moveAnimationRadiansPerSecond;
- (void)setMoveAnimationAngle:(float)arg1;
- (float)moveAnimationAngle;
- (void)setTouchAnimationAngle:(float)arg1;
- (float)touchAnimationAngle;
- (void)setTouchAnimationElapsed:(float)arg1;
- (float)touchAnimationElapsed;
- (void)setTouchAnimationCanEnd:(BOOL)arg1;
- (BOOL)touchAnimationCanEnd;
- (void)setTouchAnimationRunning:(BOOL)arg1;
- (BOOL)touchAnimationRunning;
- (void)setAnimationRadiansPerSecond:(float)arg1;
- (float)animationRadiansPerSecond;
- (void)setAnimationAngle:(float)arg1;
- (float)animationAngle;
- (void)setNumFaces:(int)arg1;
- (int)numFaces;
- (void)setNumVertices:(int)arg1;
- (int)numVertices;
- (void)setHighlightView:(id)arg1;
- (void)touchEnded;
- (void)touchBegan;
- (float)animationScaleForCurrentZ;
- (struct CGPoint { float x1; float x2; })offsetForVertexAtIndex:(int)arg1;
- (void)applyAnimationToVertices:(struct CAMeshVertex { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CAPoint3D { float x_2_1_1; float x_2_1_2; float x_2_1_3; } x2; }*)arg1;
- (void)setupVerticesAndFacesAnimated:(BOOL)arg1;
- (void)chooseMoveAnimation;
- (BOOL)randomBOOL;
- (void)choosePointAnimations;
- (float)randomFloatBetweenMin:(float)arg1 andMax:(float)arg2;
- (int)bubbleType;
- (void)setBubbleType:(int)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)highlightView;
- (void)dealloc;
- (void)setImageView:(id)arg1;
- (void)update:(double)arg1;
- (BOOL)animating;
- (void)setAnimating:(BOOL)arg1;
- (id)imageView;
- (struct CGSize { float x1; float x2; })intrinsicContentSize;
- (void)willMoveToWindow:(id)arg1;

@end
