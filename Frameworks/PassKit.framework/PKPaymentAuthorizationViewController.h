/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/PassKit.framework/PassKit
 */

@class <PKPaymentAuthorizationViewControllerPrivateDelegate>, UIView, <UIViewControllerTransitioningDelegate>, <PKPaymentAuthorizationViewControllerDelegate>, NSMutableArray, PKRemotePaymentAuthorizationViewController, _UIAsyncInvocation;

@interface PKPaymentAuthorizationViewController : UIViewController  {
    UIView *_contentView;
    _UIAsyncInvocation *_cancelViewServiceRequest;
    PKRemotePaymentAuthorizationViewController *_remoteViewController;
    NSMutableArray *_delayedActions;
    bool_hasAppeared;
    <UIViewControllerTransitioningDelegate> *_defaultTransitionDelegate;
    <PKPaymentAuthorizationViewControllerDelegate> *_delegate;
    <PKPaymentAuthorizationViewControllerPrivateDelegate> *_privateDelegate;
}

@property <PKPaymentAuthorizationViewControllerDelegate> * delegate;
@property <PKPaymentAuthorizationViewControllerPrivateDelegate> * privateDelegate;

+ (bool)canMakePaymentsUsingNetworks:(id)arg1;
+ (bool)canMakePayments;
+ (bool)_shouldForwardViewWillTransitionToSize;

- (id)initWithPaymentRequest:(id)arg1;
- (void)_unregisterForApplicationLifeCycleNotifications;
- (void)_registerForApplicationLifeCycleNotifications;
- (void)_performAllDelayedActions;
- (void)_handleAppDidCancel;
- (void)_authorizationDidSelectShippingContact:(id)arg1;
- (void)_authorizationDidSelectShippingMethod:(id)arg1;
- (void)_authorizationDidAuthorizePayment:(id)arg1;
- (void)_peformOrEnqueueDelayedAction:(id)arg1;
- (void)_willResignActive:(id)arg1;
- (void)_authorizationDidFinishWithError:(id)arg1;
- (void)_didBecomeActive:(id)arg1;
- (id)privateDelegate;
- (void)setPrivateDelegate:(id)arg1;
- (id)_serviceViewControllerProxy;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)transitioningDelegate;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;
- (void)_preferredContentSizeChanged:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize { double x1; double x2; })arg2;
- (unsigned long long)supportedInterfaceOrientations;

@end
