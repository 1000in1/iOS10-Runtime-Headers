/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/AVKit.framework/AVKit
 */

@class NSArray, CALayer<AVPlayerLayer>, AVValueTiming, NSObject<OS_dispatch_queue>, NSDictionary, AVPlayer;

@interface AVPlayerControllerInternal : AVPlayerController  {
    unsigned int _jKeyDown : 1;
    unsigned int _kKeyDown : 1;
    unsigned int _lKeyDown : 1;
    CALayer<AVPlayerLayer> *_playerLayer;
    id _deviceBatteryStateDidChangeObserver;
    unsigned int _deviceBatteryMonitoringWasEnabled : 1;
    unsigned int _deviceBatteryChargingOrFull : 1;
    unsigned int _playingOnSecondScreen : 1;
    id _timeObserverToken;
    id _playerItemTimeJumpedObserver;
    id _playerItemDidPlayToEndTimeObserver;
    bool_looping;
    long long _actionAtItemEnd;
    NSObject<OS_dispatch_queue> *_seekQueue;
    bool_isSeeking;
    bool_pendingSeek;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } _seekToTime;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } _toleranceBefore;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    } _toleranceAfter;
    bool_isScanningForward;
    bool_isScanningBackward;
    unsigned long long _scanningCount;
    double _preScanningRate;
    NSObject<OS_dispatch_queue> *_setRateWithThrottlingQueue;
    bool_isActuallySettingRateWithThrottling;
    bool_pendingSetRateWithThrottling;
    double _setToRate;
    bool_ignoreBackwardAndForwardScans;
    unsigned int _shouldPlayWhenLikelyToKeepUp : 1;
    bool_scrubbing;
    bool_composable;
    bool_hasProtectedContent;
    bool_preventingIdleSystemSleep;
    bool_preventingIdleDisplaySleep;
    bool_disablingAutomaticTermination;
    AVPlayer *_player;
    AVValueTiming *_timing;
    NSDictionary *_metadata;
    NSArray *_contentChapters;
    NSArray *_availableMetadataFormats;
    double _rateBeforeScrubBegan;
}

@property(getter=isDeviceBatteryChargingOrFull) bool deviceBatteryChargingOrFull;
@property(readonly) bool shouldPreventIdleDisplaySleep;
@property(getter=isScrubbing) bool scrubbing;
@property(retain) AVPlayer * player;
@property(retain) AVValueTiming * timing;
@property(retain) NSDictionary * metadata;
@property(retain) NSArray * contentChapters;
@property(getter=isComposable) bool composable;
@property bool hasProtectedContent;
@property(retain) NSArray * availableMetadataFormats;
@property double rateBeforeScrubBegan;
@property(getter=isPreventingIdleSystemSleep) bool preventingIdleSystemSleep;
@property(getter=isPreventingIdleDisplaySleep) bool preventingIdleDisplaySleep;
@property(getter=isDisablingAutomaticTermination) bool disablingAutomaticTermination;

+ (id)keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName;
+ (id)keyPathsForValuesAffectingExternalPlaybackType;
+ (id)keyPathsForValuesAffectingExternalPlaybackActive;
+ (id)keyPathsForValuesAffectingAllowsExternalPlayback;
+ (id)keyPathsForValuesAffectingCanSeekChapterBackward;
+ (id)keyPathsForValuesAffectingCanSeekChapterForward;
+ (id)keyPathsForValuesAffectingCanSeekFrameBackward;
+ (id)keyPathsForValuesAffectingCanSeekFrameForward;
+ (id)keyPathsForValuesAffectingCanSeek;
+ (id)keyPathsForValuesAffectingHasShareableContent;
+ (id)keyPathsForValuesAffectingHasTrimmableContent;
+ (id)keyPathsForValuesAffectingHasContentChapters;
+ (id)keyPathsForValuesAffectingHasEnabledVideo;
+ (id)keyPathsForValuesAffectingHasEnabledAudio;
+ (id)keyPathsForValuesAffectingLoadedTimeRanges;
+ (id)keyPathsForValuesAffectingContentDurationWithinEndTimes;
+ (id)keyPathsForValuesAffectingMaxTime;
+ (id)keyPathsForValuesAffectingMinTime;
+ (id)keyPathsForValuesAffectingContentDimensions;
+ (id)keyPathsForValuesAffectingContentDuration;
+ (id)keyPathsForValuesAffectingHasContent;
+ (id)keyPathsForValuesAffectingCanTogglePlayback;
+ (id)keyPathsForValuesAffectingCanPause;
+ (id)keyPathsForValuesAffectingCanPlay;
+ (id)keyPathsForValuesAffectingSeekableTimeRanges;
+ (id)keyPathsForValuesAffectingShouldPreventIdleDisplaySleep;
+ (id)keyPathsForValuesAffectingLegibleMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingAudioMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingError;
+ (id)keyPathsForValuesAffectingStatus;
+ (id)keyPathsForValuesAffectingVolume;
+ (id)keyPathsForValuesAffectingRate;
+ (id)keyPathsForValuesAffectingPlayingOnExternalScreen;
+ (id)keyPathsForValuesAffectingHasLegibleMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingHasAudioMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingHasMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingCanSeekToEnd;
+ (id)keyPathsForValuesAffectingCanSeekToBeginning;
+ (id)keyPathsForValuesAffectingCanScanBackward;
+ (id)keyPathsForValuesAffectingCanScanForward;
+ (id)keyPathsForValuesAffectingHasLiveStreamingContent;
+ (id)keyPathsForValuesAffectingPlaying;

- (id)initWithPlayer:(id)arg1;
- (void)setDisablingAutomaticTermination:(bool)arg1;
- (bool)isDisablingAutomaticTermination;
- (void)setPreventingIdleSystemSleep:(bool)arg1;
- (bool)isPreventingIdleSystemSleep;
- (void)_updateScanningBackwardRate;
- (id)scanningDelays;
- (void)_updateScanningForwardRate;
- (void)actuallySeekToTime;
- (double)rateBeforeScrubBegan;
- (void)setScrubbing:(bool)arg1;
- (bool)_isMarkedNotSerializablePlayerItem:(id)arg1;
- (bool)_isRestrictedFromSavingPlayerItem:(id)arg1;
- (void)actuallySetRateWithThrottling;
- (void)setPreventingIdleDisplaySleep:(bool)arg1;
- (void)setContentChapters:(id)arg1;
- (void)setAvailableMetadataFormats:(id)arg1;
- (void)setHasProtectedContent:(bool)arg1;
- (void)setComposable:(bool)arg1;
- (void)setRateBeforeScrubBegan:(double)arg1;
- (bool)isPreventingIdleDisplaySleep;
- (void)updateTiming;
- (bool)CALayerDestinationIsTVOut;
- (void)endScrubbing;
- (void)beginScrubbing;
- (bool)isScrubbing;
- (void)_Starsky_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (bool)shouldPreventIdleDisplaySleep;
- (void)_Starsky_dealloc;
- (void)_Starsky_init;
- (bool)isDeviceBatteryChargingOrFull;
- (void)setDeviceBatteryChargingOrFull:(bool)arg1;
- (void)setCALayerDestinationIsTVOut:(bool)arg1;
- (bool)isPlayingOnSecondScreen;
- (bool)canSeekChapterBackward;
- (bool)canSeekChapterForward;
- (void)seekToChapter:(id)arg1;
- (id)contentChapters;
- (void)seekFrameBackward:(id)arg1;
- (bool)canSeekFrameBackward;
- (void)seekFrameForward:(id)arg1;
- (bool)canSeekFrameForward;
- (void)scanBackward:(id)arg1;
- (void)scanForward:(id)arg1;
- (void)seekByTimeInterval:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (void)seekByTimeInterval:(double)arg1;
- (bool)isSeeking;
- (bool)hasShareableContent;
- (bool)hasTrimmableContent;
- (bool)hasContentChapters;
- (void)toggleMuted:(id)arg1;
- (void)changeVolumeToMaximum:(id)arg1;
- (void)changeVolumeToMinimum:(id)arg1;
- (void)decreaseVolume:(id)arg1;
- (void)increaseVolume:(id)arg1;
- (void)setLooping:(bool)arg1;
- (bool)isLooping;
- (void)autoplay:(id)arg1;
- (void)setRateWithThrottling:(double)arg1;
- (void)setPlayingOnSecondScreen:(bool)arg1;
- (id)_extendedLanguageTagsForOptions:(id)arg1;
- (id)_legibleAuxillaryOptions;
- (id)_legibleEasyToReadOptions;
- (void)_enableAutoMediaSelection:(id)arg1;
- (void)_disableLegibleMediaSelectionOptions:(id)arg1;
- (id)_auxillaryClosedCaptionOptions;
- (id)_auxillarySDHOptions;
- (id)_auxillarySubtitleOptions;
- (id)_easyToReadClosedCaptionOptions;
- (id)_easyToReadSDHOptions;
- (id)_easyToReadSubtitleOptions;
- (id)_closedCaptionOptions;
- (id)_SDHOptions;
- (id)_subtitleOptions;
- (id)_selectedMediaOptionWithMediaCharacteristic:(id)arg1;
- (void)_setMediaOption:(id)arg1 mediaCharacteristic:(id)arg2;
- (id)_mediaSelectionOptionForLanguageCode:(id)arg1 options:(id)arg2;
- (id)_languageCodesForOptions:(id)arg1;
- (id)_auxillaryAudioOptions;
- (id)_DVSAudioOptions;
- (id)_mainAudioOptions;
- (id)_pushSystemLanguageToTop:(id)arg1;
- (id)_playableMediaSelectionOptionsForMediaCharacteristic:(id)arg1;
- (void)play:(id)arg1;
- (bool)isPlaying;
- (void)setRate:(double)arg1;
- (double)rate;
- (void)setVolume:(double)arg1;
- (double)volume;
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (bool)isComposable;
- (bool)hasProtectedContent;
- (id)availableMetadataFormats;
- (float)preferredRate;
- (void)setMetadata:(id)arg1;
- (id)metadata;
- (long long)status;
- (id)externalPlaybackAirPlayDeviceLocalizedName;
- (void)setTiming:(id)arg1;
- (id)loadedTimeRanges;
- (double)contentDurationWithinEndTimes;
- (void)setMaxTime:(double)arg1;
- (double)maxTime;
- (void)setMinTime:(double)arg1;
- (double)minTime;
- (bool)hasEnabledVideo;
- (bool)hasEnabledAudio;
- (struct CGSize { double x1; double x2; })contentDimensions;
- (bool)canSeek;
- (bool)canTogglePlayback;
- (bool)canPause;
- (bool)isPlayingOnExternalScreen;
- (void)setCurrentLegibleMediaSelectionOption:(id)arg1;
- (id)currentLegibleMediaSelectionOption;
- (void)setCurrentAudioMediaSelectionOption:(id)arg1;
- (id)currentAudioMediaSelectionOption;
- (bool)hasMediaSelectionOptions;
- (void)seekChapterForward:(id)arg1;
- (bool)canSeekToEnd;
- (void)seekChapterBackward:(id)arg1;
- (bool)canSeekToBeginning;
- (void)endScanningBackward:(id)arg1;
- (void)beginScanningBackward:(id)arg1;
- (bool)canScanBackward;
- (void)endScanningForward:(id)arg1;
- (void)beginScanningForward:(id)arg1;
- (bool)canScanForward;
- (void)gotoEndOfSeekableRanges:(id)arg1;
- (void)skipBackwardThirtySeconds:(id)arg1;
- (bool)hasLiveStreamingContent;
- (void)endScrubbing:(id)arg1;
- (void)beginScrubbing:(id)arg1;
- (void)setPlaying:(bool)arg1;
- (void)togglePlayback:(id)arg1;
- (void)pause:(id)arg1;
- (id)legibleMediaSelectionOptions;
- (id)audioMediaSelectionOptions;
- (bool)hasLegibleMediaSelectionOptions;
- (bool)hasAudioMediaSelectionOptions;
- (void)seekToEnd:(id)arg1;
- (void)seekToBeginning:(id)arg1;
- (bool)canPlay;
- (void)seekToTime:(double)arg1;
- (id)timing;
- (double)contentDuration;
- (id)player;
- (bool)allowsExternalPlayback;
- (bool)isExternalPlaybackActive;
- (id)seekableTimeRanges;
- (void)setAllowsExternalPlayback:(bool)arg1;
- (void)setPlayer:(id)arg1;
- (long long)externalPlaybackType;
- (id)init;
- (id)error;
- (void)dealloc;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (bool)hasContent;

@end
