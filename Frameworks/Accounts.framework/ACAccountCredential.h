/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/Frameworks/Accounts.framework/Accounts
 */

@class NSMutableSet, NSString, ACAccount, NSDate, NSMutableDictionary;

@interface ACAccountCredential : NSObject <NSSecureCoding> {
    NSMutableDictionary *_credentialItems;
    NSString *_credentialType;
    NSMutableSet *_dirtyProperties;
    ACAccount *_owningAccount;
    BOOL _dirty;
    BOOL _empty;
    NSString *_findMyiPhoneToken;
}

@property(copy) NSString * oauthToken;
@property(copy) NSString * token;
@property(copy) NSString * oauthTokenSecret;
@property(copy) NSString * password;
@property(copy) NSString * credentialType;
@property(getter=isDirty) BOOL dirty;
@property(getter=isEmpty) BOOL empty;
@property(copy) NSString * oauthRefreshToken;
@property(retain) NSDate * expiryDate;
@property(copy) NSString * findMyiPhoneToken;

+ (id)nonPersistentKeysForAccountTypeIdentifier:(id)arg1 credentialType:(id)arg2;
+ (id)supportedKeysForAccountTypeIdentifier:(id)arg1 credentialType:(id)arg2;
+ (id)credentialWithPassword:(id)arg1;
+ (id)credentialWithOAuthToken:(id)arg1 tokenSecret:(id)arg2;
+ (BOOL)supportsSecureCoding;

- (id)expiryDate;
- (id)oauthToken;
- (id)oauthTokenSecret;
- (void)setFindMyiPhoneToken:(id)arg1;
- (void)setEmpty:(BOOL)arg1;
- (void)setDirty:(BOOL)arg1;
- (id)findMyiPhoneToken;
- (id)oauthRefreshToken;
- (id)keysForCredentialItems;
- (id)initWithOAuth2Token:(id)arg1 refreshToken:(id)arg2 expiryDate:(id)arg3;
- (id)credentialItemForKey:(id)arg1;
- (void)setCredentialItem:(id)arg1 forKey:(id)arg2;
- (id)initWithPassword:(id)arg1;
- (id)initWithOAuthToken:(id)arg1 tokenSecret:(id)arg2;
- (void)setPassword:(id)arg1;
- (void)setOauthTokenSecret:(id)arg1;
- (void)setExpiryDate:(id)arg1;
- (void)setOauthRefreshToken:(id)arg1;
- (void)setOauthToken:(id)arg1;
- (id)credentialItems;
- (void)setCredentialType:(id)arg1;
- (id)credentialType;
- (void)_markPropertyDirty:(id)arg1;
- (void)_setOwningAccount:(id)arg1;
- (void)_clearDirtyProperties;
- (BOOL)isDirty;
- (id)token;
- (void)setToken:(id)arg1;
- (id)init;
- (BOOL)isEmpty;
- (id)password;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end
