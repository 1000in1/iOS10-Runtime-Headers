/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Foundation.framework/Foundation
 */

@class NSString, NSMutableDictionary;

@interface NSThread : NSObject  {
    id _private;
    unsigned char _bytes[44];
}

@property(retain,readonly) NSMutableDictionary * threadDictionary;
@property double threadPriority;
@property long long qualityOfService;
@property(copy) NSString * name;
@property unsigned long long stackSize;
@property(readonly) bool isMainThread;
@property(getter=isExecuting,readonly) bool executing;
@property(getter=isFinished,readonly) bool finished;
@property(getter=isCancelled,readonly) bool cancelled;

+ (void)sleepForTimeInterval:(double)arg1;
+ (id)callStackSymbols;
+ (id)callStackReturnAddresses;
+ (void)detachNewThreadSelector:(SEL)arg1 toTarget:(id)arg2 withObject:(id)arg3;
+ (void)exit;
+ (void)sleepUntilDate:(id)arg1;
+ (bool)isMultiThreaded;
+ (bool)isMainThread;
+ (id)mainThread;
+ (bool)isDying;
+ (bool)setThreadPriority:(double)arg1;
+ (double)threadPriority;
+ (id)currentThread;
+ (void)_im_runBlock:(id)arg1;
+ (void)_mapkit_runThread:(id)arg1;
+ (id)_mapkit_networkIOThread;

- (void)setName:(id)arg1;
- (bool)isCancelled;
- (void)main;
- (id)init;
- (id)name;
- (void)start;
- (void)cancel;
- (void)dealloc;
- (id)description;
- (void)_nq:(id)arg1;
- (unsigned long long)stackSize;
- (void)setStackSize:(unsigned long long)arg1;
- (id)runLoop;
- (bool)isMainThread;
- (bool)isDying;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (void)setQualityOfService:(long long)arg1;
- (long long)qualityOfService;
- (bool)isExecuting;
- (void)setThreadPriority:(double)arg1;
- (double)threadPriority;
- (bool)isFinished;
- (id)threadDictionary;
- (void)__im_performBlock:(id)arg1 afterDelay:(double)arg2 modes:(id)arg3;
- (void)__im_performBlock:(id)arg1 afterDelay:(double)arg2;
- (void)__im_performBlock:(id)arg1 waitUntilDone:(bool)arg2 modes:(id)arg3;
- (void)__im_performBlock:(id)arg1 waitUntilDone:(bool)arg2;
- (void)__im_performBlock:(id)arg1 modes:(id)arg2;
- (void)__im_performBlock:(id)arg1;

@end
