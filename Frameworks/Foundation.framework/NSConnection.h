/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Foundation.framework/Foundation
 */

@class NSDistantObject, NSDictionary, NSArray, <NSConnectionDelegate>, NSPort;

@interface NSConnection : NSObject  {
    id receivePort;
    id sendPort;
    id delegate;
    int busy;
    int localProxyCount;
    int waitCount;
    id delayedRL;
    id statistics;
    unsigned char isDead;
    unsigned char isValid;
    unsigned char wantsInvalid;
    unsigned int authGen : 1;
    unsigned int authCheck : 1;
    unsigned int _reserved1 : 1;
    unsigned int _reserved2 : 1;
    unsigned int doRequest : 1;
    unsigned int isQueueing : 1;
    unsigned int isMulti : 1;
    unsigned int invalidateRP : 1;
    id ___1;
    id ___2;
    id runLoops;
    id requestModes;
    id rootObject;
    void *registerInfo;
    id replMode;
    id classInfoImported;
    id releasedProxies;
    id reserved;
}

@property(copy,readonly) NSDictionary * statistics;
@property double requestTimeout;
@property double replyTimeout;
@property(retain) id rootObject;
@property <NSConnectionDelegate> * delegate;
@property bool independentConversationQueueing;
@property(getter=isValid,readonly) bool valid;
@property(retain,readonly) NSDistantObject * rootProxy;
@property(copy,readonly) NSArray * requestModes;
@property(retain,readonly) NSPort * sendPort;
@property(retain,readonly) NSPort * receivePort;
@property(readonly) bool multipleThreadsEnabled;
@property(copy,readonly) NSArray * remoteObjects;
@property(copy,readonly) NSArray * localObjects;

+ (id)statistics;
+ (void)initialize;
+ (void)_toggleLogging;
+ (id)currentConversation;
+ (id)defaultConnection;
+ (id)serviceConnectionWithName:(id)arg1 rootObject:(id)arg2;
+ (id)rootProxyForConnectionWithRegisteredName:(id)arg1 host:(id)arg2 usingNameServer:(id)arg3;
+ (id)rootProxyForConnectionWithRegisteredName:(id)arg1 host:(id)arg2;
+ (id)connectionWithRegisteredName:(id)arg1 host:(id)arg2;
+ (void)_enableLogging:(bool)arg1;
+ (id)allConnections;
+ (id)serviceConnectionWithName:(id)arg1 rootObject:(id)arg2 usingNameServer:(id)arg3;
+ (id)connectionWithRegisteredName:(id)arg1 host:(id)arg2 usingNameServer:(id)arg3;
+ (void)_portInvalidated:(id)arg1;
+ (id)connectionWithReceivePort:(id)arg1 sendPort:(id)arg2;
+ (id)lookUpConnectionWithReceivePort:(id)arg1 sendPort:(id)arg2;

- (id)statistics;
- (void)run;
- (id)init;
- (void)setDelegate:(id)arg1;
- (bool)isValid;
- (void)invalidate;
- (id)delegate;
- (void)finalize;
- (void)dealloc;
- (oneway void)release;
- (id)retain;
- (id)description;
- (void)runInNewThread;
- (bool)multipleThreadsEnabled;
- (void)enableMultipleThreads;
- (void)_setUseKC:(bool)arg1;
- (void)sendInvocation:(id)arg1;
- (bool)sendWireCountForWireID:(unsigned int)arg1 port:(id)arg2;
- (Class)_portCoderClassWithComponents:(id)arg1;
- (id)localObjects;
- (id)remoteObjects;
- (void)releaseWireID:(unsigned int)arg1 count:(unsigned long long)arg2;
- (unsigned long long)versionForClassNamed:(id)arg1;
- (void)addClassNamed:(char *)arg1 version:(unsigned long long)arg2;
- (void)_decrementLocalProxyCount;
- (void)_incrementLocalProxyCount;
- (void)setReplyMode:(id)arg1;
- (id)replyMode;
- (id)requestModes;
- (void)removeRequestMode:(id)arg1;
- (void)addRequestMode:(id)arg1;
- (void)setIndependentConversationQueueing:(bool)arg1;
- (bool)independentConversationQueueing;
- (void)setReplyTimeout:(double)arg1;
- (void)setRequestTimeout:(double)arg1;
- (bool)registerName:(id)arg1;
- (void)_authenticateComponents:(id)arg1;
- (void)sendInvocation:(id)arg1 internal:(bool)arg2;
- (bool)hasRunLoop:(id)arg1;
- (void)encodeReleasedProxies:(id)arg1;
- (id)dispatchInvocation:(id)arg1;
- (bool)_shouldDispatch:(id*)arg1 invocation:(id)arg2 sequence:(unsigned int)arg3 coder:(id)arg4;
- (id)newConversation;
- (void)decodeReleasedProxies:(id)arg1;
- (void)handleRequest:(id)arg1 sequence:(unsigned int)arg2;
- (void)handlePortCoder:(id)arg1;
- (id)portCoderWithComponents:(id)arg1;
- (bool)_verifyComponents:(id)arg1;
- (void)_sendBeforeTime:(double)arg1 coder:(id)arg2 doAuthenticationCheck:(bool)arg3;
- (Class)_portCoderClass;
- (void)handleUnkeyedReleasedProxies:(char *)arg1 length:(unsigned long long)arg2;
- (void)handleKeyedReleasedProxies:(id)arg1;
- (void)_encodeProxyList:(id)arg1 forCoder:(id)arg2;
- (void)removePortsFromRunLoop:(id)arg1;
- (void)addPortsToRunLoop:(id)arg1;
- (id)rootObject;
- (id)keyedRootObject;
- (void)sendReleasedProxies;
- (void)_setWhitelist:(id)arg1;
- (double)requestTimeout;
- (double)replyTimeout;
- (void)addRunLoop:(id)arg1;
- (void)setRootObject:(id)arg1;
- (bool)registerName:(id)arg1 withNameServer:(id)arg2;
- (id)rootProxy;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2;
- (void)returnResult:(id)arg1 exception:(id)arg2 sequence:(unsigned int)arg3 imports:(id)arg4;
- (void)removeRunLoop:(id)arg1;
- (void)handlePortMessage:(id)arg1;
- (void)dispatchWithComponents:(id)arg1;
- (id)sendPort;
- (id)receivePort;

@end
