/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/AddressBookUI.framework/AddressBookUI
 */

@class NSArray, NSString, NSPredicate, <CNContactPickerDelegate>, UIViewController<CNContactPickerContentViewController>;

@interface CNContactPicker : UIViewController <CNContactPickerContentDelegate> {
    bool_ignoreViewWillBePresented;
    bool_hidesSearchableSources;
    bool_allowsEditing;
    bool_allowsBlocking;
    bool_allowsCancel;
    bool_allowsOnlyPhoneActions;
    bool_allowsOnlyFaceTimeActions;
    bool_allowsFaceTime;
    bool_allowsSounds;
    bool_hidesPromptInLandscape;
    bool_defaultViewControllerVisible;
    NSArray *_displayedKeys;
    <CNContactPickerDelegate> *_delegate;
    NSPredicate *_predicateForEnablingContact;
    NSPredicate *_predicateForSelectionOfContact;
    NSPredicate *_predicateForSelectionOfProperty;
    long long _behavior;
    NSString *_prompt;
    NSString *_bannerTitle;
    NSString *_bannerValue;
    UIViewController<CNContactPickerContentViewController> *_viewController;
}

@property(copy) NSArray * displayedKeys;
@property <CNContactPickerDelegate> * delegate;
@property(copy) NSPredicate * predicateForEnablingContact;
@property(copy) NSPredicate * predicateForSelectionOfContact;
@property(copy) NSPredicate * predicateForSelectionOfProperty;
@property long long behavior;
@property bool hidesSearchableSources;
@property bool allowsEditing;
@property bool allowsBlocking;
@property bool allowsCancel;
@property bool allowsOnlyPhoneActions;
@property bool allowsOnlyFaceTimeActions;
@property bool allowsFaceTime;
@property bool allowsSounds;
@property(copy) NSString * prompt;
@property bool hidesPromptInLandscape;
@property(copy) NSString * bannerTitle;
@property(copy) NSString * bannerValue;
@property(getter=isDefaultViewControllerVisible,readonly) bool defaultViewControllerVisible;
@property(retain) UIViewController<CNContactPickerContentViewController> * viewController;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;


- (void)setHidesPromptInLandscape:(bool)arg1;
- (bool)isDefaultViewControllerVisible;
- (void)setBannerValue:(id)arg1;
- (id)bannerValue;
- (void)setBannerTitle:(id)arg1;
- (id)bannerTitle;
- (bool)hidesPromptInLandscape;
- (void)setAllowsSounds:(bool)arg1;
- (bool)allowsSounds;
- (void)setAllowsFaceTime:(bool)arg1;
- (bool)allowsFaceTime;
- (void)setAllowsOnlyFaceTimeActions:(bool)arg1;
- (bool)allowsOnlyFaceTimeActions;
- (void)setAllowsOnlyPhoneActions:(bool)arg1;
- (bool)allowsOnlyPhoneActions;
- (bool)allowsCancel;
- (void)setAllowsBlocking:(bool)arg1;
- (bool)allowsBlocking;
- (id)predicateForSelectionOfProperty;
- (id)predicateForSelectionOfContact;
- (void)setPredicateForEnablingContact:(id)arg1;
- (id)predicateForEnablingContact;
- (void)setDisplayedKeys:(id)arg1;
- (id)displayedKeys;
- (void)popToDefaultViewController:(bool)arg1;
- (void)pickerDidCancel;
- (void)pickerDidSelectContact:(id)arg1 propertyKey:(id)arg2 propertyIdentifier:(int)arg3;
- (void)closePickerIfNeeded;
- (id)_pickerPresentedViewController;
- (void)_checkConsistencyFromProperties:(id)arg1;
- (id)_propertiesSource;
- (void)_setupViewController;
- (void*)_addressBook;
- (void)_viewWillBePresented;
- (void)_prepareViewController;
- (void)setPredicateForSelectionOfProperty:(id)arg1;
- (void)setPredicateForSelectionOfContact:(id)arg1;
- (void)setHidesSearchableSources:(bool)arg1;
- (bool)hidesSearchableSources;
- (id)styleProvider;
- (void)setBehavior:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (void).cxx_destruct;
- (long long)behavior;
- (void)setAllowsCancel:(bool)arg1;
- (void)_setViewController:(id)arg1;
- (void)setAllowsEditing:(bool)arg1;
- (bool)allowsEditing;
- (bool)_isDelayingPresentation;
- (id)viewController;
- (void)setViewController:(id)arg1;
- (void)_endDelayingPresentation;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)setPrompt:(id)arg1;
- (id)prompt;

@end
