/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/AddressBookUI.framework/AddressBookUI
 */

@class NSString, UIFont, UIColor;

@interface ABFaceTimeStyleProvider : ABTabletStyleProvider <TKTonePickerStyleProvider, TKVibrationPickerStyleProvider> {
}

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;
@property(readonly) bool tonePickerUsesOpaqueBackground;
@property(readonly) long long tonePickerTableViewSeparatorStyle;
@property(readonly) UIFont * tonePickerCellTextFont;
@property(readonly) UIColor * tonePickerCellTextColor;
@property(readonly) UIColor * tonePickerCellHighlightedTextColor;
@property(readonly) UIColor * tonePickerCellBackgroundColor;
@property(readonly) bool wantsCustomTonePickerHeaderView;
@property(readonly) UIFont * tonePickerHeaderTextFont;
@property(readonly) UIColor * tonePickerHeaderTextColor;
@property(readonly) UIColor * tonePickerHeaderTextShadowColor;
@property(readonly) struct UIOffset { double x1; double x2; } tonePickerHeaderTextShadowOffset;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } tonePickerHeaderTextPaddingInsets;
@property(readonly) UIColor * tonePickerCustomTableSeparatorColor;
@property(readonly) long long tonePickerCustomTableSeparatorBackdropOverlayBlendMode;
@property(readonly) bool tonePickerHeaderTextShouldBeUppercase;
@property(readonly) bool vibrationPickerUsesOpaqueBackground;
@property(readonly) long long vibrationPickerTableViewSeparatorStyle;
@property(readonly) UIFont * vibrationPickerCellTextFont;
@property(readonly) UIColor * vibrationPickerCellTextColor;
@property(readonly) UIColor * vibrationPickerCellHighlightedTextColor;
@property(readonly) UIColor * vibrationPickerCellBackgroundColor;
@property(readonly) bool wantsCustomVibrationPickerHeaderView;
@property(readonly) UIFont * vibrationPickerHeaderTextFont;
@property(readonly) UIColor * vibrationPickerHeaderTextColor;
@property(readonly) UIColor * vibrationPickerHeaderTextShadowColor;
@property(readonly) struct UIOffset { double x1; double x2; } vibrationPickerHeaderTextShadowOffset;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } vibrationPickerHeaderTextPaddingInsets;
@property(readonly) UIColor * vibrationPickerCustomTableSeparatorColor;
@property(readonly) long long vibrationPickerCustomTableSeparatorBackdropOverlayBlendMode;
@property(readonly) bool vibrationPickerHeaderTextShouldBeUppercase;


- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })vibrationPickerHeaderTextPaddingInsets;
- (struct UIOffset { double x1; double x2; })vibrationPickerHeaderTextShadowOffset;
- (id)vibrationPickerHeaderTextShadowColor;
- (id)vibrationPickerHeaderTextColor;
- (id)vibrationPickerHeaderTextFont;
- (bool)vibrationPickerHeaderTextShouldBeUppercase;
- (bool)wantsCustomVibrationPickerHeaderView;
- (id)newAccessoryDisclosureIndicatorViewForVibrationPickerCell;
- (id)newBackgroundViewForSelectedVibrationPickerCell:(bool)arg1;
- (id)vibrationPickerCellBackgroundColor;
- (id)vibrationPickerCellHighlightedTextColor;
- (id)vibrationPickerCellTextColor;
- (id)vibrationPickerCellTextFont;
- (long long)vibrationPickerTableViewSeparatorStyle;
- (bool)vibrationPickerUsesOpaqueBackground;
- (id)vibrationPickerCellSelectedTextColor;
- (id)tonePickerCellSelectedTextColor;
- (bool)tonePickerHeaderTextShouldBeUppercase;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })tonePickerHeaderTextPaddingInsets;
- (struct UIOffset { double x1; double x2; })tonePickerHeaderTextShadowOffset;
- (id)tonePickerHeaderTextShadowColor;
- (id)tonePickerHeaderTextColor;
- (id)tonePickerHeaderTextFont;
- (bool)wantsCustomTonePickerHeaderView;
- (id)newAccessoryDisclosureIndicatorViewForTonePickerCell;
- (id)newBackgroundViewForSelectedTonePickerCell:(bool)arg1;
- (id)tonePickerCellBackgroundColor;
- (id)tonePickerCellHighlightedTextColor;
- (id)tonePickerCellTextColor;
- (id)tonePickerCellTextFont;
- (long long)tonePickerTableViewSeparatorStyle;
- (bool)tonePickerUsesOpaqueBackground;
- (id)groupAccountNameShadowColor;
- (long long)groupCellSelectionStyle;
- (id)groupCellShadowColor;
- (id)groupCellHighlightedTextColor;
- (bool)groupsTableShouldRemoveBackgroundView;
- (bool)presentModalViewInPopover;
- (bool)presentNewContactsControllersInPopover;
- (bool)presentDatePickerInPopover;
- (int)dialogStyleForDeleteConfirmation;
- (bool)shouldDefinePickerTransitionStyle;
- (long long)pickerTransitionStyle;
- (bool)datePickerHasNavigationTitle;
- (id)cardPhotoEditPlaceholderImage;
- (bool)cardPlaceholderImageShouldApplyMaskAndOverlay;
- (id)cardPlaceholderCompanyImage;
- (id)cardPlaceholderPersonImage;
- (struct CGSize { double x1; double x2; })cardPhotoShadowOffset;
- (id)cardPhotoShadowImage;
- (bool)cardPhotoShouldApplyOverlayImageWhenLabelPresent;
- (id)cardPhotoEditOverlayImage;
- (id)cardPhotoFacebookAttributionImage;
- (id)cardPhotoOverlayImage;
- (id)cardPhotoMaskImage;
- (struct CGSize { double x1; double x2; })cardPhotoOffset;
- (id)cardPhotoBackgroundImage;
- (id)personViewGetFavoritesBadgeHighlighted;
- (id)personViewGetFavoritesBadge;
- (bool)cardSectionDrawsDefaultTopShadow;
- (bool)cardSectionAlwaysWantsHeader;
- (bool)cardShouldUseSeparateSectionsForUnknownCardActions;
- (bool)cardTableViewUsesDistinctSectionHeaderFooterHeights;
- (bool)cardTableUsesRowFadeAnimation;
- (id)cardDeleteButtonImagePressed;
- (id)cardDeleteButtonImage;
- (id)cardCellDividerShadowColorVertical:(bool)arg1;
- (bool)cardCellLooksDifferentWhenEditing;
- (bool)cardActionsAllowFaceTimeFavorites;
- (bool)cardActionsAllowVoiceFavorites;
- (id)cardActionConferenceIconPressed;
- (id)cardActionConferenceIcon;
- (id)cardActionButtonBackgroundHighlighted;
- (id)cardActionButtonBackgroundNormal;
- (long long)cardActionButtonType;
- (id)personHeaderPasteboardColor;
- (struct CGSize { double x1; double x2; })personActionShadowOffset;
- (id)personActionShadowColor;
- (id)personActionHighlightedColor;
- (id)personActionColor;
- (id)personActionFont;
- (id)personLabelShadowColor;
- (id)personLabelHighlightedColor;
- (id)personValueImportantHighlightColor;
- (id)personValueImportantColor;
- (id)cardLabelEmphasizedHighlightedTextColor;
- (id)cardLabelHighlightedTextColor;
- (id)editorViewColor;
- (id)cardLabelSelectedBackgroundColor;
- (bool)cardValueHighlightsWhenTouched;
- (id)cardValueClearButtonImage;
- (id)cardValueHighlightedTextColor;
- (id)cardHeaderDefaultLabelTextColor;
- (long long)headerViewBorderStyle;
- (id)cardTableCellBorderColor;
- (id)personHeaderShadowColor;
- (id)cardTaglineTextColor;
- (id)cardHeadlineTextColor;
- (bool)cardTableShouldRemoveBackgroundView;
- (bool)membersSearchBarIsInTableHeader;
- (double)membersIndexMaximumHeight;
- (long long)membersSelectionStyle;
- (id)memberSearchFieldBackgroundColor;
- (id)memberNameMeCardTextColor;
- (id)memberNameSelectedShadowColor;
- (id)cardSectionBackgroundColor;
- (id)membersSearchCellBackgroundColor;
- (id)membersSearchBackgroundColor;
- (id)membersBackgroundColor;
- (id)memberHeaderBackgroundView;
- (id)membersHeaderContentViewBackgroundColor;
- (id)newTableFooterViewForCellStyle:(int)arg1;
- (id)newAccessoryDisclosureIndicatorForCellStyle:(int)arg1;
- (int)abCellStyleForCardTableLinkingUI;
- (int)abCellStyleForGroupsTablePlain;
- (int)abCellStyleForGroupsTableGrouped;
- (double)personViewHeaderImageHeight;
- (double)personViewHeaderImageWidth;
- (id)newCardDividerViewVertical:(bool)arg1;
- (struct CGSize { double x1; double x2; })personHeaderShadowOffset;
- (id)personValueEmphasizedColor;
- (id)personValueEmphasizedHighlightColor;
- (id)cardLabelTextColor;
- (id)memberNameShadowColor;
- (long long)cardCellSelectionStyle;
- (id)memberNameTextColor;
- (id)membersHeaderBackgroundColor;
- (id)_accessoryDisclosureIndicatorHighlightedImageShadowed;
- (id)_accessoryDisclosureIndicatorHighlightedImage;
- (id)_accessoryDisclosureIndicatorImageShadowed;
- (id)_accessoryDisclosureIndicatorImage;
- (bool)shouldPropagateStylesToPickers;
- (bool)shouldUseCardContentProviderWhenAvailable;
- (void)setIndicatesFaceTimeHistory:(bool)arg1 onActionButton:(id)arg2;
- (id)memberSectionListHeaderImage;
- (id)membersIndexTrackingBackgroundColor;
- (id)membersIndexTextColor;
- (bool)peoplePickerBarStyleIsTranslucent;
- (long long)peoplePickerBarStyle;
- (bool)shouldUsePeoplePickerBarStyle;
- (id)separatorColorForCellStyle:(int)arg1;
- (long long)separatorStyleForCellStyle:(int)arg1;
- (int)abCellStyleForMembersTable;
- (id)memberPlaceholderCompanyImage;
- (id)memberPhotoOverlayImage;
- (id)memberPlaceholderPersonImage;
- (id)memberPhotoMaskImage;
- (id)cardValueTextColor;
- (double)cardPhotoFrameBorderSize;
- (id)cardClippingImageLabelBevelColor;
- (id)cardClippingImageLabelColor;
- (id)newBackgroundViewForCellStyle:(int)arg1 selected:(bool)arg2;
- (id)shadowColorForCellStyle:(int)arg1;
- (id)cardCellBackgroundColor;
- (id)memberNameSelectedColor;
- (int)abCellStyleForCardTableWhenEditing:(bool)arg1;
- (id)personLabelColor;
- (bool)labelPickerUsesOpaqueBackground;
- (id)groupAccountNameColor;
- (id)groupHeaderBackgroudColor;
- (id)groupCellTextColor;
- (id)groupCellBackgroundColor;
- (id)cardCellDividerColorVertical:(bool)arg1;
- (id)groupsTableBackgroundColor;

@end
