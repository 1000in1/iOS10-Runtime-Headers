/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/Social.framework/Social
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class CLLocation, NSObject<SLPlaceDataSourceDelegate>, CLLocationManager, ACAccount, NSMutableData, NSHTTPURLResponse, NSURLConnection;

@interface SLFacebookPlaceManager : NSObject <CLLocationManagerDelegate, SLPlaceDataSource> {
    CLLocationManager *_locationManager;
    double _timeout;
    bool_isCanceled;
    bool_isUpdatingLocation;
    bool_disableTimeout;
    NSMutableData *_placeData;
    NSHTTPURLResponse *_urlResponse;
    NSURLConnection *_urlConnection;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _queuedSearchRequest;

    CLLocation *_currentLocation;
    NSObject<SLPlaceDataSourceDelegate> *_delegate;
    ACAccount *_account;
}

@property(readonly) double currentLocationAccuracy;
@property(retain) CLLocation * currentLocation;
@property NSObject<SLPlaceDataSourceDelegate> * delegate;
@property(retain) ACAccount * account;


- (double)currentLocationAccuracy;
- (id)initWithLocationManager:(id)arg1 account:(id)arg2 desiredAccuracy:(double)arg3 timeout:(double)arg4;
- (id)_placesArrayWithPlacesData:(id)arg1;
- (double)distanceFromCurrentLocationToPlace:(id)arg1;
- (void)_handleResponse:(id)arg1 error:(id)arg2;
- (void)fetchPlacesWithSearchString:(id)arg1;
- (void)cancelPlaceFetch;
- (void)fetchPlaces;
- (void)locationDidTimeout;
- (void)setCurrentLocation:(id)arg1;
- (id)currentLocation;
- (id)account;
- (void)setAccount:(id)arg1;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)startUpdatingLocation;
- (void)stopUpdatingLocation;
- (void)setDelegate:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (id)delegate;
- (void).cxx_destruct;

@end
