/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 */

@class NSObject<OS_dispatch_queue>, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, LSObserverTimer, LSInstallProgressList;

@interface LSInstallProgressDelegate : NSObject <NSXPCListenerDelegate, LSInstallProgressProtocol> {
    NSMutableDictionary *_observers;
    LSInstallProgressList *_progresses;
    NSMutableOrderedSet *_orderedInstalls;
    NSMutableDictionary *_installIndexes;
    NSMutableSet *_inactiveInstalls;
    LSObserverTimer *installsStartedTimer;
    LSObserverTimer *iconsUpdatedTimer;
    LSObserverTimer *installsUpdatedTimer;
    LSObserverTimer *installsFinishedTimer;
    LSObserverTimer *didUninstallTimer;
    NSObject<OS_dispatch_queue> *_installControlsQueue;
    NSObject<OS_dispatch_queue> *_observersQueue;
    bool_usingNetwork;
}


- (void)handleCancelInstallationForApp:(id)arg1;
- (void)sendAppControlsNotificationForApp:(id)arg1 withName:(id)arg2;
- (void)rebuildInstallIndexes;
- (id)parentProgressForApplication:(id)arg1 andPhase:(unsigned long long)arg2 isActive:(bool)arg3;
- (void)restoreInactiveInstalls;
- (void)sendNetworkUsageChangedNotification;
- (void)sendInstalledNotificationForApps:(id)arg1;
- (void)installationFailedForApplication:(id)arg1 reply:(id)arg2;
- (void)createInstallProgressForApplication:(id)arg1 withPhase:(unsigned long long)arg2 andPublishingString:(id)arg3;
- (void)sendChangeNotificationForApp:(id)arg1;
- (void)sendUninstalledNotificationForApps:(id)arg1;
- (void)sendInstalledNotificationForApp:(id)arg1 reply:(id)arg2;
- (void)sendIconUpdatedNotificationForApp:(id)arg1;
- (void)placeholderInstalledForApp:(id)arg1;
- (void)sendUninstalledNotificationForApp:(id)arg1 reply:(id)arg2;
- (void)installationEndedForApplication:(id)arg1;
- (void)sendFailedNotificationForApp:(id)arg1 isUninstall:(bool)arg2;
- (void)sendWillUninstallNotificationForApps:(id)arg1 Plugins:(id)arg2 isUpdate:(bool)arg3;
- (void)removeObserverWithUUID:(id)arg1;
- (void)addObserver:(id)arg1 withUUID:(id)arg2;
- (id)init;
- (void)dealloc;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;

@end
