/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/GameplayKit.framework/GameplayKit
 */

@interface GKGridGraph : GKGraph {
    BOOL  _diagonalsAllowed;
    unsigned int  _gridHeight;
    /* Warning: unhandled struct encoding: '{vector<GKGridGraphNode *, std::__1::allocator<GKGridGraphNode *> >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<GKGridGraphNode *__strong *, std::__1::allocator<GKGridGraphNode *> >="__first_"^@}}' */ struct vector<GKGridGraphNode *, std::__1::allocator<GKGridGraphNode *> > { 
        __end_ **__begin_; 
    }  _gridNodes;
    void _gridOrigin;
    unsigned int  _gridWidth;
}

@property (nonatomic, readonly) BOOL diagonalsAllowed;
@property (nonatomic, readonly) unsigned int gridHeight;
@property (nonatomic, readonly) void gridOrigin;
@property (nonatomic, readonly) unsigned int gridWidth;

+ (id)graphFromGridStartingAt:(void *)arg1 width:(void *)arg2 height:(void *)arg3 diagonalsAllowed:(void *)arg4; // needs 4 arg types, found 3: int, int, BOOL

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)connectNodeToAdjacentNodes:(id)arg1;
- (BOOL)diagonalsAllowed;
- (unsigned int)gridHeight;
- (void)gridOrigin;
- (unsigned int)gridWidth;
- (id)initFromGridStartingAt:(void *)arg1 width:(void *)arg2 height:(void *)arg3 diagonalsAllowed:(void *)arg4; // needs 4 arg types, found 3: int, int, BOOL
- (id)nodeAtGridPosition;
- (id)nodeAtGridPositionNoNilCheck;
- (void)removeNodes:(id)arg1;

@end
