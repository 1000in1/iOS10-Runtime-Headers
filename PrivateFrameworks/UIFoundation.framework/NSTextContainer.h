/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation
 */

@class NSLayoutManager, NSArray;

@interface NSTextContainer : NSObject <NSCoding, NSTextLayoutOrientationProvider> {
    NSLayoutManager *_layoutManager;
    id _textView;
    struct CGSize { 
        float width; 
        float height; 
    } _size;
    float _lineFragmentPadding;
    unsigned int _maximumLines;
    struct __tcFlags { 
        unsigned int widthTracksTextView : 1; 
        unsigned int heightTracksTextView : 1; 
        unsigned int observingFrameChanges : 1; 
        unsigned int lineBreakMode : 4; 
        unsigned int _reserved : 9; 
    } _tcFlags;
    NSArray *_exclusionPaths;
    struct CGPath { } *_cachedBoundingPath;
    struct __CFArray { } *_cachedClippingAttributes;
    struct __CFArray { } *_cachedBounds;
    float _cacheBoundsMinY;
    float _cacheBoundsMaxY;
    int _layoutOrientation;
}

@property(readonly) BOOL isSimpleRectangularTextContainer;
@property NSLayoutManager * layoutManager;
@property struct CGSize { float x1; float x2; } size;
@property(copy) NSArray * exclusionPaths;
@property int lineBreakMode;
@property float lineFragmentPadding;
@property unsigned int maximumNumberOfLines;
@property BOOL widthTracksTextView;
@property BOOL heightTracksTextView;
@property int layoutOrientation;

+ (void)initialize;

- (struct CGSize { float x1; float x2; })size;
- (void)setLineBreakMode:(int)arg1;
- (int)lineBreakMode;
- (void)setExclusionPaths:(id)arg1;
- (void)replaceLayoutManager:(id)arg1;
- (id)initWithContainerSize:(struct CGSize { float x1; float x2; })arg1;
- (id)exclusionPaths;
- (void)setSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_resizeAccordingToTextView:(id)arg1;
- (void)setHeightTracksTextView:(BOOL)arg1;
- (void)setWidthTracksTextView:(BOOL)arg1;
- (id)initWithSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })lineFragmentRectForProposedRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 atIndex:(unsigned int)arg2 writingDirection:(int)arg3 remainingRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg4;
- (void)setLineFragmentPadding:(float)arg1;
- (void)setContainerSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setMaximumNumberOfLines:(unsigned int)arg1;
- (unsigned int)maximumNumberOfLines;
- (BOOL)isSimpleRectangularTextContainer;
- (struct CGPoint { float x1; float x2; })textContainerOrigin;
- (id)textView;
- (void)setLayoutManager:(id)arg1;
- (void)_commonInit;
- (id)layoutManager;
- (float)lineFragmentPadding;
- (struct CGSize { float x1; float x2; })containerSize;
- (int)layoutOrientation;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })lineFragmentRectForProposedRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 remainingRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg2;
- (id)init;
- (void)dealloc;
- (id)description;
- (BOOL)heightTracksTextView;
- (BOOL)widthTracksTextView;
- (void)setLayoutOrientation:(int)arg1;
- (void)coordinateAccess:(id)arg1;
- (void)setTextView:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end
