/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@interface TileLayer : CALayer  {
    struct TileGrid { struct TileCache {} *x1; struct RetainPtr<CALayer> { struct CALayer { Class x_1_2_1; struct _CALayerIvars { int x_2_3_1; unsigned int x_2_3_2; void *x_2_3_3; void *x_2_3_4[8]; } x_1_2_2; } *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; struct HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::TileGridTile> > > { struct HashTable<WebCore::IntPoint, WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> > >, WTF::IntPointHash, WTF::HashMapValueTraits<WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::TileGridTile> > >, WTF::HashTraits<WebCore::IntPoint> > { struct KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_6_1_1; } x6; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_7_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_7_1_2; } x7; } *_tileGrid;
    unsigned int _paintCount;
}

@property unsigned int paintCount;
@property struct TileGrid { struct TileCache {} *x1; struct RetainPtr<CALayer> { struct CALayer { Class x_1_2_1; struct _CALayerIvars { int x_2_3_1; unsigned int x_2_3_2; void *x_2_3_3; void *x_2_3_4[8]; } x_1_2_2; } *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; /* Warning: unhandled struct encoding: '{HashMap<WebCore::IntPoint' */ struct x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; long x22; int x23; BOOL x24; void*x25; void*x26; int x27; out in short x28; void*x29; void*x30; BOOL x31; out double x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; unsigned char x40; out in void*x41; void*x42; in void*x43; short x44; void*x45; void*x46; void*x47; void x48; void*x49; long x50; out void*x51; void*x52; const void*x53; void*x54; long x55; void*x56; void*x57; float x58; out const void*x59; short x60; void*x61; int x62; void*x63; void*x64; out in void*x65; unsigned short x66; int x67; void*x68; void*x69; long x70; void*x71; void*x72; out const void*x73; void*x74; long x75; void*x76; void*x77; float x78; out const void*x79; void*x80; void*x81; void*x82; void x83; void*x84; long x85; out void*x86; void*x87; const void*x88; unsigned short x89; void*x90; void*x91; short x92; void*x93; int x94; void*x95; void*x96; out in void*x97; unsigned short x98; int x99; void*x100; void*x101; long x102; void*x103; void*x104; out const void*x105; void*x106; void*x107; void*x108; short x109; double x110; void*x111; void*x112; unsigned short x113; void*x114; short x115; void*x116; void*x117; void*x118; void*x119; unsigned long x120; int x121; unsigned int x122/* : ? */; const void*x123; const void*x124; void*x125; void*x126; const void*x127; void*x128; void*x129; void*x130; out const void*x131; short x132; void*x133; void*x134; unsigned int x135; void*x136; int x137; void*x138; void*x139; float x140; const void*x141; void*x142; void*x143; void*x144; out const void*x145; void*x146; void*x147; unsigned int x148; void*x149; int x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; inout void*x163; unsigned short x164; void*x165; short x166; void*x167; void*x168; void*x169; void*x170; unsigned long x171; int x172; unsigned int x173/* : ? */; const void*x174; const void*x175; void*x176; void*x177; const void*x178; void*x179; void*x180; void*x181; out const void*x182; short x183; void*x184; void*x185; void*x186; void*x187; long x188; void*x189; unsigned short x190; void*x191; void*x192; const void*x193; unsigned char x194; long x195; int x196; void*x197; in void*x198; unsigned char x199; out const void*x200; void*x201; float x202; const void*x203; void*x204; void*x205; void*x206; out const void*x207; void*x208; void*x209; void*x210; void*x211; long x212; void*x213; unsigned short x214; void*x215; void*x216; const void*x217; unsigned char x218; long x219; int x220; void*x221; in void*x222; unsigned char x223; out const void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; long x238; int x239; BOOL x240; void*x241; void*x242; int x243; out in short x244; void*x245; void*x246; BOOL x247; out double x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; unsigned char x256; out in void*x257; void*x258; in void*x259; short x260; void*x261; void*x262; void*x263; void x264; void*x265; long x266; out void*x267; void*x268; const void*x269; void*x270; long x271; void*x272; void*x273; float x274; out const void*x275; short x276; void*x277; int x278; void*x279; void*x280; out in void*x281; unsigned short x282; int x283; void*x284; void*x285; long x286; void*x287; void*x288; out const void*x289; void*x290; long x291; void*x292; void*x293; float x294; out const void*x295; void*x296; void*x297; void*x298; void x299; void*x300; long x301; out void*x302; void*x303; const void*x304; unsigned short x305; void*x306; void*x307; short x308; void*x309; int x310; void*x311; void*x312; out in void*x313; unsigned short x314; int x315; void*x316; void*x317; long x318; void*x319; void*x320; out const void*x321; void*x322; void*x323; void*x324; short x325; double x326; void*x327; void*x328; unsigned short x329; void*x330; short x331; void*x332; void*x333; void*x334; void*x335; unsigned long x336; int x337; unsigned int x338/* : ? */; const void*x339; const void*x340; void*x341; void*x342; const int x343; void x344; void*x345; void*x346; void*x347; void*x348; const void*x349; void*x350; void*x351; void*x352; out const void*x353; short x354; void*x355; unsigned char x356; out void*x357; void*x358; void*x359; in int x360; BOOL x361; void*x362; void*x363; int x364; out in short x365; void*x366; int x367; long x368; void*x369; void*x370; const void*x371; float x372; const void*x373; void*x374; void*x375; void*x376; out const void*x377; void*x378; unsigned char x379; out void*x380; void*x381; void*x382; in int x383; BOOL x384; void*x385; void*x386; int x387; out in short x388; void*x389; int x390; long x391; void*x392; void*x393; const void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; long x405; int x406; BOOL x407; void*x408; void*x409; int x410; out in short x411; void*x412; void*x413; BOOL x414; out double x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; unsigned char x423; out in void*x424; void*x425; in void*x426; short x427; void*x428; void*x429; void*x430; void x431; void*x432; long x433; out void*x434; void*x435; const void*x436; void*x437; long x438; void*x439; void*x440; float x441; out const void*x442; short x443; void*x444; int x445; void*x446; void*x447; out in void*x448; unsigned short x449; int x450; void*x451; void*x452; long x453; void*x454; void*x455; out const void*x456; void*x457; long x458; void*x459; void*x460; float x461; out const void*x462; void*x463; void*x464; void*x465; void x466; void*x467; long x468; out void*x469; void*x470; const void*x471; unsigned short x472; void*x473; void*x474; short x475; void*x476; int x477; void*x478; void*x479; out in void*x480; unsigned short x481; int x482; void*x483; void*x484; long x485; void*x486; void*x487; out const void*x488; void*x489; void*x490; void*x491; short x492; double x493; void*x494; void*x495; unsigned short x496; void*x497; short x498; void*x499; void*x500; void*x501; void*x502; unsigned long x503; int x504; unsigned int x505/* : ? */; const void*x506; const void*x507; void*x508; void*x509; const int x510; void x511; void*x512; void*x513; void*x514; void*x515; const void*x516; void*x517; void*x518; void*x519; out const void*x520; short x521; void*x522; unsigned char x523; out void*x524; void*x525; void*x526; in int x527; BOOL x528; void*x529; void*x530; int x531; out in short x532; void*x533; int x534; long x535; void*x536; void*x537; const void*x538; float x539; const void*x540; void*x541; void*x542; void*x543; out const void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; BOOL x559; void*x560; BOOL x561; void*x562; out void*x563; void*x564; void*x565; in void*x566; void*x567; void*x568; short x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; float x587; const void*x588; void*x589; void*x590; void*x591; out const void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; unsigned char x625; void*x626; unsigned long x627; void*x628; void*x629; void*x630; const void*x631; Class x632; struct _CALayerIvars { int x_633_1_1; unsigned int x_633_1_2; void *x_633_1_3; void *x_633_1_4[8]; } x633; }* tileGrid; /* unknown property attribute:  WTF::RefPtr<WebCore::TileGridTile> >}iiii}}{IntRect={IntPoint=ii}{IntSize=ii}}} */

+ (id)layerBeingPainted;

- (void)setTileGrid:(struct TileGrid { struct TileCache {} *x1; struct RetainPtr<CALayer> { struct CALayer { Class x_1_2_1; struct _CALayerIvars { int x_2_3_1; unsigned int x_2_3_2; void *x_2_3_3; void *x_2_3_4[8]; } x_1_2_2; } *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; struct HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::TileGridTile> > > { struct HashTable<WebCore::IntPoint, WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> > >, WTF::IntPointHash, WTF::HashMapValueTraits<WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::TileGridTile> > >, WTF::HashTraits<WebCore::IntPoint> > { struct KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_6_1_1; } x6; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_7_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_7_1_2; } x7; }*)arg1;
- (struct TileGrid { struct TileCache {} *x1; struct RetainPtr<CALayer> { struct CALayer { Class x_1_2_1; struct _CALayerIvars { int x_2_3_1; unsigned int x_2_3_2; void *x_2_3_3; void *x_2_3_4[8]; } x_1_2_2; } *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; struct HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::TileGridTile> > > { struct HashTable<WebCore::IntPoint, WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> > >, WTF::IntPointHash, WTF::HashMapValueTraits<WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::TileGridTile> > >, WTF::HashTraits<WebCore::IntPoint> > { struct KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_6_1_1; } x6; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_7_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_7_1_2; } x7; }*)tileGrid;
- (void)setPaintCount:(unsigned int)arg1;
- (unsigned int)paintCount;
- (void)layoutSublayers;
- (void)drawInContext:(struct CGContext { }*)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)actionForKey:(id)arg1;

@end
