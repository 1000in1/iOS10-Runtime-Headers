/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices
 */

@class NSString, NSXPCConnection, <BKSAlternateSystemAppDelegate>, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>;

@interface BKSAlternateSystemApp : NSObject <BKSAlternateSystemAppClientProtocol> {
    bool_stateChangeWaiter;
    <BKSAlternateSystemAppDelegate> *_delegate;
    NSString *_bundleId;
    NSXPCConnection *_connection;
    NSObject<OS_dispatch_queue> *_queue;
    long long _state;
    NSObject<OS_dispatch_semaphore> *_stateChangeSemaphore;
}

@property <BKSAlternateSystemAppDelegate> * delegate;
@property(copy) NSString * bundleId;
@property(retain) NSXPCConnection * connection;
@property(retain) NSObject<OS_dispatch_queue> * queue;
@property long long state;
@property bool stateChangeWaiter;
@property(retain) NSObject<OS_dispatch_semaphore> * stateChangeSemaphore;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;


- (id)connection;
- (id)stateChangeSemaphore;
- (void)setStateChangeWaiter:(bool)arg1;
- (bool)stateChangeWaiter;
- (id)bundleId;
- (id)initWithBundleId:(id)arg1;
- (void)activate;
- (void)_handleInvalidatedConnection;
- (void)_handleInterruptedConnection;
- (void)alternateSystemAppWithBundleIDDidTerminate:(id)arg1;
- (void)alternateSystemAppWithBundleIDDidOpen:(id)arg1;
- (void)alternateSystemAppWithBundleID:(id)arg1 didExitWithReason:(unsigned long long)arg2;
- (void)alternateSystemAppWithBundleID:(id)arg1 failedToOpenWithResult:(id)arg2;
- (void)didUnblockSystemAppForAlternateSystemApp;
- (void)didBlockSystemAppForAlternateSystemApp;
- (void)_waitForState:(long long)arg1;
- (void)_queue_changeState:(long long)arg1;
- (void)_queue_ensureConnection;
- (void)setStateChangeSemaphore:(id)arg1;
- (void)setBundleId:(id)arg1;
- (void)setQueue:(id)arg1;
- (id)queue;
- (void)setDelegate:(id)arg1;
- (void)_invalidate;
- (id)delegate;
- (void)setState:(long long)arg1;
- (long long)state;
- (void)setConnection:(id)arg1;
- (void)dealloc;
- (void)terminate;

@end
