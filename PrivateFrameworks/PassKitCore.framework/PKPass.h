/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
 */

@class UIImage, NSData, PKPassDisplayProfile, PKImage, NSDate, NSSet, NSDictionary, PKPassImages, PKPassContent, PKBarcode, NSArray, NSString, NSURL;

@interface PKPass : NSObject <NSCopying, NSSecureCoding> {
    PKPassContent *_content;
    PKPassImages *_images[4];
    BOOL _voided;
    BOOL _revoked;
    NSString *_uniqueID;
    NSString *_passTypeIdentifier;
    NSString *_teamID;
    NSString *_serialNumber;
    NSString *_organizationName;
    NSDate *_expirationDate;
    NSString *_groupingID;
    NSDate *_relevantDate;
    NSSet *_embeddedLocations;
    NSURL *_webServiceURL;
    NSString *_authenticationToken;
    PKPassDisplayProfile *_displayProfile;
    NSData *_manifestHash;
    int _settings;
    NSDate *_ingestedDate;
    NSDate *_modifiedDate;
    NSDictionary *_userInfo;
    int _shareCount;
    NSSet *_embeddedBeacons;
    NSURL *_webLocationsURL;
    NSURL *_localLocationsURL;
    PKImage *_partialFrontFaceImagePlaceholder;
}

@property(copy) NSString * serialNumber;
@property(copy) NSString * passTypeIdentifier;
@property(copy) NSURL * webServiceURL;
@property(copy) NSString * authenticationToken;
@property(readonly) UIImage * icon;
@property(readonly) NSString * localizedName;
@property(readonly) NSString * localizedDescription;
@property(copy) NSString * organizationName;
@property(copy) NSDate * relevantDate;
@property(copy) NSDictionary * userInfo;
@property(readonly) NSURL * passURL;
@property int shareCount;
@property(copy) NSString * uniqueID;
@property(copy) NSString * teamID;
@property(retain) NSData * manifestHash;
@property(copy) NSDate * expirationDate;
@property(getter=isVoided) BOOL voided;
@property(copy) NSString * groupingID;
@property(copy) NSSet * embeddedLocations;
@property(copy) NSSet * embeddedBeacons;
@property(copy) NSURL * webLocationsURL;
@property(copy) NSURL * localLocationsURL;
@property(copy) PKPassDisplayProfile * displayProfile;
@property(readonly) int style;
@property(readonly) NSString * pluralLocalizedName;
@property(readonly) NSString * lowercaseLocalizedName;
@property int settings;
@property(readonly) PKBarcode * barcode;
@property(readonly) PKImage * footerImage;
@property(readonly) NSString * logoText;
@property(readonly) int transitType;
@property(readonly) NSArray * frontFieldBuckets;
@property(readonly) NSArray * backFieldBuckets;
@property(readonly) PKImage * iconImage;
@property(readonly) PKImage * frontFaceImage;
@property(readonly) PKImage * partialFrontFaceImage;
@property(readonly) PKImage * partialFrontFaceImagePlaceholder;
@property(readonly) PKImage * backFaceImage;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } logoRect;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } thumbnailRect;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } stripRect;
@property(readonly) NSArray * storeIdentifiers;
@property(readonly) NSURL * appLaunchURL;
@property(readonly) NSData * archivedPass;
@property(retain) NSDate * ingestedDate;
@property(retain) NSDate * modifiedDate;
@property(getter=isRevoked) BOOL revoked;

+ (BOOL)supportsSecureCoding;

- (id)partialFrontFaceImagePlaceholder;
- (void)setLocalLocationsURL:(id)arg1;
- (id)localLocationsURL;
- (void)setWebLocationsURL:(id)arg1;
- (id)webLocationsURL;
- (BOOL)isBundled;
- (id)allImageSetsLoadingIfNecessary;
- (void)flushCachedImageSets;
- (BOOL)isEqualToPassIncludingMetadata:(id)arg1;
- (id)_changeMessageForFieldKey:(id)arg1;
- (id)localizedValueForFieldKey:(id)arg1;
- (id)passURL;
- (id)lowercaseLocalizedName;
- (void)loadImageSetSync:(int)arg1 preheat:(BOOL)arg2;
- (void)loadContentSync;
- (void)loadImageSetAsync:(int)arg1 preheat:(BOOL)arg2 withCompletion:(id)arg3;
- (BOOL)contentIsLoaded;
- (void)fetchImageSet:(int)arg1 withCompletion:(id)arg2;
- (void)loadContentAsyncWithCompletion:(id)arg1;
- (void)fetchContentWithCompletion:(id)arg1;
- (id)_imageSetLoadingIfNecessary:(int)arg1;
- (id)_contentLoadingIfNecessary;
- (id)modifiedDate;
- (id)ingestedDate;
- (id)displayProfile;
- (id)authenticationToken;
- (id)webServiceURL;
- (id)embeddedBeacons;
- (id)embeddedLocations;
- (id)relevantDate;
- (id)groupingID;
- (BOOL)isVoided;
- (id)teamID;
- (void)setRevoked:(BOOL)arg1;
- (void)setModifiedDate:(id)arg1;
- (void)setIngestedDate:(id)arg1;
- (void)setEmbeddedBeacons:(id)arg1;
- (void)setEmbeddedLocations:(id)arg1;
- (void)setManifestHash:(id)arg1;
- (void)setDisplayProfile:(id)arg1;
- (void)setAuthenticationToken:(id)arg1;
- (void)setWebServiceURL:(id)arg1;
- (void)setRelevantDate:(id)arg1;
- (void)setGroupingID:(id)arg1;
- (void)setVoided:(BOOL)arg1;
- (void)setOrganizationName:(id)arg1;
- (void)setSerialNumber:(id)arg1;
- (void)setTeamID:(id)arg1;
- (void)setPassTypeIdentifier:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })stripRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })thumbnailRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })logoRect;
- (void)flushFormattedFieldValues;
- (id)appLaunchURL;
- (id)storeIdentifiers;
- (id)backFieldBuckets;
- (id)frontFieldBuckets;
- (id)logoText;
- (id)footerImage;
- (int)transitType;
- (id)barcode;
- (void)setShareCount:(int)arg1;
- (int)shareCount;
- (id)manifestHash;
- (id)passTypeIdentifier;
- (id)archivedPass;
- (id)pluralLocalizedName;
- (BOOL)isUpdatable;
- (BOOL)hasTimeOrLocationRelevancyInfo;
- (id)backFaceImage;
- (id)frontFaceImage;
- (id)partialFrontFaceImage;
- (BOOL)imageSetIsLoaded:(int)arg1;
- (id)organizationName;
- (id)serialNumber;
- (void)setExpirationDate:(id)arg1;
- (id)expirationDate;
- (void)setUniqueID:(id)arg1;
- (id)initWithData:(id)arg1 error:(id*)arg2;
- (BOOL)isExpired;
- (void)setSettings:(int)arg1;
- (id)uniqueID;
- (int)style;
- (id)userInfo;
- (id)localizedDescription;
- (id)localizedName;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)settings;
- (id)iconImage;
- (void)setUserInfo:(id)arg1;
- (BOOL)isRevoked;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)mailAttachmentIcon;
- (id)icon;

@end
