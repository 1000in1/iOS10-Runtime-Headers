/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
 */

@class NSURL, NSMutableDictionary, NSDate, NSDictionary, NSURLSession, <PKPaymentProvisioningServiceDelegate>, PKPaymentDevice, ACAccount, NSString, NSOperationQueue, NSArray, ACAccountStore, <PKPaymentBackgroundProvisioningServiceDelegate>, NSURLSessionConfiguration;

@interface PKPaymentWebService : NSObject <NSURLSessionDelegate, NSURLSessionDownloadDelegate, NSSecureCoding> {
    NSURLSession *_urlSession;
    ACAccountStore *_accountStore;
    PKPaymentDevice *_paymentDevice;
    NSMutableDictionary *_passesByLocalURL;
    NSDictionary *_backgroundTasksByTaskIdentifier;
    NSOperationQueue *_delegateOperationQueue;
    bool_devSigned;
    bool_transactionServiceSupported;
    bool_messageServiceSupported;
    bool_sharedService;
    NSString *_deviceID;
    NSString *_secureElementID;
    NSDate *_registrationDate;
    long long _consistencyCheckBackoffLevel;
    NSArray *_certificates;
    NSString *_lastUpdatedTag;
    NSURL *_brokerURL;
    NSURL *_paymentServicesURL;
    NSString *_pushToken;
    NSDictionary *_verificationRequestsByPassUniqueID;
    NSDate *_configurationDate;
    <PKPaymentProvisioningServiceDelegate> *_delegate;
    <PKPaymentBackgroundProvisioningServiceDelegate> *_backgroundDelegate;
    unsigned long long _maxCards;
}

@property(copy) NSString * deviceID;
@property(copy) NSString * secureElementID;
@property(copy) NSDate * registrationDate;
@property long long consistencyCheckBackoffLevel;
@property(copy) NSArray * certificates;
@property(readonly) bool needsRegistration;
@property(readonly) ACAccount * account;
@property(copy) NSString * lastUpdatedTag;
@property(copy) NSURL * brokerURL;
@property(copy) NSURL * paymentServicesURL;
@property(copy) NSString * pushToken;
@property bool devSigned;
@property(copy) NSDictionary * verificationRequestsByPassUniqueID;
@property bool transactionServiceSupported;
@property bool messageServiceSupported;
@property(copy) NSDate * configurationDate;
@property(readonly) bool needsConfiguration;
@property(readonly) int paymentSetupSupportedInRegion;
@property(readonly) NSURLSessionConfiguration * sessionConfiguration;
@property <PKPaymentProvisioningServiceDelegate> * delegate;
@property <PKPaymentBackgroundProvisioningServiceDelegate> * backgroundDelegate;
@property bool sharedService;
@property unsigned long long maxCards;
@property(retain) NSDictionary * backgroundTasksByTaskIdentifier;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;

+ (id)serviceWithArchive:(id)arg1;
+ (id)_sharedCookieStorage;
+ (id)sharedService;
+ (bool)supportsSecureCoding;

- (void)setMaxCards:(unsigned long long)arg1;
- (void)setBackgroundDelegate:(id)arg1;
- (void)deletePass:(id)arg1 completion:(id)arg2;
- (void)deprovisionPass:(id)arg1 completion:(id)arg2;
- (void)backgroundDownloadWithPassTypeIdentifier:(id)arg1 serialNumber:(id)arg2;
- (void)backgroundDownloadRemotePassAssets:(id)arg1;
- (void)userPassesWithCompletion:(id)arg1;
- (void)backgroundDownloadDevicePassesSinceLastUpdatedTag:(bool)arg1;
- (void)devicePassesSinceLastUpdatedTag:(bool)arg1 withCompletion:(id)arg2;
- (void)unregisterDeviceWithCompletion:(id)arg1;
- (void)configurePaymentServiceWithCompletion:(id)arg1;
- (void)startBackgroundURLSessionWithIdentifier:(id)arg1 backgroundDelegate:(id)arg2;
- (bool)needsConfiguration;
- (void)archiveAtPath:(id)arg1;
- (void)sharedServiceDidRegister;
- (id)_downloadCacheLocation;
- (id)_errorUserInfoWithErrorCode:(long long)arg1;
- (id)_errorUserInfoWithData:(id)arg1;
- (int)_resultForUnexpectedStatusCode:(long long)arg1;
- (void)passAtURL:(id)arg1 completion:(id)arg2;
- (void)backgroundDownloadPassAtURL:(id)arg1;
- (void)_handleRetryAfterTSMSyncWithRequest:(id)arg1 completionHandler:(id)arg2;
- (void)_handleRetryAfterRegisterWithRequest:(id)arg1 completionHandler:(id)arg2;
- (void)_performRequest:(id)arg1 retries:(unsigned long long)arg2 completionHandler:(id)arg3;
- (void)_removeBackgroundTaskIdentifier:(long long)arg1;
- (id)_passWithFileURL:(id)arg1;
- (void)_handleAuthenticationFailureWithCompletionHandler:(id)arg1;
- (void)_replaceBackgroundTaskWithIdentifier:(long long)arg1 withTask:(id)arg2;
- (void)_handlePassDownloadTask:(id)arg1 data:(id)arg2;
- (void)_handlePassListDownloadTask:(id)arg1 data:(id)arg2;
- (void)_handleRemoteAssetDownloadTask:(id)arg1 data:(id)arg2;
- (bool)_canBypassTrustExtendedValidation;
- (bool)_trustPassesExtendedValidation:(struct __SecTrust { }*)arg1;
- (void)setBrokerURL:(id)arg1;
- (id)_paymentDevice;
- (void)_passWithData:(id)arg1 response:(id)arg2 error:(id)arg3 completion:(id)arg4;
- (id)backgroundDelegate;
- (id)_movePassToDownloadCache:(id)arg1;
- (void)backgroundDownloadRemotePassAssets:(id)arg1 screenScale:(double)arg2 suffix:(id)arg3;
- (void)_setBackgroundTask:(id)arg1 forTaskIdentifier:(long long)arg2;
- (id)_downloadPassesWithURLs:(id)arg1;
- (void)passWithPassTypeIdentifier:(id)arg1 serialNumber:(id)arg2 completion:(id)arg3;
- (id)_fakeVerificationChannelsWithRealChannels:(id)arg1;
- (void)_deviceProvisioningDataWithCompletion:(id)arg1;
- (void)_downloadPassAtURL:(id)arg1 completion:(id)arg2;
- (void)_provisionCredential:(id)arg1 completion:(id)arg2;
- (void)_deviceRegistrationDataWithCompletion:(id)arg1;
- (unsigned long long)maxCards;
- (id)paymentServicesURL;
- (id)brokerURL;
- (void)registerDeviceWithConsistencyData:(id)arg1 completion:(id)arg2;
- (void)_deviceConfigurationDataWithCompletion:(id)arg1;
- (void)_performRequest:(id)arg1 completionHandler:(id)arg2;
- (id)_errorWithResult:(int)arg1 data:(id)arg2;
- (int)_resultForResponse:(id)arg1 error:(id)arg2 successHandler:(id)arg3;
- (void)_archive;
- (void)_cleanupPassDownloadCache;
- (id)configurationDate;
- (bool)messageServiceSupported;
- (bool)transactionServiceSupported;
- (long long)consistencyCheckBackoffLevel;
- (id)backgroundTasksByTaskIdentifier;
- (id)verificationRequestsByPassUniqueID;
- (id)lastUpdatedTag;
- (id)secureElementID;
- (void)setConfigurationDate:(id)arg1;
- (void)setMessageServiceSupported:(bool)arg1;
- (void)setTransactionServiceSupported:(bool)arg1;
- (void)setConsistencyCheckBackoffLevel:(long long)arg1;
- (void)setBackgroundTasksByTaskIdentifier:(id)arg1;
- (void)setVerificationRequestsByPassUniqueID:(id)arg1;
- (void)setLastUpdatedTag:(id)arg1;
- (void)setCertificates:(id)arg1;
- (void)setRegistrationDate:(id)arg1;
- (void)setSecureElementID:(id)arg1;
- (void)setPaymentServicesURL:(id)arg1;
- (void)setSharedService:(bool)arg1;
- (void)eligibilityForPaymentCredential:(id)arg1 completion:(id)arg2;
- (void)remotePaymentCredentialsWithCompletion:(id)arg1;
- (void)registerDeviceWithCompletion:(id)arg1;
- (bool)needsRegistration;
- (bool)devSigned;
- (void)setDevSigned:(bool)arg1;
- (void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forPass:(id)arg3 completion:(id)arg4;
- (void)rewrapInAppPayment:(id)arg1 merchantIdentifier:(id)arg2 applicationData:(id)arg3 pass:(id)arg4 completion:(id)arg5;
- (void)inAppPaymentNonceForPass:(id)arg1 completion:(id)arg2;
- (int)paymentSetupSupportedInRegion;
- (void)provisionCredential:(id)arg1 completion:(id)arg2;
- (void)requestVerificationCodeForPass:(id)arg1 usingChannel:(id)arg2 completion:(id)arg3;
- (void)verificationChannelsForPass:(id)arg1 completion:(id)arg2;
- (id)sessionConfiguration;
- (id)pushToken;
- (id)_accountStore;
- (void)setPushToken:(id)arg1;
- (void)setDeviceID:(id)arg1;
- (id)deviceID;
- (id)account;
- (id)registrationDate;
- (bool)sharedService;
- (id)initWithDelegate:(id)arg1;
- (id)init;
- (void)setDelegate:(id)arg1;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(id)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(id)arg5;
- (id)delegate;
- (id)certificates;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;

@end
