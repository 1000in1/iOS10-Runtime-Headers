/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
 */

@class UIColor, FBWindowContextHostManager, NSString;

@interface FBWindowContextHostWrapperView : UIView <FBWindowContextAppearance> {
    FBWindowContextHostManager *_manager;
    unsigned long long _appearanceStyle;
    UIColor *_backgroundColorWhileNotHosting;
    UIColor *_backgroundColorWhileHosting;
}

@property(readonly) FBWindowContextHostManager * manager;
@property unsigned long long appearanceStyle;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;
@property(retain) UIColor * backgroundColorWhileHosting;
@property(retain) UIColor * backgroundColorWhileNotHosting;
@property(getter=isContextHosted,readonly) bool contextHosted;
@property(readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } referenceFrame;
@property(readonly) double level;


- (void)clearManager;
- (void)updateBackgroundColor;
- (id)initWithHostManager:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })referenceFrame;
- (bool)isContextHosted;
- (void)setAppearanceStyle:(unsigned long long)arg1;
- (unsigned long long)appearanceStyle;
- (void)setBackgroundColorWhileNotHosting:(id)arg1;
- (id)backgroundColorWhileNotHosting;
- (void)setBackgroundColorWhileHosting:(id)arg1;
- (id)backgroundColorWhileHosting;
- (id)_stringForAppearanceStyle;
- (void)_hostingStatusChanged;
- (id)_backgroundColorWhileNotHosting;
- (id)_backgroundColorWhileHosting;
- (bool)_isReallyHosting;
- (void)_toggleBackgroundColorIfNecessary;
- (void)_setAppearanceStyle:(unsigned long long)arg1 force:(bool)arg2;
- (id)manager;
- (double)level;
- (id)window;
- (void)dealloc;
- (id)description;
- (void)updateFrame;
- (void)_didRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (id)_hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2 windowServerHitTestWindow:(id)arg3;

@end
