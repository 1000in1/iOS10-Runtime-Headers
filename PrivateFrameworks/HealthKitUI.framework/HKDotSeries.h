/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthKitUI.framework/HealthKitUI
 */

@interface HKDotSeries : HKGraphSeries <HKAxisLabelDataSource> {
    NSArray * _cachedAxisLabels;
    NSArray * _enumerationValueOrdering;
    UIImage * _selectedPointMarkerImage;
    UIImage * _unselectedPointMarkerImage;
    NSDictionary * _valueLabels;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSArray *enumerationValueOrdering;
@property (readonly) unsigned int hash;
@property (nonatomic, retain) UIImage *selectedPointMarkerImage;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIImage *unselectedPointMarkerImage;
@property (nonatomic, retain) NSDictionary *valueLabels;

- (void).cxx_destruct;
- (id)_generateAxisLabels;
- (void)_renderPointMarkersInContext:(struct CGContext { }*)arg1 blockCoordinates:(id)arg2 pointTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg3 pointMarkerImage:(id)arg4 axisRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg5;
- (id)coordinatesForBlock:(id)arg1 blockPath:(struct { int x1; int x2; })arg2 xAxis:(id)arg3 yAxis:(id)arg4;
- (void)drawSeriesWithBlockCoordinates:(id)arg1 axisRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 zoomLevelConfiguration:(id)arg3 pointTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg4 renderContext:(struct CGContext { }*)arg5;
- (id)enumerationValueOrdering;
- (id)labelsForChartRange:(struct HKRange { float x1; float x2; })arg1 zoomScale:(float)arg2;
- (struct CGPoint { float x1; float x2; })renderPositionForLabel:(id)arg1 rect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 zoomScale:(float)arg3 contentOffset:(struct CGPoint { float x1; float x2; })arg4 constantOffset:(float)arg5 isHorizontal:(BOOL)arg6;
- (id)selectedPointMarkerImage;
- (void)setEnumerationValueOrdering:(id)arg1;
- (void)setSelectedPointMarkerImage:(id)arg1;
- (void)setUnselectedPointMarkerImage:(id)arg1;
- (void)setValueLabels:(id)arg1;
- (void)setYAxis:(id)arg1;
- (id)unselectedPointMarkerImage;
- (id)valueLabels;

@end
