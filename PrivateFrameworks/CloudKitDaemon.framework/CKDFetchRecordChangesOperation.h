/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class CKServerChangeToken, NSArray, NSData, CKRecordZoneID;

@interface CKDFetchRecordChangesOperation : CKDDatabaseOperation  {
    bool_shouldFetchAssetContents;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _recordChangedBlock;

    CKServerChangeToken *_resultServerChangeToken;
    NSData *_resultClientChangeToken;
    long long _status;
    CKRecordZoneID *_recordZoneID;
    CKServerChangeToken *_previousServerChangeToken;
    CKServerChangeToken *_clientChangeToken;
    NSArray *_desiredKeys;
    unsigned long long _resultsLimit;
    NSData *_resultClientChangeTokenData;
}

@property(copy) id recordChangedBlock;
@property(retain) CKServerChangeToken * resultServerChangeToken;
@property(readonly) NSData * resultClientChangeToken;
@property long long status;
@property(retain) CKRecordZoneID * recordZoneID;
@property(retain) CKServerChangeToken * previousServerChangeToken;
@property(retain) CKServerChangeToken * clientChangeToken;
@property(retain) NSArray * desiredKeys;
@property bool shouldFetchAssetContents;
@property unsigned long long resultsLimit;
@property(retain) NSData * resultClientChangeTokenData;


- (id)resultClientChangeToken;
- (void)_handleFetchChangesRequestFinished:(id)arg1;
- (id)clientChangeToken;
- (void)setClientChangeToken:(id)arg1;
- (void)fillOutOperationResult:(id)arg1;
- (Class)operationResultClass;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;
- (void)setRecordChangedBlock:(id)arg1;
- (id)resultClientChangeTokenData;
- (void)setResultClientChangeTokenData:(id)arg1;
- (id)recordChangedBlock;
- (void)setShouldFetchAssetContents:(bool)arg1;
- (bool)shouldFetchAssetContents;
- (id)recordZoneID;
- (id)resultServerChangeToken;
- (void)setResultServerChangeToken:(id)arg1;
- (void)setPreviousServerChangeToken:(id)arg1;
- (id)previousServerChangeToken;
- (id)desiredKeys;
- (void)setRecordZoneID:(id)arg1;
- (void)setDesiredKeys:(id)arg1;
- (void)setResultsLimit:(unsigned long long)arg1;
- (unsigned long long)resultsLimit;
- (void)setStatus:(long long)arg1;
- (long long)status;
- (void)main;
- (void)finishWithError:(id)arg1;
- (void).cxx_destruct;

@end
