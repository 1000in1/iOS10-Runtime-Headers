/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/DAAPKit.framework/DAAPKit
 */

@class NSMutableArray, DKDAAPElement;

@interface DKDAAPElement : NSObject  {
    NSMutableArray *_children;
    struct unordered_map<unsigned int, DKDAAPElement *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, DKDAAPElement *> > > { 
        struct __hash_table<std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, DKDAAPElement *> > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, void *> *> > { 
                            unsigned long long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, std::__1::hash<unsigned int>, true> > { 
                unsigned long long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DKDAAPElement *>, std::__1::equal_to<unsigned int>, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    } _childMap;
    char *_dataBuffer;
    long long _intValue;
    bool_isContainer;
    unsigned int _code;
    unsigned int _length;
    DKDAAPElement *_parent;
}

@property DKDAAPElement * parent;
@property unsigned int code;
@property(readonly) char * bytes;
@property(readonly) unsigned int length;
@property bool isContainer;


- (unsigned int)numChildren;
- (id)childAtIndex:(unsigned int)arg1;
- (id)childWithCode:(unsigned int)arg1;
- (id)getDataValue;
- (long long)getIntValue;
- (void)setBytes:(char *)arg1 ofLength:(unsigned int)arg2;
- (id)initWithCode:(unsigned int)arg1;
- (void)setParent:(id)arg1;
- (void)setCode:(unsigned int)arg1;
- (id)getStringValue;
- (unsigned int)length;
- (unsigned int)code;
- (char *)bytes;
- (void)dealloc;
- (void).cxx_destruct;
- (id).cxx_construct;
- (void)addChild:(id)arg1;
- (id)parent;
- (void)setIsContainer:(bool)arg1;
- (bool)isContainer;

@end
