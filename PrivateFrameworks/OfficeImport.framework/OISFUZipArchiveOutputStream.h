/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

@class OISFUZipFreeSpaceEntry, NSData, NSString, OISFUCryptoKey, OISFUMoveableFileOutputStream, NSMutableArray, <SFUOutputStream>, OISFUZipOutputEntry;

@interface OISFUZipArchiveOutputStream : NSObject <SFUSimpleOutputStream> {
    OISFUMoveableFileOutputStream *mOutputStream;
    OISFUCryptoKey *mCryptoKey;
    NSData *mPassphraseHint;
    NSData *mEncryptedDocumentUuid;
    NSMutableArray *mEntries;
    OISFUZipOutputEntry *mCurrentEntry;
    OISFUZipOutputEntry *mLastEntryInFile;
    <SFUOutputStream> *mEntryOutputStream;
    char *mBuffer;
    NSMutableArray *mFreeList;
    OISFUZipFreeSpaceEntry *mCurrentFreeSpace;
    unsigned long long mFreeBytes;
}

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;

+ (unsigned long long)approximateBytesForEntryHeaderWithName:(id)arg1;

- (void)writeZip64EndOfCentralDirectoryLocatorWithOffset:(long long)arg1;
- (void)writeZip64EndOfCentralDirectoryWithOffset:(long long)arg1;
- (void)coalesceAndTruncateFreeSpace;
- (unsigned long long)freeBytes;
- (id)entriesAtPath:(id)arg1;
- (void)setEncryptedDocumentUuid:(id)arg1;
- (void)removeEntryWithName:(id)arg1;
- (bool)canRemoveEntryWithName:(id)arg1;
- (void)setCrc32ForCurrentEntry:(unsigned int)arg1;
- (id)beginUncompressedUnknownSizeEntryWithName:(id)arg1;
- (void)writeEndOfCentralDirectoryWithOffset:(long long)arg1;
- (void)writeCentralFileHeaderUsingEntry:(id)arg1 isFirstEntry:(bool)arg2;
- (void)beginUnknownSizeEntryWithName:(id)arg1 isCompressed:(bool)arg2;
- (void)beginEntryWithName:(id)arg1 isCompressed:(bool)arg2 uncompressedSize:(unsigned long long)arg3;
- (unsigned long long)writeLocalFileHeaderForEntry:(id)arg1;
- (void)finishEntry;
- (id)initWithOutputStream:(id)arg1 cryptoKey:(id)arg2 passphraseHint:(id)arg3;
- (id)initWithPath:(id)arg1 cryptoKey:(id)arg2 passphraseHint:(id)arg3;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (unsigned int)crc32ForEntry:(id)arg1;
- (void)moveToPath:(id)arg1;
- (id)entryNames;
- (void)flush;
- (void)close;
- (void)dealloc;
- (void)reset;
- (id)initWithPath:(id)arg1;

@end
