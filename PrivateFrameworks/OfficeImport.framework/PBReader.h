/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@interface PBReader : OCBReader  {
    struct PptObjectFactory { int (**x1)(); struct PptEshObjectFactory {} *x2; } *mPptObjectFactory;
    const void *mBuffer;
}

@property(readonly) struct PptBinaryReader { int (**x1)(); int (**x2)(); struct EshObjectFactory {} *x3; int (**x4)(); struct __sFILE {} *x5; struct SsrwOORootStorage { struct _Storage {} *x_6_1_1; unsigned short x_6_1_2[36]; struct _RootStorage {} *x_6_1_3; } x6; struct SsrwOOStorage {} *x7; struct SsrwOOStorage {} *x8; struct SsrwOOStream {} *x9; struct SsrwOOStream {} *x10; int x11; boolx12; struct PptEshReader {} *x13; struct PptEshReader {} *x14; struct PptParserVisitor {} *x15; struct PptPersistDir {} *x16; struct EshHeader {} *x17; struct EshObject {} *x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; /* Warning: unhandled struct encoding: '{ChMap<unsigned int' */ struct x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; long x53; int x54; BOOL x55; void*x56; void*x57; int x58; out in short x59; void*x60; void*x61; BOOL x62; out double x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; unsigned char x71; out in void*x72; void*x73; in void*x74; short x75; void*x76; void*x77; void*x78; void x79; void*x80; long x81; out void*x82; void*x83; const void*x84; void*x85; long x86; void*x87; void*x88; float x89; out const void*x90; short x91; void*x92; int x93; void*x94; void*x95; out in void*x96; unsigned short x97; int x98; void*x99; void*x100; long x101; void*x102; void*x103; out const void*x104; void*x105; long x106; void*x107; void*x108; float x109; out const void*x110; void*x111; void*x112; void*x113; void x114; void*x115; long x116; out void*x117; void*x118; const void*x119; unsigned short x120; void*x121; void*x122; short x123; void*x124; int x125; void*x126; void*x127; out in void*x128; unsigned short x129; int x130; void*x131; void*x132; long x133; void*x134; void*x135; out const void*x136; void*x137; void*x138; void*x139; short x140; double x141; void*x142; void*x143; unsigned short x144; void*x145; short x146; void*x147; void*x148; void*x149; void*x150; unsigned long x151; int x152; unsigned int x153/* : ? */; const void*x154; const void*x155; void*x156; void*x157; const int x158; void x159; void*x160; void*x161; void*x162; void*x163; const void*x164; void*x165; void*x166; void*x167; out const void*x168; short x169; void*x170; void*x171; void*x172; in void*x173; const void*x174; void*x175; int x176; out in void*x177; long x178; unsigned short x179; void*x180; out const void*x181; void*x182; void*x183; void*x184; float x185; const void*x186; void*x187; void*x188; void*x189; out const void*x190; void*x191; out const void*x192; void*x193; void*x194; void*x195; short x196; double x197; void*x198; void*x199; unsigned short x200; void*x201; void*x202; void*x203; void*x204; void*x205; long x206; int x207; BOOL x208; void*x209; void*x210; int x211; out in short x212; void*x213; void*x214; BOOL x215; out double x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; unsigned char x224; out in void*x225; void*x226; in void*x227; short x228; void*x229; void*x230; void*x231; void x232; void*x233; long x234; out void*x235; void*x236; const void*x237; void*x238; long x239; void*x240; void*x241; float x242; out const void*x243; short x244; void*x245; int x246; void*x247; void*x248; out in void*x249; unsigned short x250; int x251; void*x252; void*x253; long x254; void*x255; void*x256; out const void*x257; void*x258; long x259; void*x260; void*x261; float x262; out const void*x263; void*x264; void*x265; void*x266; void x267; void*x268; long x269; out void*x270; void*x271; const void*x272; unsigned short x273; void*x274; void*x275; short x276; void*x277; int x278; void*x279; void*x280; out in void*x281; unsigned short x282; int x283; void*x284; void*x285; long x286; void*x287; void*x288; out const void*x289; void*x290; void*x291; void*x292; short x293; double x294; void*x295; void*x296; unsigned short x297; void*x298; short x299; void*x300; void*x301; void*x302; void*x303; unsigned long x304; int x305; unsigned int x306/* : ? */; const void*x307; const void*x308; void*x309; void*x310; const int x311; void x312; void*x313; void*x314; void*x315; void*x316; const void*x317; void*x318; void*x319; void*x320; out const void*x321; short x322; void*x323; void*x324; void*x325; in void*x326; const void*x327; void*x328; int x329; out in void*x330; long x331; unsigned short x332; void*x333; out const void*x334; void*x335; void*x336; void*x337; float x338; const void*x339; void*x340; void*x341; void*x342; out const void*x343; void*x344; void*x345; void*x346; in void*x347; const void*x348; void*x349; int x350; out in void*x351; long x352; unsigned short x353; void*x354; out const void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; unsigned short x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; short x511; void*x512; void*x513; void*x514; out void*x515; const void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; int x590; const void*x591; long x592; void*x593; void*x594; unsigned char x595; out in void*x596; const out long x597; long x598; void*x599; const void*x600; short x601; void*x602; in BOOL x603; void*x604; void*x605; const void*x606; void*x607; void*x608; void*x609; out const void*x610; void*x611; int x612; const void*x613; long x614; void*x615; void*x616; unsigned char x617; out in void*x618; const out long x619; long x620; void*x621; const unsigned short x622; void*x623; in BOOL x624; void*x625; void*x626; void*x627; void*x628; unsigned short x629; unsigned char x630; void*x631; void*x632; in in void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; unsigned short x660; void*x661; short x662; void*x663; void*x664; void*x665; void*x666; unsigned long x667; int x668; unsigned int x669/* : ? */; const void*x670; const void*x671; void*x672; void*x673; const int x674; void x675; void*x676; void*x677; void*x678; void*x679; const void*x680; void*x681; void*x682; void*x683; out const void*x684; short x685; void*x686; void*x687; void*x688; unsigned short x689; unsigned char x690; void*x691; void*x692; in in void*x693; long x694; void*x695; float x696; const void*x697; void*x698; void*x699; void*x700; out const void*x701; void*x702; void*x703; void*x704; unsigned short x705; unsigned char x706; void*x707; void*x708; in in void*x709; long x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; Class x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; long x765; void*x766; int x767; void*x768; BOOL x769; void*x770; void*x771; void*x772; void*x773; void*x774; int x775; void*x776; out void*x777; in void*x778; short x779; void*x780; void*x781; void*x782; void*x783; void*x784; BOOL x785; void*x786; out void*x787; double x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; unsigned char x804; void*x805; out void*x806; in void*x807; void*x808; void*x809; void*x810; void*x811; in void*x812; void*x813; void*x814; short x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void x823; void*x824; void*x825; void*x826; long x827; void*x828; out void*x829; void*x830; void*x831; void*x832; void*x833; const void*x834; void*x835; void*x836; void*x837; void*x838; long x839; void*x840; void*x841; void*x842; void*x843; void*x844; float x845; void*x846; out void*x847; const void*x848; void*x849; void*x850; short x851; void*x852; void*x853; void*x854; int x855; void*x856; void*x857; void*x858; void*x859; void*x860; out void*x861; in void*x862; void*x863; void*x864; unsigned short x865; void*x866; int x867; void*x868; void*x869; void*x870; void*x871; void*x872; long x873; void*x874; void*x875; void*x876; void*x877; void*x878; out void*x879; const void*x880; void*x881; void*x882; void*x883; void*x884; long x885; void*x886; void*x887; void*x888; void*x889; void*x890; float x891; void*x892; out void*x893; const void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; void x903; void*x904; void*x905; void*x906; long x907; void*x908; out void*x909; void*x910; void*x911; void*x912; void*x913; const void*x914; void*x915; void*x916; unsigned short x917; void*x918; void*x919; void*x920; void*x921; void*x922; short x923; void*x924; void*x925; void*x926; int x927; void*x928; void*x929; void*x930; void*x931; void*x932; out void*x933; in void*x934; void*x935; void*x936; unsigned short x937; void*x938; int x939; void*x940; void*x941; void*x942; void*x943; void*x944; long x945; void*x946; void*x947; void*x948; void*x949; void*x950; out void*x951; const void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; short x961; void*x962; double x963; void*x964; void*x965; void*x966; void*x967; void*x968; unsigned short x969; void*x970; void*x971; void*x972; short x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; void*x982; unsigned long x983; void*x984; int x985; void*x986; unsigned int x987/* : ? */; void*x988; const void*x989; void*x990; void*x991; const void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; void*x998; const void*x999; int x1000; void*x1001; void x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; const void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; out void*x1021; const void*x1022; void*x1023; void*x1024; short x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; in void*x1033; void*x1034; void*x1035; const void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; int x1041; void*x1042; out void*x1043; in void*x1044; void*x1045; void*x1046; long x1047; void*x1048; unsigned short x1049; void*x1050; void*x1051; void*x1052; out void*x1053; const void*x1054; void*x1055; void*x1056; void*x1057; void*x1058; void*x1059; void*x1060; void*x1061; void*x1062; float x1063; void*x1064; const void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; out void*x1074; const void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; bycopy unsigned int x1092/* : ? */; void*x1093; void*x1094; BOOL x1095; void*x1096; void*x1097; void*x1098; BOOL x1099; void*x1100; out const void*x1101; void*x1102; int (**x1103)(); struct PptEshObjectFactory {} *x1104; }* pptReader; /* unknown property attribute:  EscherObjectEnums>}III}B} */


- (struct PptBinaryReader { int (**x1)(); int (**x2)(); struct EshObjectFactory {} *x3; int (**x4)(); struct __sFILE {} *x5; struct SsrwOORootStorage { struct _Storage {} *x_6_1_1; unsigned short x_6_1_2[36]; struct _RootStorage {} *x_6_1_3; } x6; struct SsrwOOStorage {} *x7; struct SsrwOOStorage {} *x8; struct SsrwOOStream {} *x9; struct SsrwOOStream {} *x10; int x11; boolx12; struct PptEshReader {} *x13; struct PptEshReader {} *x14; struct PptParserVisitor {} *x15; struct PptPersistDir {} *x16; struct EshHeader {} *x17; struct EshObject {} *x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; struct ChMap<unsigned int, PptBinaryReader::SKIP_CONDITIONS, CsLess<unsigned int> > { struct map<unsigned int, PptBinaryReader::SKIP_CONDITIONS, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PptBinaryReader::SKIP_CONDITIONS> > > { struct __tree<std::__1::pair<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, std::__1::__map_value_compare<unsigned int, PptBinaryReader::SKIP_CONDITIONS, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, PptBinaryReader::SKIP_CONDITIONS> > > { struct __tree_node<std::__1::pair<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, PptBinaryReader::SKIP_CONDITIONS, CsLess<unsigned int>, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_25_1_1; } x25; struct PptObjectFactory {} *x26; struct EshMark {} *x27; int x28; struct ChVector<ChPair<unsigned int, EscherObjectEnums> > { struct ChPair<unsigned int, EscherObjectEnums> {} *x_29_1_1; struct ChPair<unsigned int, EscherObjectEnums> {} *x_29_1_2; unsigned int x_29_1_3; unsigned int x_29_1_4; unsigned int x_29_1_5; } x29; boolx30; }*)pptReader;
- (struct OCCBinaryStreamer { int (**x1)(); struct OCCCryptoKey {} *x2; char *x3; }*)allocBinaryStreamerWithCryptoKey:(struct OCCCryptoKey { }*)arg1 baseOutputFilenameInUTF8:(const char *)arg2;
- (struct OCCEncryptionInfoReader { int (**x1)(); }*)encryptionInfoReader;
- (id)initWithCancelDelegate:(id)arg1 tracing:(id)arg2;
- (id)read;
- (void)dealloc;
- (BOOL)start;

@end
