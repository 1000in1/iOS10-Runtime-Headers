/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@class NSData, NSMutableArray;

@interface GEODirectionsFeedback : PBCodable <NSCopying> {
    struct { double x1; unsigned int x2; boolx3; struct { unsigned int x_4_1_1 : 1; unsigned int x_4_1_2 : 1; unsigned int x_4_1_3 : 1; } x4; } *_stepFeedbacks;
    unsigned long long _stepFeedbacksCount;
    unsigned long long _stepFeedbacksSpace;
    NSData *_directionResponseID;
    NSMutableArray *_traversedRouteIDs;
}

@property(readonly) bool hasDirectionResponseID;
@property(retain) NSData * directionResponseID;
@property(retain) NSMutableArray * traversedRouteIDs;
@property(readonly) unsigned long long stepFeedbacksCount;
@property(readonly) struct { double x1; unsigned int x2; boolx3; struct { unsigned int x_4_1_1 : 1; unsigned int x_4_1_2 : 1; unsigned int x_4_1_3 : 1; } x4; }* stepFeedbacks;


- (id)traversedRouteIDs;
- (void)setStepFeedbacks:(struct { double x1; unsigned int x2; boolx3; struct { unsigned int x_4_1_1 : 1; unsigned int x_4_1_2 : 1; unsigned int x_4_1_3 : 1; } x4; }*)arg1 count:(unsigned long long)arg2;
- (struct { double x1; unsigned int x2; boolx3; struct { unsigned int x_4_1_1 : 1; unsigned int x_4_1_2 : 1; unsigned int x_4_1_3 : 1; } x4; }*)stepFeedbacks;
- (struct { double x1; unsigned int x2; boolx3; struct { unsigned int x_4_1_1 : 1; unsigned int x_4_1_2 : 1; unsigned int x_4_1_3 : 1; } x4; })stepFeedbackAtIndex:(unsigned long long)arg1;
- (unsigned long long)stepFeedbacksCount;
- (id)traversedRouteIDsAtIndex:(unsigned long long)arg1;
- (void)clearTraversedRouteIDs;
- (unsigned long long)traversedRouteIDsCount;
- (void)clearStepFeedbacks;
- (void)setTraversedRouteIDs:(id)arg1;
- (void)addStepFeedback:(struct { double x1; unsigned int x2; boolx3; struct { unsigned int x_4_1_1 : 1; unsigned int x_4_1_2 : 1; unsigned int x_4_1_3 : 1; } x4; })arg1;
- (void)addTraversedRouteIDs:(id)arg1;
- (id)directionResponseID;
- (bool)hasDirectionResponseID;
- (void)setDirectionResponseID:(id)arg1;
- (void)copyTo:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)writeTo:(id)arg1;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dictionaryRepresentation;

@end
