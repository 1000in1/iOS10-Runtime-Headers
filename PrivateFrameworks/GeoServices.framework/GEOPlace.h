/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@class GEORating, GEOBusiness, GEOLatLng, NSMutableArray, GEOMapRegion, NSString, GEOAddress;

@interface GEOPlace : PBCodable  {
    double _area;
    long long _geoId;
    long long _uID;
    GEOAddress *_address;
    int _addressGeocodeAccuracy;
    NSMutableArray *_business;
    GEOLatLng *_center;
    NSMutableArray *_entryPoints;
    int _localSearchProviderID;
    GEOMapRegion *_mapRegion;
    NSString *_name;
    GEOAddress *_phoneticAddress;
    NSString *_phoneticName;
    NSString *_spokenAddress;
    NSString *_spokenName;
    int _type;
    int _version;
    BOOL _isDisputed;
    struct { 
        unsigned int area : 1; 
        unsigned int geoId : 1; 
        unsigned int uID : 1; 
        unsigned int addressGeocodeAccuracy : 1; 
        unsigned int localSearchProviderID : 1; 
        unsigned int type : 1; 
        unsigned int version : 1; 
        unsigned int isDisputed : 1; 
    } _has;
}

@property(readonly) NSString * yelpID;
@property(readonly) GEOBusiness * firstBusiness;
@property(readonly) GEORating * firstRating;
@property BOOL hasUID;
@property long long uID;
@property BOOL hasVersion;
@property int version;
@property BOOL hasType;
@property int type;
@property(readonly) BOOL hasName;
@property(retain) NSString * name;
@property(readonly) BOOL hasMapRegion;
@property(retain) GEOMapRegion * mapRegion;
@property(readonly) BOOL hasAddress;
@property(retain) GEOAddress * address;
@property(readonly) BOOL hasPhoneticName;
@property(retain) NSString * phoneticName;
@property(readonly) BOOL hasPhoneticAddress;
@property(retain) GEOAddress * phoneticAddress;
@property(readonly) BOOL hasCenter;
@property(retain) GEOLatLng * center;
@property(retain) NSMutableArray * business;
@property BOOL hasAddressGeocodeAccuracy;
@property int addressGeocodeAccuracy;
@property(retain) NSMutableArray * entryPoints;
@property BOOL hasIsDisputed;
@property BOOL isDisputed;
@property BOOL hasLocalSearchProviderID;
@property int localSearchProviderID;
@property(readonly) BOOL hasSpokenName;
@property(retain) NSString * spokenName;
@property(readonly) BOOL hasSpokenAddress;
@property(retain) NSString * spokenAddress;
@property BOOL hasArea;
@property double area;
@property BOOL hasGeoId;
@property long long geoId;


- (id)firstRating;
- (BOOL)readFrom:(id)arg1;
- (void)writeTo:(id)arg1;
- (void)setHasGeoId:(BOOL)arg1;
- (void)setHasArea:(BOOL)arg1;
- (void)setHasLocalSearchProviderID:(BOOL)arg1;
- (void)setHasIsDisputed:(BOOL)arg1;
- (void)setHasAddressGeocodeAccuracy:(BOOL)arg1;
- (void)setGeoId:(long long)arg1;
- (long long)geoId;
- (BOOL)hasGeoId;
- (void)setArea:(double)arg1;
- (BOOL)hasArea;
- (id)spokenAddress;
- (BOOL)hasSpokenAddress;
- (id)spokenName;
- (BOOL)hasSpokenName;
- (void)setLocalSearchProviderID:(int)arg1;
- (int)localSearchProviderID;
- (BOOL)hasLocalSearchProviderID;
- (void)setIsDisputed:(BOOL)arg1;
- (BOOL)isDisputed;
- (BOOL)hasIsDisputed;
- (id)entryPointAtIndex:(unsigned int)arg1;
- (void)clearEntryPoints;
- (void)setAddressGeocodeAccuracy:(int)arg1;
- (void)clearBusiness;
- (unsigned int)businessCount;
- (id)phoneticAddress;
- (BOOL)hasPhoneticAddress;
- (BOOL)hasAddress;
- (void)addEntryPoint:(id)arg1;
- (void)addBusiness:(id)arg1;
- (void)setSpokenAddress:(id)arg1;
- (void)setSpokenName:(id)arg1;
- (void)setEntryPoints:(id)arg1;
- (void)setBusiness:(id)arg1;
- (void)setPhoneticAddress:(id)arg1;
- (void)setHasVersion:(BOOL)arg1;
- (void)setHasUID:(BOOL)arg1;
- (id)phoneticName;
- (BOOL)hasPhoneticName;
- (BOOL)hasVersion;
- (void)setUID:(long long)arg1;
- (BOOL)hasUID;
- (void)setPhoneticName:(id)arg1;
- (void)setHasType:(BOOL)arg1;
- (long long)uID;
- (void)setAddress:(id)arg1;
- (id)arrivalMapRegionForTransportType:(int)arg1;
- (id)arrivalMapRegion;
- (BOOL)hasType;
- (int)addressGeocodeAccuracy;
- (BOOL)hasAddressGeocodeAccuracy;
- (id)entryPoints;
- (unsigned int)entryPointsCount;
- (BOOL)hasCenter;
- (BOOL)hasName;
- (id)firstBusiness;
- (id)businessAtIndex:(unsigned int)arg1;
- (id)business;
- (id)addressDictionary;
- (double)radialDistance;
- (void)copyTo:(id)arg1;
- (id)mapRegion;
- (BOOL)hasMapRegion;
- (void)setMapRegion:(id)arg1;
- (double)area;
- (struct { double x1; double x2; })coordinate;
- (void)setType:(int)arg1;
- (id)center;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)name;
- (void)dealloc;
- (id)description;
- (void)setCenter:(id)arg1;
- (int)type;
- (void)setVersion:(int)arg1;
- (id)dictionaryRepresentation;
- (void)setName:(id)arg1;
- (int)version;
- (id)address;
- (id)clRegion;
- (id)clLocation;
- (id)initWithCLLocation:(id)arg1;
- (id)businessName;
- (BOOL)hasSingleBusiness;
- (id)yelpID;
- (unsigned long long)businessID;
- (id)initWithPlacemark:(id)arg1;

@end
