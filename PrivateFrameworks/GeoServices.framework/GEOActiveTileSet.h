/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@class NSString, NSMutableArray;

@interface GEOActiveTileSet : PBCodable <NSCopying> {
    struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } *_availableTiles;
    unsigned long long _availableTilesCount;
    unsigned long long _availableTilesSpace;
    NSString *_baseURL;
    NSString *_localizationURL;
    NSString *_multiTileURL;
    int _scale;
    NSMutableArray *_sentinelTiles;
    int _size;
    int _style;
    NSMutableArray *_supportedLanguages;
    unsigned int _timeToLiveSeconds;
    int _updateBehavior;
    unsigned int _version;
    bool_multiTileURLUsesStatusCodes;
    struct { 
        unsigned int timeToLiveSeconds : 1; 
        unsigned int updateBehavior : 1; 
        unsigned int multiTileURLUsesStatusCodes : 1; 
    } _has;
}

@property(readonly) bool hasBaseURL;
@property(retain) NSString * baseURL;
@property(readonly) bool hasMultiTileURL;
@property(retain) NSString * multiTileURL;
@property int style;
@property int scale;
@property int size;
@property unsigned int version;
@property bool hasTimeToLiveSeconds;
@property unsigned int timeToLiveSeconds;
@property(readonly) unsigned long long availableTilesCount;
@property(readonly) struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; }* availableTiles;
@property(retain) NSMutableArray * sentinelTiles;
@property(readonly) bool hasLocalizationURL;
@property(retain) NSString * localizationURL;
@property(retain) NSMutableArray * supportedLanguages;
@property bool hasMultiTileURLUsesStatusCodes;
@property bool multiTileURLUsesStatusCodes;
@property bool hasUpdateBehavior;
@property int updateBehavior;


- (unsigned int)largestZoomLevelLEQ:(unsigned int)arg1 inRect:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (unsigned int)minimumZoomLevelInRect:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)dataForGenericTileType:(int)arg1 tileGroupIdentifier:(unsigned int)arg2;
- (bool)isEquivalentTileSet:(id)arg1;
- (id)sentinelTileAtIndex:(unsigned long long)arg1;
- (void)clearSentinelTiles;
- (unsigned long long)sentinelTilesCount;
- (void)setSentinelTiles:(id)arg1;
- (void)addSentinelTile:(id)arg1;
- (id)sentinelTiles;
- (void)_resetBestLanguage;
- (id)_bestLanguageWithOverrideLocale:(id)arg1;
- (bool)isAvailableForTileKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (unsigned int)maximumZoomLevelInRect:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (unsigned int)timeToLiveSeconds;
- (bool)hasTimeToLiveSeconds;
- (void)setHasTimeToLiveSeconds:(bool)arg1;
- (void)setTimeToLiveSeconds:(unsigned int)arg1;
- (void)setAvailableTiles:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; }*)arg1 count:(unsigned long long)arg2;
- (struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; }*)availableTiles;
- (void)addAvailableTiles:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; })arg1;
- (struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; })availableTilesAtIndex:(unsigned long long)arg1;
- (unsigned long long)availableTilesCount;
- (void)clearAvailableTiles;
- (bool)multiTileURLUsesStatusCodes;
- (id)supportedLanguages;
- (id)localizationURL;
- (id)multiTileURL;
- (bool)hasUpdateBehavior;
- (void)setHasUpdateBehavior:(bool)arg1;
- (void)setUpdateBehavior:(int)arg1;
- (int)updateBehavior;
- (bool)hasMultiTileURLUsesStatusCodes;
- (void)setHasMultiTileURLUsesStatusCodes:(bool)arg1;
- (void)setMultiTileURLUsesStatusCodes:(bool)arg1;
- (bool)hasLocalizationURL;
- (bool)hasMultiTileURL;
- (bool)hasBaseURL;
- (id)supportedLanguageAtIndex:(unsigned long long)arg1;
- (void)clearSupportedLanguages;
- (unsigned long long)supportedLanguagesCount;
- (void)addSupportedLanguage:(id)arg1;
- (void)setSupportedLanguages:(id)arg1;
- (void)setLocalizationURL:(id)arg1;
- (void)setMultiTileURL:(id)arg1;
- (void)copyTo:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)writeTo:(id)arg1;
- (unsigned int)version;
- (void)setStyle:(int)arg1;
- (void)setBaseURL:(id)arg1;
- (void)setScale:(int)arg1;
- (int)style;
- (void)setSize:(int)arg1;
- (id)baseURL;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)size;
- (int)scale;
- (void)setVersion:(unsigned int)arg1;
- (id)dictionaryRepresentation;

@end
