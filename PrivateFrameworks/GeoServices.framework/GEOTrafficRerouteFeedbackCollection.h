/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@class NSData, NSMutableArray;

@interface GEOTrafficRerouteFeedbackCollection : PBCodable <NSCopying> {
    NSData *_directionResponseID;
    unsigned int _oldRouteHistoricTravelTime;
    NSData *_oldRouteID;
    NSMutableArray *_oldRouteIncidents;
    unsigned int _oldRouteTravelTime;
    unsigned int _reroutedRouteHistoricTravelTime;
    NSData *_reroutedRouteID;
    unsigned int _reroutedRouteTravelTime;
    bool_oldRouteBlocked;
    struct { 
        unsigned int oldRouteHistoricTravelTime : 1; 
        unsigned int oldRouteTravelTime : 1; 
        unsigned int reroutedRouteHistoricTravelTime : 1; 
        unsigned int reroutedRouteTravelTime : 1; 
        unsigned int oldRouteBlocked : 1; 
    } _has;
}

@property bool hasOldRouteTravelTime;
@property unsigned int oldRouteTravelTime;
@property bool hasReroutedRouteTravelTime;
@property unsigned int reroutedRouteTravelTime;
@property bool hasOldRouteHistoricTravelTime;
@property unsigned int oldRouteHistoricTravelTime;
@property bool hasReroutedRouteHistoricTravelTime;
@property unsigned int reroutedRouteHistoricTravelTime;
@property bool hasOldRouteBlocked;
@property bool oldRouteBlocked;
@property(retain) NSMutableArray * oldRouteIncidents;
@property(readonly) bool hasDirectionResponseID;
@property(retain) NSData * directionResponseID;
@property(readonly) bool hasOldRouteID;
@property(retain) NSData * oldRouteID;
@property(readonly) bool hasReroutedRouteID;
@property(retain) NSData * reroutedRouteID;


- (id)reroutedRouteID;
- (id)oldRouteID;
- (id)directionResponseID;
- (id)oldRouteIncidents;
- (bool)oldRouteBlocked;
- (unsigned int)reroutedRouteHistoricTravelTime;
- (unsigned int)oldRouteHistoricTravelTime;
- (unsigned int)reroutedRouteTravelTime;
- (unsigned int)oldRouteTravelTime;
- (bool)hasReroutedRouteID;
- (bool)hasOldRouteID;
- (bool)hasDirectionResponseID;
- (bool)hasOldRouteBlocked;
- (void)setHasOldRouteBlocked:(bool)arg1;
- (void)setOldRouteBlocked:(bool)arg1;
- (bool)hasReroutedRouteHistoricTravelTime;
- (void)setHasReroutedRouteHistoricTravelTime:(bool)arg1;
- (void)setReroutedRouteHistoricTravelTime:(unsigned int)arg1;
- (bool)hasOldRouteHistoricTravelTime;
- (void)setHasOldRouteHistoricTravelTime:(bool)arg1;
- (void)setOldRouteHistoricTravelTime:(unsigned int)arg1;
- (bool)hasReroutedRouteTravelTime;
- (void)setHasReroutedRouteTravelTime:(bool)arg1;
- (void)setReroutedRouteTravelTime:(unsigned int)arg1;
- (bool)hasOldRouteTravelTime;
- (void)setHasOldRouteTravelTime:(bool)arg1;
- (void)setOldRouteTravelTime:(unsigned int)arg1;
- (id)oldRouteIncidentsAtIndex:(unsigned long long)arg1;
- (void)clearOldRouteIncidents;
- (unsigned long long)oldRouteIncidentsCount;
- (void)addOldRouteIncidents:(id)arg1;
- (void)setReroutedRouteID:(id)arg1;
- (void)setOldRouteID:(id)arg1;
- (void)setDirectionResponseID:(id)arg1;
- (void)setOldRouteIncidents:(id)arg1;
- (void)copyTo:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)writeTo:(id)arg1;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dictionaryRepresentation;

@end
