/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@class GEOLatLng, GEOStructuredAddress, NSString;

@interface GEOPDPlaceRefinementParameters : PBCodable <NSCopying> {
    unsigned long long _muid;
    GEOStructuredAddress *_addressHint;
    GEOLatLng *_locationHint;
    NSString *_placeNameHint;
    int _resultProviderId;
    struct { 
        unsigned int muid : 1; 
        unsigned int resultProviderId : 1; 
    } _has;
}

@property bool hasResultProviderId;
@property int resultProviderId;
@property bool hasMuid;
@property unsigned long long muid;
@property(readonly) bool hasLocationHint;
@property(retain) GEOLatLng * locationHint;
@property(readonly) bool hasAddressHint;
@property(retain) GEOStructuredAddress * addressHint;
@property(readonly) bool hasPlaceNameHint;
@property(retain) NSString * placeNameHint;


- (id)initWithSearchURLQuery:(id)arg1 coordinate:(struct { double x1; double x2; })arg2 muid:(unsigned long long)arg3 resultProviderId:(int)arg4;
- (id)initWithCoordinateHint:(struct { double x1; double x2; })arg1 addressHint:(id)arg2 placeNameHint:(id)arg3;
- (id)initWithMapItemToRefine:(id)arg1;
- (id)initWithMuid:(unsigned long long)arg1 addressHint:(id)arg2 locationHint:(struct { double x1; double x2; })arg3 placeNameHint:(id)arg4 resultProviderId:(int)arg5;
- (id)placeNameHint;
- (id)addressHint;
- (id)locationHint;
- (bool)hasPlaceNameHint;
- (bool)hasAddressHint;
- (bool)hasLocationHint;
- (bool)hasMuid;
- (void)setHasMuid:(bool)arg1;
- (void)setMuid:(unsigned long long)arg1;
- (void)setPlaceNameHint:(id)arg1;
- (void)setAddressHint:(id)arg1;
- (void)setLocationHint:(id)arg1;
- (int)resultProviderId;
- (bool)hasResultProviderId;
- (void)setHasResultProviderId:(bool)arg1;
- (void)setResultProviderId:(int)arg1;
- (unsigned long long)muid;
- (void)copyTo:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)writeTo:(id)arg1;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dictionaryRepresentation;

@end
