/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOLogMessageCacheManager : NSObject {
    NSObject<OS_dispatch_queue> * _databaseQueue;
    void * _databaseQueueIdentityKey;
    void * _databaseQueueIdentityValue;
    struct sqlite3_stmt { } * _deleteExpiredLogMessagesStatement;
    struct sqlite3_stmt { } * _deleteSuccessfulLogMessagesStatement;
    struct sqlite3_stmt { } * _insertLogMessageCacheStatement;
    struct sqlite3 { } * _logMessageCacheDatabase;
    NSString * _logMessageCacheFilePath;
    int  _logMessageCacheIterator;
    struct sqlite3_stmt { } * _logMessageCountStatement;
    NSMutableArray * _retrivedLogMessageCacheIds;
    struct sqlite3_stmt { } * _selectLogMessageBatchStatement;
    struct sqlite3_stmt { } * _selectNextBatchIDStatement;
}

- (void)_cleanupLogMessageCacheDatabase;
- (void)_createTables;
- (void)_deleteAllExpiredLogMessages:(double)arg1;
- (void)_deleteExpiredLogMessageCacheDBFile:(double)arg1;
- (void)_executeSQL:(id)arg1;
- (int)_getNumberOfLogMessagesInCache;
- (id)_groupIDOfNextPendingLogMessage;
- (void)_openCreateLogMessageCacheDBFile;
- (void)_openLogMessageCacheDBFile;
- (id)_retrieveBatchOfLogMessagesLimitCount:(int)arg1 limitSize:(int)arg2;
- (void)closeLogMessageCache;
- (void)dealloc;
- (id)initWithLogMessageCacheFilePath:(id)arg1;
- (void)insertLogMessageIntoCache:(id)arg1;
- (BOOL)isLogMessageCacheEmpty;
- (void)openLogMessageCache;
- (void)purgeCurrentlyRetrievedLogMessagesFromCache;
- (void)purgeExpiredLogMessagesFromCache:(double)arg1;
- (void)resetLogMessageCacheIterator;
- (id)retrieveFirstBatchOfLogMessagesWithLimitCount:(int)arg1 limitSize:(int)arg2;
- (id)retrieveNextBatchOfLogMessagesWithLimitCount:(int)arg1 limitSize:(int)arg2;

@end
