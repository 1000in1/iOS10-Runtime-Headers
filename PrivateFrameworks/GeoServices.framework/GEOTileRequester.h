/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@class <GEOTileRequesterDelegate>, NSString, GEOResourceManifestConfiguration, GEOTileKeyList, NSThread, NSData, NSLocale, GEOTileKeyMap;

@interface GEOTileRequester : NSObject  {
    GEOResourceManifestConfiguration *_manifestConfiguration;
    NSLocale *_locale;
    GEOTileKeyList *_keyList;
    GEOTileKeyMap *_cachedEtags;
    GEOTileKeyMap *_cachedData;
    <GEOTileRequesterDelegate> *_delegate;
    id _context;
    NSThread *_thread;
    NSString *_bundleIdentifier;
    NSString *_bundleVersion;
    NSData *_auditToken;
    bool_requireWiFi;
}

@property(readonly) GEOTileKeyList * keyList;
@property(readonly) GEOTileKeyMap * cachedEtags;
@property(readonly) GEOTileKeyMap * cachedData;
@property(retain) <GEOTileRequesterDelegate> * delegate;
@property(retain) id context;
@property(retain) NSThread * thread;
@property(retain) NSString * bundleIdentifier;
@property(retain) NSString * bundleVersion;
@property(retain) NSData * auditToken;
@property bool requireWiFi;

+ (bool)skipNetworkForKeysWhenPreloading:(id)arg1;
+ (struct { unsigned int x1; double x2; }*)newExpiringTilesets;
+ (unsigned long long)expiringTilesetsCount;
+ (unsigned char)tileProviderIdentifier;

- (void)setThread:(id)arg1;
- (id)thread;
- (id)cachedEtags;
- (bool)requireWiFi;
- (id)cachedData;
- (void)setAuditToken:(id)arg1;
- (void)setRequireWiFi:(bool)arg1;
- (unsigned int)tileSetForKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (id)initWithKeyList:(id)arg1 manifestConfiguration:(id)arg2 locale:(id)arg3 cachedEtags:(id)arg4 cachedData:(id)arg5;
- (void)setBundleIdentifier:(id)arg1;
- (void)setBundleVersion:(id)arg1;
- (id)context;
- (void)setContext:(id)arg1;
- (id)bundleIdentifier;
- (id)bundleVersion;
- (id)keyList;
- (void)setDelegate:(id)arg1;
- (void)start;
- (id)delegate;
- (void)cancel;
- (void)dealloc;
- (id)auditToken;

@end
