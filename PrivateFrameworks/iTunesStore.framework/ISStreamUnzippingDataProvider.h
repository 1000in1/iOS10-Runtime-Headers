/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
 */

@class SZExtractor, NSString, NSArray, NSError;

@interface ISStreamUnzippingDataProvider : ISDataProvider  {
    unsigned long long _expectedUncompressedSize;
    SZExtractor *_extractor;
    BOOL _extractorComplete;
    NSString *_localFilePath;
    long long _streamedBytes;
    NSArray *_hashes;
    long long _numberOfBytesToHash;
    NSError *_unzipError;
    BOOL _shouldResumeFromLocalBytes;
}

@property(readonly) unsigned long long expectedUncompressedSize;
@property(retain) NSString * localFilePath;
@property BOOL shouldResumeFromLocalBytes;
@property(retain) NSArray * hashes;
@property long long numberOfBytesToHash;
@property(readonly) NSError * unzipError;
@property(readonly) SZExtractor * extractor;
@property(getter=isExtractorComplete) BOOL extractorComplete;
@property long long streamedBytes;

+ (BOOL)isHashMismatchError:(id)arg1;

- (id)extractor;
- (id)hashFailureHeaderStringForUnzipError;
- (id)initWithExpectedUncompressedSize:(unsigned long long)arg1;
- (BOOL)_openExtractor;
- (void)setExtractorComplete:(BOOL)arg1;
- (BOOL)isExtractorComplete;
- (id)unzipError;
- (void)_completeStream;
- (unsigned long long)expectedUncompressedSize;
- (void)_suspendStream;
- (void)setShouldResumeFromLocalBytes:(BOOL)arg1;
- (void)setNumberOfBytesToHash:(long long)arg1;
- (void)setLocalFilePath:(id)arg1;
- (void)setHashes:(id)arg1;
- (void)setStreamedBytes:(long long)arg1;
- (BOOL)shouldResumeFromLocalBytes;
- (long long)numberOfBytesToHash;
- (id)localFilePath;
- (id)hashes;
- (BOOL)canStreamContentLength:(long long)arg1 error:(id*)arg2;
- (void)streamDidFailWithError:(id)arg1;
- (void)resetStream;
- (BOOL)parseData:(id)arg1 returningError:(id*)arg2;
- (id)closeStream;
- (BOOL)isStreamComplete;
- (long long)streamedBytes;
- (void)setup;
- (void)streamCancelled;
- (BOOL)isStream;
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { }*)arg1;

@end
