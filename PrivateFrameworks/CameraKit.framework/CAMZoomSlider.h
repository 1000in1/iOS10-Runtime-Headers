/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/CameraKit.framework/CameraKit
 */

@class NSTimer, UIImageView, UIView, <CAMZoomSliderDelegate>;

@interface CAMZoomSlider : UISlider  {
    bool_minimumAutozooming;
    bool_maximumAutozooming;
    bool__autozooming;
    <CAMZoomSliderDelegate> *_delegate;
    NSTimer *__visibilityTimer;
    UIImageView *__thumbImageView;
    UIView *__minTrackMaskView;
    UIView *__maxTrackMaskView;
}

@property <CAMZoomSliderDelegate> * delegate;
@property(getter=isMinimumAutozooming) bool minimumAutozooming;
@property(getter=isMaximumAutozooming) bool maximumAutozooming;
@property(readonly) NSTimer * _visibilityTimer;
@property(getter=_isAutozooming,setter=_setAutozooming:) bool _autozooming;
@property(readonly) UIImageView * _thumbImageView;
@property(readonly) UIView * _minTrackMaskView;
@property(readonly) UIView * _maxTrackMaskView;


- (id)_thumbImageView;
- (void)_setAutozooming:(bool)arg1;
- (bool)_isAutozooming;
- (id)_visibilityTimer;
- (void)_postHideZoomSliderAnimation;
- (void)_hideZoomSlider:(id)arg1;
- (void)_endAutozooming;
- (void)_beginAutozooming;
- (void)_updateAutozooming;
- (bool)isMaximumAutozooming;
- (bool)_isMinimumOrMaximumAutozooming;
- (void)_setMaximumAutozooming:(bool)arg1;
- (void)_setMinimumAutozooming:(bool)arg1;
- (long long)locationOfTouch:(id)arg1;
- (void)_commonCAMZoomSliderInitialization;
- (id)_maxTrackMaskView;
- (id)_minTrackMaskView;
- (bool)visibilityTimerIsValid;
- (bool)isMinimumAutozooming;
- (void)makeInvisible;
- (void)makeVisible;
- (void)stopVisibilityTimer;
- (void)startVisibilityTimer;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void).cxx_destruct;
- (id)createThumbView;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })alignmentRectInsets;
- (void)layoutSubviews;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;

@end
