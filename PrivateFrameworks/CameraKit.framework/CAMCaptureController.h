/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/CameraKit.framework/CameraKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class BKSAccelerometer, NSDictionary, AVCaptureMovieFileOutput, AVCaptureDeviceInput, NSObject<OS_dispatch_source>, NSMutableArray, NSString, AVCaptureMetadataOutput, AVCaptureDevice, AVCaptureOutput, AVCaptureSession, NSTimer, NSArray, NSMutableDictionary, CAMAvalancheCaptureService, CAMDebugCaptureService, AVCaptureStillImageOutput, <PLCameraControllerDelegate>, NSObject<OS_dispatch_queue>, AVCaptureDeviceFormat, CAMEffectsRenderer, AVCaptureVideoDataOutput, AVCaptureVideoPreviewLayer;

@interface CAMCaptureController : NSObject <AVCaptureMetadataOutputObjectsDelegate, PLCameraEffectsRendererDelegate, BKSAccelerometerDelegate, AVCaptureFileOutputRecordingDelegate, AVCaptureVideoDataOutputSampleBufferDelegate> {
    AVCaptureSession *_avCaptureSession;
    AVCaptureDevice *_avCaptureDeviceFront;
    AVCaptureDevice *_avCaptureDeviceBack;
    AVCaptureDevice *_avCaptureDeviceAudio;
    AVCaptureDeviceInput *_avCaptureInputFront;
    AVCaptureDeviceInput *_avCaptureInputBack;
    AVCaptureDeviceInput *_avCaptureInputAudio;
    AVCaptureStillImageOutput *_avCaptureOutputPhoto;
    AVCaptureMovieFileOutput *_avCaptureOutputVideo;
    AVCaptureVideoDataOutput *_avCaptureOutputPanorama;
    AVCaptureVideoDataOutput *_avCaptureOutputEffectPreview;
    AVCaptureMetadataOutput *_avCaptureOutputMetadata;
    AVCaptureDeviceFormat *_mogulFormatBack;
    AVCaptureDeviceFormat *_mogulFormatFront;
    id _panoramaProcessor;
    id _panoramaImageQueue;
    struct CGSize { 
        double width; 
        double height; 
    } _panoramaPreviewSize;
    float _panoramaPreviewScale;
    NSObject<OS_dispatch_queue> *_avCaptureSessionDispatchQueue;
    NSObject<OS_dispatch_queue> *_avCaptureOutputMetadataQueue;
    AVCaptureDevice *_currentDevice;
    AVCaptureDeviceInput *_currentInput;
    AVCaptureOutput *_currentOutput;
    AVCaptureVideoPreviewLayer *_previewLayer;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _cleanAperture;
    bool_shouldBeStopped;
    long long _cameraMode;
    long long _cameraDevice;
    long long _flashMode;
    int _captureOrientation;
    bool_imageWriterQueueIsAvailable;
    unsigned long long _ioSurfaceCounter;
    bool_hdrCaptureIncludesEV0Image;
    int _hdrEV0PhotoCaptureCount;
    <PLCameraControllerDelegate> *_delegate;
    double _maximumCaptureDuration;
    int _videoCaptureQuality;
    NSString *_videoCapturePath;
    BKSAccelerometer *_accelerometer;
    struct CGImage { } *_lastVideoPreviewFrameImageRef;
    bool_isFocusingOnFace;
    long long _cameraOrientation;
    NSTimer *_idleTimerTimer;
    bool_delaySuspend;
    NSTimer *_delaySuspendTimer;
    double _maxVideoZoomFactorRear;
    double _maxVideoZoomFactorFront;
    unsigned long long _keepAliveCounter;
    NSTimer *_keepAliveTimer;
    NSTimer *_keepAliveFailsafeTimer;
    struct { 
        unsigned int supportsVideo : 1; 
        unsigned int supportsHDRRear : 1; 
        unsigned int supportsHDRFront : 1; 
        unsigned int supportsSuggestedHDRRear : 1; 
        unsigned int supportsSuggestedHDRFront : 1; 
        unsigned int supportsAvalancheAnalysisRear : 1; 
        unsigned int supportsAvalancheAnalysisFront : 1; 
        unsigned int supportsMogulRear : 1; 
        unsigned int supportsMogulFront : 1; 
        unsigned int supportsLiveEffects : 1; 
        unsigned int supportsPanorama : 1; 
        unsigned int supportsVideoStillCapture : 1; 
        unsigned int supportsPreviewDuringHDR : 1; 
        unsigned int supportsTimelapse : 1; 
        unsigned int hasFlash : 1; 
        unsigned int hasBackCamera : 1; 
        unsigned int hasFrontCamera : 1; 
        unsigned int deferStartVideoCapture : 1; 
        unsigned int inCall : 1; 
        unsigned int isCapturingPanorama : 1; 
        unsigned int isProcessingPanorama : 1; 
        unsigned int focusDisabled : 1; 
        unsigned int serverDied : 1; 
        unsigned int didGetDeviceUnavailableInBackground : 1; 
        unsigned int didSetLocationData : 1; 
        unsigned int isChangingMode : 1; 
        unsigned int flashWillFireAutomatically : 1; 
        unsigned int torchWillFireAutomatically : 1; 
        unsigned int isCameraApp : 1; 
        unsigned int didSendPreviewStartedCallbackToEmptyDelegate : 1; 
        unsigned int didGetPreviewStartedCallbackAfterResume : 1; 
        unsigned int logFocusInfo : 1; 
        unsigned int logPreviewInfo : 1; 
        unsigned int logCaptureInfo : 1; 
        unsigned int logFlashInfo : 1; 
        unsigned int logDebugInfo : 1; 
        unsigned int logPanoInfo : 1; 
        unsigned int enable720p60Recording : 1; 
        unsigned int isInternalInstall : 1; 
        unsigned int shouldTearDownPano : 1; 
        unsigned int convertSampleBufferToJPEG : 1; 
        unsigned int delegateDidStartSession : 1; 
        unsigned int delegateWillStartPreview : 1; 
        unsigned int delegatePreviewDidStart : 1; 
        unsigned int delegateSessionDidStart : 1; 
        unsigned int delegateDidStopSession : 1; 
        unsigned int delegateWillStopSession : 1; 
        unsigned int delegateSessionDidStop : 1; 
        unsigned int delegateSessionWasInterrupted : 1; 
        unsigned int delegateSessionInterruptionEnded : 1; 
        unsigned int delegateServerDied : 1; 
        unsigned int delegateCleanApertureDidChange : 1; 
        unsigned int delegateModeWillChange : 1; 
        unsigned int delegateModeDidChange : 1; 
        unsigned int delegateWillTakePhoto : 1; 
        unsigned int delegateDidTakePhoto : 1; 
        unsigned int delegateCapturedPhoto : 1; 
        unsigned int delegateDidChangeCaptureAbility : 1; 
        unsigned int delegateDidChangePanoramaConfiguration : 1; 
        unsigned int delegateDidUpdatePanoramaPreview : 1; 
        unsigned int delegateDidReceivePanoramaIssue : 1; 
        unsigned int delegateDidStartPanoramaCapture : 1; 
        unsigned int delegateWillStopPanoramaCapture : 1; 
        unsigned int delegatePanoramaWillStartProcessing : 1; 
        unsigned int delegatePanoramaDidStopProcessing : 1; 
        unsigned int delegateCapturedPanorama : 1; 
        unsigned int delegateVideoCaptureDidStart : 1; 
        unsigned int delegateDidStopVideoCapture : 1; 
        unsigned int delegateVideoCaptureDidStop : 1; 
        unsigned int delegateDidChangeFocusMode : 1; 
        unsigned int delegateDidChangeExposureMode : 1; 
        unsigned int delegateFocusDidStart : 1; 
        unsigned int delegateFocusDidEnd : 1; 
        unsigned int delegateExposureDidStart : 1; 
        unsigned int delegateExposureDidEnd : 1; 
        unsigned int delegateWillResetFocusExposure : 1; 
        unsigned int delegateDidChangeUserLockedFocus : 1; 
        unsigned int delegateDidChangeUserLockedExposure : 1; 
        unsigned int delegateDidChangeExposureTargetBias : 1; 
        unsigned int delegateFaceMetadataDidChange : 1; 
        unsigned int delegateVideoZoomFactorDidChange : 1; 
        unsigned int delegateFlashWillFireChanged : 1; 
        unsigned int delegateTorchActiveChanged : 1; 
        unsigned int delegateTorchAvailabilityChanged : 1; 
        unsigned int delegateHDRSuggestionChanged : 1; 
        unsigned int delegateDidStartVideoRequest : 1; 
        unsigned int delegateDidStopVideoRequest : 1; 
        unsigned int delegateDidFinishVideoRequest : 1; 
        unsigned int delegateDidStartCapturingPanoramaRequest : 1; 
        unsigned int delegateDidStopCapturingPanoramaRequest : 1; 
        unsigned int delegateDidStartProcessingPanoramaRequest : 1; 
        unsigned int delegateDidStopProcessingPanoramaRequest : 1; 
        unsigned int delegateDidFinishPanoramaRequest : 1; 
        unsigned int delegatePanoramaConfigurationChanged : 1; 
        unsigned int delegateDidOutputPanoramaParameters : 1; 
    } _cameraFlags;
    NSObject<OS_dispatch_queue> *_dispatchTimerQueue;
    NSObject<OS_dispatch_source> *_dispatchTimer;
    bool__previewPaused;
    bool__previewLayerEnabledForRenderer;
    bool__videoDataOutputEnabledForRenderer;
    bool_canCapturePhotoFromVideoModeWhenNotRecording;
    bool_capturingTimelapse;
    bool_resetFocusWhenSubjectAreaChanged;
    bool_resetExposureWhenSubjectAreaChanged;
    bool_userLockedFocus;
    bool_userLockedExposure;
    bool_HDRDetectionEnabled;
    bool_performingAvalancheCapture;
    bool_disableAllPreviewSuspensionDuringCapture;
    bool__atomicEffectsAvailable;
    bool__configuringCamera;
    bool__sessionReady;
    bool__atomicModeChangeWaitingForPreviewStarted;
    bool__atomicModeChangeWaitingForConfigureSession;
    bool__wasStillImageStabilzationOnBeforeTimedCapture;
    bool__ignoreSubjectAreaChanges;
    bool__lockFocusAfterFocusFinishes;
    bool__lockExposureAfterExposeFinishes;
    bool__locationAcquiredForTimelapseCapture;
    float __lockLensPositionTarget;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id postSessionSetupBlock;

    CAMEffectsRenderer *_effectsRenderer;
    NSArray *_supportedCameraModes;
    NSObject<OS_dispatch_queue> *__effectFilterIndexQueue;
    NSDictionary *__effectFilterIndices;
    NSObject<OS_dispatch_queue> *__captureIsolationQueue;
    NSObject<OS_dispatch_queue> *__effectRenderingQueue;
    NSMutableArray *__inflightStillImageCaptureRequests;
    NSMutableArray *__inflightVideoCaptureResponses;
    NSMutableArray *__deferredVideoCaptureRequests;
    NSMutableArray *__inflightPanoramaCaptureRequests;
    NSMutableArray *__processingPanoramaCaptureRequests;
    NSMutableArray *__currentFaceMetadata;
    NSMutableDictionary *__servicesByType;
    CAMAvalancheCaptureService *__avalancheCaptureService;
    CAMDebugCaptureService *__debugCaptureService;
    long long __deviceLockCount;
    double __ignoreSubjectAreaChangesUntilTime;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id __lockLensPositionCompletionBlock;

}

@property(readonly) AVCaptureSession * currentSession;
@property(readonly) AVCaptureStillImageOutput * imageOutput;
@property AVCaptureDevice * currentDevice;
@property AVCaptureDeviceInput * currentInput;
@property AVCaptureOutput * currentOutput;
@property(readonly) AVCaptureVideoPreviewLayer * previewLayer;
@property int previewOrientation;
@property bool canCapturePhotoFromVideoModeWhenNotRecording;
@property(readonly) float panoramaPreviewScale;
@property(readonly) struct CGSize { double x1; double x2; } panoramaPreviewSize;
@property(getter=isCapturingTimelapse) bool capturingTimelapse;
@property float exposureTargetBias;
@property(readonly) float exposureTargetBiasDefault;
@property(readonly) float exposureTargetBiasMin;
@property(readonly) float exposureTargetBiasMax;
@property struct CGPoint { double x1; double x2; } focusPointOfInterest;
@property struct CGPoint { double x1; double x2; } exposurePointOfInterest;
@property bool resetFocusWhenSubjectAreaChanged;
@property bool resetExposureWhenSubjectAreaChanged;
@property bool userLockedFocus;
@property bool userLockedExposure;
@property int captureOrientation;
@property long long cameraMode;
@property long long flashMode;
@property long long cameraDevice;
@property bool convertSampleBufferToJPEG;
@property bool isCameraApp;
@property(readonly) bool supportsHDR;
@property(readonly) bool supportsHDRSuggestion;
@property(getter=isHDRDetectionEnabled) bool HDRDetectionEnabled;
@property(getter=isHDRSuggested,readonly) bool HDRSuggested;
@property(readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cleanAperture;
@property(copy) id postSessionSetupBlock;
@property(readonly) long long cameraOrientation;
@property(retain) CAMEffectsRenderer * effectsRenderer;
@property(retain,readonly) NSArray * activeFilters;
@property(copy) NSArray * supportedCameraModes;
@property double videoZoomFactor;
@property bool performingAvalancheCapture;
@property bool disableAllPreviewSuspensionDuringCapture;
@property(setter=_setEffectsAvailable:) bool _effectsAvailable;
@property(setter=_setAtomicEffectsAvailable:) bool _atomicEffectsAvailable;
@property(retain,readonly) NSObject<OS_dispatch_queue> * _effectFilterIndexQueue;
@property(setter=_setEffectFilterIndices:,retain) NSDictionary * _effectFilterIndices;
@property(getter=_isConfiguringCamera,setter=_setConfiguringCamera:) bool _configuringCamera;
@property(retain,readonly) NSObject<OS_dispatch_queue> * _captureIsolationQueue;
@property(retain,readonly) NSObject<OS_dispatch_queue> * _effectRenderingQueue;
@property(getter=_isSessionReady,setter=_setSessionReady:) bool _sessionReady;
@property(getter=_isModeChangeWaitingForPreviewStarted,setter=_setModeChangeWaitingForPreviewStarted:) bool _modeChangeWaitingForPreviewStarted;
@property(getter=_isAtomicModeChangeWaitingForPreviewStarted,setter=_setAtomicModeChangeWaitingForPreviewStarted:) bool _atomicModeChangeWaitingForPreviewStarted;
@property(getter=_isModeChangeWaitingForConfigureSession,setter=_setModeChangeWaitingForConfigureSession:) bool _modeChangeWaitingForConfigureSession;
@property(getter=_isAtomicModeChangeWaitingForConfigureSession,setter=_setAtomicModeChangeWaitingForConfigureSession:) bool _atomicModeChangeWaitingForConfigureSession;
@property(readonly) NSMutableArray * _inflightStillImageCaptureRequests;
@property(readonly) NSMutableArray * _inflightVideoCaptureResponses;
@property(readonly) NSMutableArray * _deferredVideoCaptureRequests;
@property(readonly) NSMutableArray * _inflightPanoramaCaptureRequests;
@property(readonly) NSMutableArray * _processingPanoramaCaptureRequests;
@property(readonly) bool _wasStillImageStabilzationOnBeforeTimedCapture;
@property(readonly) NSMutableArray * _currentFaceMetadata;
@property(getter=_isPreviewPaused,setter=_setPreviewPaused:) bool _previewPaused;
@property(setter=_setPreviewLayerEnabledForRenderer:) bool _previewLayerEnabledForRenderer;
@property(setter=_setVideoDataOutputEnabledForRenderer:) bool _videoDataOutputEnabledForRenderer;
@property(readonly) NSMutableDictionary * _servicesByType;
@property(readonly) CAMAvalancheCaptureService * _avalancheCaptureService;
@property(readonly) CAMDebugCaptureService * _debugCaptureService;
@property(setter=_setDeviceLockCount:) long long _deviceLockCount;
@property(readonly) bool _ignoreSubjectAreaChanges;
@property(readonly) double _ignoreSubjectAreaChangesUntilTime;
@property(readonly) bool _lockFocusAfterFocusFinishes;
@property(readonly) bool _lockExposureAfterExposeFinishes;
@property(setter=_setLockLensPositionCompletionBlock:,copy) id _lockLensPositionCompletionBlock;
@property(setter=_setLockLensPositionTarget:) float _lockLensPositionTarget;
@property(readonly) bool _locationAcquiredForTimelapseCapture;

+ (bool)_shouldExtractDiagnostics;
+ (id)_dateFormatterForVideoMetadata;
+ (id)videoMetadataArrayWithLocation:(id)arg1 date:(id)arg2 didSetLocationData:(bool*)arg3;
+ (bool)isStillImageMode:(long long)arg1;
+ (float)focusLensPositionCurrentSentinel;
+ (bool)isVideoMode:(long long)arg1;
+ (id)sharedInstance;

- (bool)_locationAcquiredForTimelapseCapture;
- (void)_setLockLensPositionTarget:(float)arg1;
- (float)_lockLensPositionTarget;
- (void)_setLockLensPositionCompletionBlock:(id)arg1;
- (id)_lockLensPositionCompletionBlock;
- (bool)_lockExposureAfterExposeFinishes;
- (bool)_lockFocusAfterFocusFinishes;
- (double)_ignoreSubjectAreaChangesUntilTime;
- (bool)_ignoreSubjectAreaChanges;
- (id)_debugCaptureService;
- (id)_currentFaceMetadata;
- (bool)_wasStillImageStabilzationOnBeforeTimedCapture;
- (id)_processingPanoramaCaptureRequests;
- (id)_inflightPanoramaCaptureRequests;
- (id)_deferredVideoCaptureRequests;
- (id)_inflightStillImageCaptureRequests;
- (id)_effectRenderingQueue;
- (bool)_isConfiguringCamera;
- (bool)disableAllPreviewSuspensionDuringCapture;
- (bool)isHDRDetectionEnabled;
- (struct CGSize { double x1; double x2; })panoramaPreviewSize;
- (id)imageOutput;
- (void)setCurrentDevice:(id)arg1;
- (void)_panoramaDidReceiveErrorNotificationString:(struct __CFString { }*)arg1;
- (void)_panoramaDidReceiveWarningNotificationString:(struct __CFString { }*)arg1;
- (void)_panoramaDidReceiveStatusNotificationString:(struct __CFString { }*)arg1;
- (void)_createAssetForPanoramaResponse:(id)arg1;
- (void)_saveStillImageResponse:(id)arg1 completionBlock:(id)arg2;
- (void)_updateOrientationForConnection:(id)arg1;
- (struct CGSize { double x1; double x2; })_panoramaPreviewSize;
- (double)currentMinFrameDuration;
- (void)_faceMetadataDidChange:(id)arg1;
- (void)_debugFocusState;
- (void)_verifyVideoConsolidationForVideoAtPath:(id)arg1 outUserInfo:(id*)arg2;
- (void*)_newFilteredSurfaceFromSurface:(void*)arg1 filters:(id)arg2;
- (void)capturePhoto;
- (bool)imageWriterQueueIsAvailable;
- (void)_clearPreviewLayer;
- (bool)convertSampleBufferToJPEG;
- (void)setConvertSampleBufferToJPEG:(bool)arg1;
- (void)_panoramaDidReceiveIssueWithPanoramaString:(struct __CFString { }*)arg1;
- (void)_processPanoramaRequest:(id)arg1;
- (void)_lockFocusAndExposureForPano;
- (id)_sanitizePanoramaCaptureRequest:(id)arg1;
- (bool)canCapturePanorama;
- (void)_createAssetForVideoCaptureResponse:(id)arg1;
- (void)_verifyVideoConsolidationForVideoResponse:(id)arg1;
- (void)_updateIdleTimerForDidFinishVideoRecording;
- (void)_updateIdleTimerForStartVideoCapture;
- (void)_applyTorchSettingsFromVideoRequest:(id)arg1;
- (void)_applyCaptureSettingsFromVideoRequest:(id)arg1;
- (id)_sanitizeVideoCaptureRequest:(id)arg1;
- (long long)_addOrientationMetadataToResponse:(id)arg1;
- (void)releaseIOSurface;
- (void)captureIOSurface;
- (void)_updateImagePickerMetadataForResponse:(id)arg1;
- (void)_updateResponse:(id)arg1 withSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 metadata:(id)arg3 error:(id)arg4;
- (void)_completedWriteForResponse:(id)arg1 request:(id)arg2 error:(id)arg3;
- (void)_completedResponse:(id)arg1 forRequest:(id)arg2 error:(id)arg3;
- (void)_notifyServicesOfCompletedResponse:(id)arg1 error:(id)arg2;
- (void)_notifyServicesOfGeneratedResponse:(id)arg1 error:(id)arg2;
- (void)_generatedResponse:(id)arg1 forRequest:(id)arg2 error:(id)arg3;
- (id)_stillImageCaptureResponseForRequest:(id)arg1 error:(id)arg2;
- (void)_notifyServicesOfEnqueuedRequest:(id)arg1;
- (void)_applyCaptureSettingsFromStillImageRequest:(id)arg1 withConnection:(id)arg2;
- (id)_captureConnectionForStillImageCapture;
- (id)_sanitizeStillImageRequest:(id)arg1;
- (void)_applyAudioSettingsFromRequest:(id)arg1;
- (void)_applyStillImageStabilizationSettingsFromRequest:(id)arg1;
- (void)_applyHDRSettingsFromRequest:(id)arg1;
- (void)_applyFlashSettingsFromRequest:(id)arg1;
- (void)_resetRecentFaceMetadata;
- (long long)_serviceTypeForCaptureRequest:(id)arg1;
- (id)_servicesByType;
- (void)_createTimelapseServicesIfNecessary;
- (void)_createPanoramaServicesIfNecessary;
- (void)_createVideoServicesIfNecessary;
- (void)_createStillImageServicesIfNecessary;
- (void)_forceKeepAliveFailsafeTimeout;
- (void)_checkKeepAliveStatus;
- (bool)_videoDataOutputEnabledForRenderer;
- (bool)_previewLayerEnabledForRenderer;
- (bool)_isPreviewPaused;
- (void)_lockFocusForAvalancheCapture;
- (void)_setEndianAndCircularTestEnabled:(bool)arg1;
- (void)_setPerformingAvalancheCapture:(bool)arg1;
- (id)_avalancheCaptureService;
- (void)_setAtomicEffectsAvailable:(bool)arg1;
- (bool)_atomicEffectsAvailable;
- (void)_notifyEffectFilterIndexChanged;
- (void)_setEffectFilterIndices:(id)arg1;
- (unsigned long long)_sanitizeEffectFilterIndex:(unsigned long long)arg1 forMode:(long long)arg2;
- (id)_effectFilterIndices;
- (id)_effectFilterIndexQueue;
- (bool)_effectsAvailable;
- (unsigned long long)_activeFilterIndex;
- (void)_setSupportedCameraModes:(id)arg1;
- (bool)supportsPanorama;
- (double)_limitZoomFactor:(double)arg1 forDevice:(id)arg2;
- (bool)_supportsHDRSuggestionForCaptureDevice:(id)arg1;
- (void)_suggestedHDRChanged;
- (void)_didTakePhoto;
- (void)_willTakePhoto;
- (void)_faceRectangleChanged;
- (void)_updateTorchAvailability;
- (void)_torchLevelChanged;
- (void)_torchActiveChanged;
- (void)_flashStateChanged;
- (void)_exposureTargetBiasChanged;
- (void)_whiteBalanceCompleted;
- (void)_whiteBalanceStarted;
- (void)_exposureCompleted;
- (void)_exposureStarted;
- (void)_focusCompleted;
- (void)_focusStarted;
- (void)_disableSubjectAreaChangeMonitoringIfNeeded;
- (bool)_isFocusModeContinuousAutoFocusAtCenter;
- (void)_resetFocus:(bool)arg1 andExposure:(bool)arg2;
- (void)_enableSubjectAreaChangedMonitoringIfNeeded;
- (void)_autofocusAfterCapture;
- (void)_resetFocusAndExposureIfNotExplicitlyLocked;
- (bool)resetExposureWhenSubjectAreaChanged;
- (bool)resetFocusWhenSubjectAreaChanged;
- (void)_startContinuousAutoExposureAtCenter;
- (void)_startContinuousAutoFocusAtCenter;
- (long long)_whiteBalanceModeForExposureMode:(long long)arg1;
- (int)effectiveExposureMode;
- (void)_updateWhiteBalanceModeForExposureMode:(long long)arg1;
- (void)_setExposureMode:(long long)arg1;
- (void)_setFocusModeLockedWithLensPosition;
- (void)_setFocusMode:(long long)arg1 forceSmoothFocus:(bool)arg2;
- (int)_CAMExposureModeForAVExposureMode:(long long)arg1;
- (int)_CAMFocusModeForAVFocusMode:(long long)arg1;
- (long long)_AVExposureModeForCAMExposureMode:(int)arg1;
- (bool)_modeAllowsAEAF;
- (long long)_AVFocusModeForCAMFocusMode:(int)arg1;
- (void)_unlockCurrentDeviceForConfiguration;
- (bool)_lockCurrentDeviceForConfiguration;
- (void)_updateIdleTimerForDidFinishRecording;
- (void)_delayIdleTimerByTimeInterval:(double)arg1;
- (void)_disableIdleIndefinitely;
- (void)_resetIdleTimer;
- (void)setFaceDetectionEnabled:(bool)arg1 forceDisableImageProcessing:(bool)arg2;
- (void)_updateIdleTimerForCapturingTimelapseChanged;
- (void)_updateIdleTimerForStopVideoCapture;
- (void)_updateFocusAndExposureForVideoRecording;
- (id)_videoMetadataArrayIncludingSensitiveProperties:(bool)arg1;
- (void)_setVideoCapturePath:(id)arg1;
- (void)_capturedPhotoWithDictionary:(id)arg1 error:(id)arg2 HDRUsed:(bool)arg3;
- (id)_captureIsolationQueue;
- (void)_setOrientationForConnection:(id)arg1;
- (void)_setOrientation;
- (id)_currentVideoConnection;
- (bool)isExposing;
- (bool)_isCapturingStillFromVideoMode;
- (bool)_sanityCheckSessionCanCaptureWithOutput:(id)arg1;
- (bool)capturePhotoUsingHDR:(bool)arg1;
- (void)_setKeepAlive:(bool)arg1 forVideoCapture:(bool)arg2;
- (void)performAutofocusAfterCapture;
- (void)_processCapturedPhotoWithDictionary:(id)arg1 error:(id)arg2 HDRUsed:(bool)arg3;
- (void)_updateIdleTimerForStillImageCaptured;
- (id)_inflightVideoCaptureResponses;
- (void)_recoverFromServerError;
- (void)_updateIdleTimerForPreviewStopped;
- (void)_setFlashMode:(long long)arg1 force:(bool)arg2;
- (void)_updateIdleTimerForPreviewStarted;
- (bool)_shouldDisableLocationForTimelapseRecording;
- (bool)_modeUsesCompassHeading;
- (void)_setOrientationEventsEnabled:(bool)arg1;
- (id)currentInput;
- (bool)_setupCamera;
- (void)_tearDownCamera;
- (void)_setSessionReady:(bool)arg1;
- (void)executeBlockOnMainQueue:(id)arg1;
- (void)_debug_cancelWaitForIris;
- (void)_forceDelaySuspendTimeout;
- (void)_setDelaySuspend:(bool)arg1;
- (id)postSessionSetupBlock;
- (void)_subjectAreaDidChange:(id)arg1;
- (void)_inputPortFormatDescriptionDidChange:(id)arg1;
- (void)_movieFileRecordingCompleted:(id)arg1;
- (void)_interruptionEnded:(id)arg1;
- (void)_wasInterrupted:(id)arg1;
- (void)_sessionStopped:(id)arg1;
- (void)_setEffectsRenderer:(id)arg1;
- (id)_mogulFormatFromDevice:(id)arg1;
- (void)_debug_waitForIrisToOpen;
- (void)_debug_checkIris;
- (id)_debug_dispatchTimerQueue;
- (void)_jankyPreviewStartedWorkaround;
- (void)_enableKeepAliveFailsafeTimer;
- (void)_setDeviceLockCount:(long long)arg1;
- (long long)_deviceLockCount;
- (void)_setAtomicModeChangeWaitingForConfigureSession:(bool)arg1;
- (bool)_isAtomicModeChangeWaitingForConfigureSession;
- (void)_setAtomicModeChangeWaitingForPreviewStarted:(bool)arg1;
- (bool)_isAtomicModeChangeWaitingForPreviewStarted;
- (void)enqueueBlockOnMainQueue:(id)arg1;
- (bool)_isModeChangeWaitingForConfigureSession;
- (bool)_isModeChangeWaitingForPreviewStarted;
- (void)_notifyControllerModeDidChange;
- (void)enqueueBlockInCaptureSessionQueue:(id)arg1;
- (void)_updateEffectsRendererFilterIndexForceStateChange:(bool)arg1 renderNotifyBlock:(id)arg2;
- (void)_startContinuousAEAFAtCenter;
- (bool)_configureSessionWithCameraMode:(long long)arg1 cameraDevice:(long long)arg2 HDRDetectionEnabled:(bool)arg3;
- (void)_setModeChangeWaitingForConfigureSession:(bool)arg1;
- (void)_setModeChangeWaitingForPreviewStarted:(bool)arg1;
- (void)_updatePreviewLayerEnabled;
- (void)_updateEffectsVideoDataOutputEnabled;
- (void)setCurrentInput:(id)arg1;
- (void)setCurrentOutput:(id)arg1;
- (void)_setFaceDetectionEnabled:(bool)arg1 forceDisableImageProcessing:(bool)arg2 forCaptureDevice:(id)arg3 captureOutput:(id)arg4;
- (bool)isCapturingTimelapse;
- (void)_deviceConfigurationForPanoramaOptions:(struct __CFDictionary { }*)arg1 captureDevice:(id)arg2 deviceFormat:(id*)arg3 minFrameDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg4 maxFrameDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg5;
- (void)_setEffectsAvailable:(bool)arg1;
- (bool)_canCapturePhotoFromVideoMode;
- (id)_videoModeSessionPreset;
- (void)_setConfiguringCamera:(bool)arg1;
- (void)_cancelDelayedFocusRequests;
- (id)_photoModeSessionPresetForMode:(long long)arg1 device:(long long)arg2;
- (id)currentOutput;
- (bool)_safeSetCameraMode:(long long)arg1 cameraDevice:(long long)arg2;
- (void)_updateEffectsRendererMirroring;
- (void)_destroyAllServices;
- (bool)_isSessionReady;
- (void)_imageWriterQueueAvailabilityChanged;
- (void)_setCameraMode:(long long)arg1 cameraDevice:(long long)arg2;
- (void)_teardownKeepAliveFailsafeTimer;
- (void)_teardownKeepAliveTimer;
- (void)_teardownDelaySuspendTimer;
- (void)setPostSessionSetupBlock:(id)arg1;
- (void)_setLocationEnabled:(bool)arg1;
- (void)_destroyCamera;
- (void)_debug_teardownDispatchTimer;
- (void)_createServicesIfNecessaryForMode:(long long)arg1;
- (void)_setVideoDataOutputEnabledForRenderer:(bool)arg1;
- (void)_setPreviewLayerEnabledForRenderer:(bool)arg1;
- (void)_updateSupportedCameraModes;
- (void)_updateCallStatus;
- (void)_callStateDidChange:(id)arg1;
- (double)minimumVideoCaptureDuration;
- (void)_capturedPhotoWithCaptureDictionary:(id)arg1 metadata:(id)arg2;
- (unsigned long long)effectFilterIndexForMode:(long long)arg1;
- (float)panoramaPreviewScale;
- (void)setPanoramaImageQueueLayer:(id)arg1;
- (long long)numberOfCapturedAvalanchePhotos;
- (bool)supportsHDRSuggestionForDevice:(long long)arg1;
- (void)setHDRDetectionEnabled:(bool)arg1;
- (bool)supportsHDRForDevice:(long long)arg1 mode:(long long)arg2;
- (bool)isHDRSuggested;
- (void)setCanCapturePhotoFromVideoModeWhenNotRecording:(bool)arg1;
- (bool)canCapturePhotoFromVideoModeWhenNotRecording;
- (bool)isChangingModes;
- (bool)canCapturePhotoDuringRecording;
- (bool)supportsHDR;
- (bool)hasRearCamera;
- (bool)hasFrontCamera;
- (double)mogulFrameRate;
- (void)resumeSubjectAreaChangesAfterDelay:(double)arg1;
- (float)exposureTargetBiasMax;
- (float)exposureTargetBiasMin;
- (void)suspendSubjectAreaChanges;
- (bool)canChangeFocusOrExposure;
- (float)exposureTargetBiasDefault;
- (void)restartContinuousAEAFAtCenter;
- (void)setEffectFilterIndex:(unsigned long long)arg1 forMode:(long long)arg2;
- (bool)isExposureModeCenteredContinuous;
- (bool)isFocusingOnFace;
- (int)effectiveFocusMode;
- (void)setUserLockedExposure:(bool)arg1;
- (void)setUserLockedFocus:(bool)arg1;
- (bool)isSupportedExposureMode:(int)arg1;
- (bool)userLockedExposure;
- (bool)isSupportedFocusMode:(int)arg1;
- (bool)userLockedFocus;
- (void)setResetExposureWhenSubjectAreaChanged:(bool)arg1;
- (bool)_shouldResetExposureWhenSubjectAreaChanged;
- (bool)_shouldResetFocusWhenSubjectAreaChanged;
- (bool)isPreviewMirrored;
- (int)previewOrientation;
- (bool)currentlyAllowedToExposeAtPointOfInterestWithMode:(int)arg1;
- (bool)currentlyAllowedToFocusAtPointOfInterestWithMode:(int)arg1;
- (void)_removeVideoCaptureFileAndDirectoryAtPath:(id)arg1;
- (void)setExposureTargetBias:(float)arg1;
- (void)setUserLockedFocus:(bool)arg1 exposure:(bool)arg2;
- (bool)_didSendPreviewStartedCallbackToEmptyDelegate;
- (void)smoothFocusAtCenterForVideoRecording;
- (double)currentMaxFrameDuration;
- (double)maximumZoomFactorForDevice:(long long)arg1;
- (bool)isCapturingPanorama;
- (bool)canCaptureVideo;
- (id)activeFilters;
- (bool)supportsLiveEffects;
- (void)stopPanoramaCapture;
- (void)enqueuePanoramaRequest:(id)arg1;
- (void)postOrientationChangedNotification:(long long)arg1 force:(bool)arg2;
- (id)videoCapturePath;
- (bool)isTorchOn;
- (bool)isCapturingVideo;
- (void)enqueueVideoCaptureRequest:(id)arg1;
- (bool)supportsPreviewDuringHDR;
- (bool)performingAvalancheCapture;
- (bool)supportsAvalancheAnalysisForDevice:(long long)arg1;
- (bool)flashWillFire;
- (void)setFocusDisabled:(bool)arg1;
- (bool)isFocusing;
- (bool)isTorchDisabled;
- (id)supportedCameraModes;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cleanAperture;
- (bool)hasInheritedForegroundState;
- (void)_setPreviewPaused:(bool)arg1;
- (void)resumePreview;
- (void)pausePreview;
- (void)_startPreview:(id)arg1;
- (void)_synchronizeHDRSettings;
- (id)effectsRenderer;
- (void)setDisableAllPreviewSuspensionDuringCapture:(bool)arg1;
- (bool)supportsVideoCapture;
- (double)minimumZoomFactorForDevice:(long long)arg1;
- (void)setIsCameraApp:(bool)arg1;
- (void)setPreviewOrientation:(int)arg1;
- (void)_inCallStatusChanged:(bool)arg1;
- (void)notifyLocationAcquiredForTimelapse;
- (void)resetFocusAndExposureIfNotExplicitlyLocked;
- (void)unlockDeviceForFocusConfiguration;
- (void)setFocusModeLockedWithLensPosition:(float)arg1 completionBlock:(id)arg2;
- (void)setResetFocusWhenSubjectAreaChanged:(bool)arg1;
- (bool)lockDeviceForFocusConfiguration;
- (bool)enqueueStillImageCaptureRequest:(id)arg1;
- (bool)canCapturePhoto;
- (void)setCapturingTimelapse:(bool)arg1;
- (void)_previewStarted;
- (void)_sessionRuntimeErrored:(id)arg1;
- (void)_sessionStarted:(id)arg1;
- (id)recentFaceMetadata;
- (bool)canContinueAvalancheCapture;
- (void)cancelAvalancheCapture;
- (void)finishAvalancheCapture;
- (void)startAvalancheCapture;
- (float)focusLensPosition;
- (void)setCaptureOrientation:(int)arg1;
- (int)captureOrientation;
- (bool)isCameraApp;
- (void)cameraEffectsRenderer:(id)arg1 didFinishTransitionToShowGrid:(bool)arg2;
- (void)cameraEffectsRenderer:(id)arg1 didStartTransitionToShowGrid:(bool)arg2 animated:(bool)arg3;
- (void)cameraEffectsRenderer:(id)arg1 willTransitionToShowGrid:(bool)arg2;
- (void)cameraEffectsRendererDidStartPreview:(id)arg1;
- (void)_runOnMainThreadImmediatelyIfPossibleWithBlock:(id)arg1;
- (void)cameraEffectsRenderer:(id)arg1 requestsVideoDataOutputEnabled:(bool)arg2;
- (void)cameraEffectsRenderer:(id)arg1 requestsPreviewLayerEnabled:(bool)arg2;
- (void)_deviceStarted:(id)arg1;
- (id)effectFilterIndices;
- (void)_setDefaultPrewarmDate:(id)arg1;
- (long long)cameraMode;
- (void)setEffectFilterIndices:(id)arg1 forceStateChange:(bool)arg2;
- (void)setCameraMode:(long long)arg1;
- (void)setCameraMode:(long long)arg1 device:(long long)arg2;
- (bool)supportsHDRSuggestion;
- (void)startPreview:(id)arg1;
- (void)_startPreviewWithCameraDevice:(long long)arg1 cameraMode:(long long)arg2 effectFilterIndices:(id)arg3;
- (void)_pptTestSetAutofocusDisabled:(bool)arg1;
- (void)setVideoCaptureMaximumDuration:(double)arg1;
- (void)setVideoCaptureQuality:(int)arg1;
- (id)previewLayer;
- (void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3;
- (void)startPreview;
- (void)stopPreview;
- (long long)cameraOrientation;
- (id)currentSession;
- (void)_serverDied:(id)arg1;
- (void)_applicationSuspended:(id)arg1;
- (void)setVideoZoomFactor:(double)arg1;
- (double)videoZoomFactor;
- (void)_setSubjectAreaChangeMonitoringEnabled:(bool)arg1;
- (void)captureOutput:(id)arg1 didStartRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3;
- (void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 error:(id)arg4;
- (void)cancelVideoZoomRamp;
- (void)rampToVideoZoomFactor:(double)arg1 withRate:(float)arg2;
- (float)exposureTargetBias;
- (void)setExposurePointOfInterest:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })exposurePointOfInterest;
- (bool)isExposurePointOfInterestSupported;
- (void)setExposureMode:(int)arg1;
- (void)setFocusPointOfInterest:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })focusPointOfInterest;
- (bool)isFocusPointOfInterestSupported;
- (void)setFocusMode:(int)arg1;
- (bool)isTorchActive;
- (void)setFlashMode:(long long)arg1;
- (long long)flashMode;
- (bool)hasFlash;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })faceRectangle;
- (id)currentDevice;
- (void)accelerometer:(id)arg1 didChangeDeviceOrientation:(int)arg2;
- (void)accelerometer:(id)arg1 didAccelerateWithTimeStamp:(double)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5 eventType:(int)arg6;
- (bool)inCall;
- (id)init;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (void).cxx_destruct;
- (bool)isReady;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)setCameraDevice:(long long)arg1;
- (long long)cameraDevice;
- (void)stopVideoCapture;
- (void)startVideoCapture;

@end
