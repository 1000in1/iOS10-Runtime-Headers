/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/CameraKit.framework/CameraKit
 */

@class UITapGestureRecognizer, CAMHDRBadge, CAMPreviewView, CAMModeDial, NSMutableArray, CAMZoomSlider, UIPanGestureRecognizer, CALayer, CAMTimerButton, NSMutableSet, CAMBlurredSnapshotView, UIAlertView, CAMTimerIndicatorView, CAMTopBar, UILongPressGestureRecognizer, CAMSlalomIndicatorView, CAMHardwareLockIndicatorView, CAMFlipButton, CAMFlashButton, CAMCameraSpec, NSObject<OS_dispatch_source>, PLCameraIrisAnimationView, CAMImageWell, PLPreviewOverlayView, CAMBottomBar, PLCameraOverlayTextLabelView, CAMAnimationDelegate, UIView, CAMCaptureController, CAMPanoramaView, CAMGridView, CAMTorchPatternController, CAMExposureBiasTextView, UIImageView, CAMElapsedTimeView, CAMFilterButton, CAMHDRButton, NSTimer, CAMShutterButton, CAMFlashBadge, CAMAvalancheIndicatorView, CAMLowDiskSpaceAlertView, UISwipeGestureRecognizer, NSDate;

@interface CAMCameraView : UIView <CAMModeDialDataSource, CAMTopBarDelegate, CAMBottomBarDelegate, CAMZoomSliderDelegate, CAMTimerButtonDelegate, CAMStillImageCaptureRequestDelegate, PLCameraControllerDelegate, PLCameraPanoramaViewDelegate, UIGestureRecognizerDelegate, UIAccelerometerDelegate> {
    int _captureOrientation;
    CAMCaptureController *_cameraController;
    CALayer *_panoramaPreviewLayer;
    CAMPanoramaView *_panoramaView;
    double _panoramaProgress;
    struct CGSize { 
        double width; 
        double height; 
    } _previewContentSize;
    bool_previewOriginShouldBeZero;
    int _previewViewAspectMode;
    long long _flashModeBeforeCapture;
    UIView *_previewViewSnapshotView;
    UIView *_flipView;
    double _initialPinchZoomValue;
    UIView *_textOverlayView;
    UITapGestureRecognizer *_singleTapGestureRecognizer;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UIPanGestureRecognizer *_focusPanGestureRecognizer;
    UIPanGestureRecognizer *_exposureBiasPanGestureRecognizer;
    PLCameraOverlayTextLabelView *_aeafLockView;
    NSTimer *_aeafLockTimer;
    bool_shouldEndFocusOnTapUp;
    bool_showFaceTracking;
    unsigned long long _currentFacesCount;
    NSTimer *_faceFadeOutTimer;
    CAMGridView *_guideView;
    PLCameraIrisAnimationView *_irisView;
    UIImageView *_staticIrisView;
    bool_delayStaticClosedIrisLoading;
    UIImageView *_bottomShadowView;
    bool_irisIsClosed;
    bool_irisWillOpen;
    NSMutableArray *_openIrisDidFinishSelectors;
    NSMutableArray *_closeIrisDidFinishSelectors;
    long long _modeToOpenIris;
    UIAlertView *_torchDisabledAlert;
    CAMLowDiskSpaceAlertView *_diskSpaceAlert;
    bool_gridIsOn;
    bool_internalOnlyDisableIrisViews;
    id _delegate;
    unsigned int _needToShowDiskSpaceWarning : 1;
    unsigned int _shouldShowFocus : 1;
    unsigned int _capturePhotoWhenFocusFinished : 1;
    unsigned int _capturePhotoWhenExposureFinished : 1;
    unsigned int _isMidSuspension : 1;
    unsigned int _capturingPhoto : 1;
    unsigned int _fastIrisAnimation : 1;
    unsigned int _currentCaptureIsExtendedDuration : 1;
    unsigned int _flashModeDidChangeDuringCapture : 1;
    unsigned int _imageWriterQueueIsFull : 1;
    unsigned int _isCameraApp : 1;
    unsigned int _staticIrisIsClosing : 1;
    unsigned int _irisIsOpening : 1;
    unsigned int _wasInterrupted : 1;
    unsigned int _suppressIrisAnimations : 1;
    unsigned int _shouldAnimateIrisClosed : 1;
    unsigned int _enableCameraAfterDidMoveToWindow : 1;
    unsigned int _previewStartedBeforeViewMovedToWindow : 1;
    unsigned int _didEverMoveToWindow : 1;
    int _rotationStyle;
    bool_enableAutorotationAfterRecording;
    bool_maskSetBeforeModeChange;
    bool_squareMaskActive;
    bool_userChangedHDRAfterFlash;
    bool_gridVisible;
    bool_controlsAreVisible;
    bool_allowsMultipleModes;
    bool_userInteractionLoggingEnabled;
    bool__capturingFromVolumeButtons;
    bool__HDRSuggested;
    bool__HDRUsedForLastCapture;
    bool__ignoringAutomaticBadgeUpdatesForAvalancheIndicator;
    bool__ignoringAutomaticBadgeUpdatesDuringCapture;
    bool__receivedInitialPreviewDidStartNotification;
    bool__tallScreenDevice;
    bool__badgesNeedLayoutForZoomSliderAnimation;
    bool__cameraEnabled;
    bool__capturing;
    bool__waitingForStillImageCaptureToComplete;
    bool__hasMaximumNumberOfInflightImageRequests;
    bool__preparingToRecord;
    bool__postprocessing;
    bool__processingHDR;
    bool__changingModes;
    bool__flipping;
    bool__performingFilterTransition;
    bool__hidingBadgesForFilterUI;
    bool__viewingCameraRoll;
    bool__reviewingImagePickerCapture;
    bool__blurredFromSuspension;
    bool__switchingBetweenCameras;
    bool__processingModeChange;
    bool__avalancheCaptureRecognized;
    bool__avalancheCaptureInProgress;
    bool__avalancheCaptureAsSoonAsPossible;
    bool__avalancheIndicatorVisible;
    bool__ignoringSubsequentAvalancheCaptureRequests;
    bool__needToStartAvalancheSound;
    bool__performingDelayedCapture;
    bool__capturingAvalancheForDelayedCapture;
    bool__delayedCaptureIndicatorVisible;
    bool__hideFocusForFilterSelection;
    bool__hideGridViewForFilterSelection;
    bool__stopVideoCaptureWhenRecordingStarts;
    bool__panningExposureRect;
    bool__panningExposureBias;
    int _lastSelectedHDRMode;
    int __windowEdgeClip;
    float __exposureBiasPanStartValue;
    CAMCameraSpec *_spec;
    long long _videoFlashMode;
    long long _lastSelectedPhotoFlashMode;
    long long _timerDuration;
    double __timeIntervalOfTouchDown;
    long long __numberOfInflightStillImageRequests;
    UIView *_previewContainerView;
    CAMPreviewView *_previewView;
    PLPreviewOverlayView *_overlayView;
    UIView *__previewMaskingView;
    UIView *__previewCounterRotatingView;
    UIView *__nonWidescreenSquareBottomMarginLayoutSpacer;
    CAMTopBar *__topBar;
    CAMFlashButton *__flashButton;
    CAMFlashBadge *__flashBadge;
    CAMHDRButton *__HDRButton;
    CAMHDRBadge *__HDRBadge;
    CAMElapsedTimeView *__elapsedTimeView;
    CAMFlipButton *__flipButton;
    CAMBottomBar *__bottomBar;
    CAMModeDial *__modeDial;
    CAMImageWell *__imageWell;
    CAMShutterButton *__stillDuringVideoButton;
    CAMShutterButton *__shutterButton;
    CAMFilterButton *__filterButton;
    CAMZoomSlider *__zoomSlider;
    CAMAvalancheIndicatorView *__avalancheIndicator;
    CAMSlalomIndicatorView *__slalomIndicator;
    CAMHardwareLockIndicatorView *__hardwareLockIndicator;
    CAMTimerButton *__timerButton;
    CAMTimerIndicatorView *__timerIndicator;
    CAMExposureBiasTextView *__exposureBiasTextView;
    CAMBlurredSnapshotView *__suspensionSnapshotView;
    CAMBlurredSnapshotView *__captureSnapshotView;
    CAMBlurredSnapshotView *__currentDeviceFrontSnapshotView;
    CAMBlurredSnapshotView *__currentDeviceBackSnapshotView;
    CAMBlurredSnapshotView *__targetDeviceSnapshotView;
    UISwipeGestureRecognizer *__nextModeGestureRecognizer;
    UISwipeGestureRecognizer *__previousModeGestureRecognizer;
    CAMBlurredSnapshotView *__modeSwitchingSnapshotView;
    long long _selectedModeIndex;
    long long __pendingModeIndex;
    long long __deferredModeIndex;
    NSObject<OS_dispatch_source> *__avalancheCaptureTimer;
    NSObject<OS_dispatch_source> *__avalancheRecognitionTimer;
    long long __desiredNumberOfAvalancheCaptures;
    CAMAnimationDelegate *__delayedCaptureAnimationDelegate;
    NSObject<OS_dispatch_source> *__delayedCaptureTimer;
    long long __remainingDelayedCaptureTicks;
    CAMTorchPatternController *__torchPatternController;
    NSDate *__lastDelayedCaptureIndicatorUpdateDate;
    NSDate *__lastAutoTimerCaptureDate;
    unsigned long long __numFilterSelectionsBeforeCapture;
    NSMutableSet *__filterNamesSelectedBeforeCapture;
    double __exposureBiasVirtualSliderExponent;
    double __exposureBiasVirtualSliderPointsForFirstStop;
    struct CGPoint { 
        double x; 
        double y; 
    } __lastFocusPanPoint;
    struct CGPoint { 
        double x; 
        double y; 
    } __focusPanStartPoint;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    } _previewViewTransform;
}

@property(readonly) CAMCameraSpec * spec;
@property long long cameraMode;
@property long long cameraDevice;
@property long long flashMode;
@property long long videoFlashMode;
@property long long lastSelectedPhotoFlashMode;
@property int lastSelectedHDRMode;
@property bool userChangedHDRAfterFlash;
@property long long timerDuration;
@property int previewViewAspectMode;
@property int rotationStyle;
@property(getter=isGridVisible) bool gridVisible;
@property(readonly) bool controlsAreVisible;
@property(readonly) bool allowsMultipleModes;
@property struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } previewViewTransform;
@property(readonly) bool isCameraReady;
@property(getter=isUserInteractionLoggingEnabled) bool userInteractionLoggingEnabled;
@property(setter=_setAllowsStillFromVideoModeWhenNotRecording:) bool _allowsStillFromVideoModeWhenNotRecording;
@property(readonly) double _timeIntervalOfTouchDown;
@property(readonly) long long _numberOfInflightStillImageRequests;
@property(readonly) bool _capturingFromVolumeButtons;
@property(getter=_isHDRSuggested,setter=_setHDRSuggested:) bool _HDRSuggested;
@property(readonly) bool _HDRUsedForLastCapture;
@property(setter=_setIgnoringAutomaticBadgeUpdatesForAvalancheIndicator:) bool _ignoringAutomaticBadgeUpdatesForAvalancheIndicator;
@property(setter=_setIgnoringAutomaticBadgeUpdatesDuringCapture:) bool _ignoringAutomaticBadgeUpdatesDuringCapture;
@property(readonly) bool _receivedInitialPreviewDidStartNotification;
@property(readonly) UIView * previewContainerView;
@property(readonly) CAMPreviewView * previewView;
@property(readonly) PLPreviewOverlayView * overlayView;
@property(readonly) UIView * _previewMaskingView;
@property(readonly) UIView * _previewCounterRotatingView;
@property(readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _unzoomedPreviewFrame;
@property(readonly) int _windowEdgeClip;
@property(readonly) UIView * _nonWidescreenSquareBottomMarginLayoutSpacer;
@property(getter=_isTallScreenDevice,readonly) bool _tallScreenDevice;
@property(readonly) CAMTopBar * _topBar;
@property(readonly) CAMFlashButton * _flashButton;
@property(readonly) CAMFlashBadge * _flashBadge;
@property(readonly) CAMHDRButton * _HDRButton;
@property(readonly) CAMHDRBadge * _HDRBadge;
@property(readonly) CAMElapsedTimeView * _elapsedTimeView;
@property(readonly) CAMFlipButton * _flipButton;
@property(readonly) CAMBottomBar * _bottomBar;
@property(readonly) CAMModeDial * _modeDial;
@property(readonly) CAMImageWell * _imageWell;
@property(readonly) CAMShutterButton * _stillDuringVideoButton;
@property(readonly) CAMShutterButton * _shutterButton;
@property(readonly) CAMFilterButton * _filterButton;
@property(readonly) CAMZoomSlider * _zoomSlider;
@property(readonly) CAMAvalancheIndicatorView * _avalancheIndicator;
@property(readonly) CAMSlalomIndicatorView * _slalomIndicator;
@property(readonly) CAMHardwareLockIndicatorView * _hardwareLockIndicator;
@property(readonly) CAMTimerButton * _timerButton;
@property(readonly) CAMTimerIndicatorView * _timerIndicator;
@property(readonly) CAMExposureBiasTextView * _exposureBiasTextView;
@property(readonly) bool _badgesNeedLayoutForZoomSliderAnimation;
@property(getter=_isCameraEnabled,setter=_setCameraEnabled:) bool _cameraEnabled;
@property(getter=_isCapturing,setter=_setCapturing:) bool _capturing;
@property(getter=_isWaitingForStillImageCaptureToComplete,setter=_setWaitingForStillImageCaptureToComplete:) bool _waitingForStillImageCaptureToComplete;
@property(getter=_hasMaximumNumberOfInflightImageRequests,setter=_setHasMaximumNumberOfInflightImageRequests:) bool _hasMaximumNumberOfInflightImageRequests;
@property(getter=_isPreparingToRecord,setter=_setPreparingToRecord:) bool _preparingToRecord;
@property(getter=_isPostprocessing,setter=_setPostprocessing:) bool _postprocessing;
@property(getter=_isProcessingHDR,setter=_setProcessingHDR:) bool _processingHDR;
@property(getter=_isChangingModes,setter=_setChangingModes:) bool _changingModes;
@property(getter=_isFlipping,setter=_setFlipping:) bool _flipping;
@property(getter=_isPerformingFilterTransition,setter=_setPerformingFilterTransition:) bool _performingFilterTransition;
@property(getter=_isHidingBadgesForFilterUI,setter=_setHidingBadgesForFilterUI:) bool _hidingBadgesForFilterUI;
@property(getter=_isViewingCameraRoll,setter=_setViewingCameraRoll:) bool _viewingCameraRoll;
@property(getter=_isReviewingImagePickerCapture,setter=_setReviewingImagePickerCapture:) bool _reviewingImagePickerCapture;
@property(setter=_setBlurredFromSuspension:) bool _blurredFromSuspension;
@property(readonly) CAMBlurredSnapshotView * _suspensionSnapshotView;
@property(readonly) CAMBlurredSnapshotView * _captureSnapshotView;
@property(readonly) bool _switchingBetweenCameras;
@property(readonly) CAMBlurredSnapshotView * _currentDeviceFrontSnapshotView;
@property(readonly) CAMBlurredSnapshotView * _currentDeviceBackSnapshotView;
@property(readonly) CAMBlurredSnapshotView * _targetDeviceSnapshotView;
@property(getter=_isSwipeToModeSwitchEnabled,setter=_setSwipeToModeSwitchEnabled:) bool _swipeToModeSwitchEnabled;
@property(readonly) UISwipeGestureRecognizer * _nextModeGestureRecognizer;
@property(readonly) UISwipeGestureRecognizer * _previousModeGestureRecognizer;
@property(readonly) CAMBlurredSnapshotView * _modeSwitchingSnapshotView;
@property long long selectedModeIndex;
@property(setter=_setPendingModeIndex:) long long _pendingModeIndex;
@property(setter=_setDeferredModeIndex:) long long _deferredModeIndex;
@property(getter=_isProcessingModeChange,readonly) bool _processingModeChange;
@property(setter=_setAvalancheCaptureRecognized:) bool _avalancheCaptureRecognized;
@property(readonly) bool _avalancheCaptureInProgress;
@property(readonly) NSObject<OS_dispatch_source> * _avalancheCaptureTimer;
@property(readonly) NSObject<OS_dispatch_source> * _avalancheRecognitionTimer;
@property(readonly) bool _avalancheCaptureAsSoonAsPossible;
@property(getter=_isAvalancheIndicatorVisible,setter=_setAvalancheIndicatorVisible:) bool _avalancheIndicatorVisible;
@property(readonly) bool _ignoringSubsequentAvalancheCaptureRequests;
@property(readonly) bool _needToStartAvalancheSound;
@property long long _desiredNumberOfAvalancheCaptures;
@property(readonly) CAMAnimationDelegate * _delayedCaptureAnimationDelegate;
@property(readonly) NSObject<OS_dispatch_source> * _delayedCaptureTimer;
@property(readonly) long long _remainingDelayedCaptureTicks;
@property(setter=_setPerformingDelayedCapture:) bool _performingDelayedCapture;
@property(setter=_setCapturingAvalancheForDelayedCapture:) bool _capturingAvalancheForDelayedCapture;
@property(getter=_isDelayedCaptureIndicatorVisible,setter=_setDelayedCaptureIndicatorVisible:) bool _delayedCaptureIndicatorVisible;
@property(readonly) CAMTorchPatternController * _torchPatternController;
@property(readonly) NSDate * _lastDelayedCaptureIndicatorUpdateDate;
@property(readonly) NSDate * _lastAutoTimerCaptureDate;
@property(setter=_setHideFocusForFilterSelection:) bool _hideFocusForFilterSelection;
@property(setter=_setHideGridViewForFilterSelection:) bool _hideGridViewForFilterSelection;
@property(setter=_setNumFilterSelectionsBeforeCapture:) unsigned long long _numFilterSelectionsBeforeCapture;
@property(readonly) NSMutableSet * _filterNamesSelectedBeforeCapture;
@property(readonly) bool _shouldBlurWhenSessionStops;
@property(readonly) bool _shouldPausePreviewDuringCapture;
@property(readonly) bool _shouldStartPreviewWhenApplicationBecomesActive;
@property(readonly) bool _wantsSuspensionBlurs;
@property(readonly) bool _wantsFullScreenPreview;
@property(readonly) bool _wantsForcedPreviewAspectRatio;
@property(readonly) bool _wantsCaptureAnimations;
@property(readonly) bool _wantsOrientationAnimations;
@property(readonly) bool _wantsPreviewSizeAdjustmentForBars;
@property(readonly) bool _supportsPreviewingAfterCapture;
@property(getter=_isLockedToPortraitOrientation,readonly) bool _lockedToPortraitOrientation;
@property(setter=_setStopVideoCaptureWhenRecordingStarts:) bool _stopVideoCaptureWhenRecordingStarts;
@property(readonly) bool _panningExposureRect;
@property(readonly) struct CGPoint { double x1; double x2; } _lastFocusPanPoint;
@property(readonly) struct CGPoint { double x1; double x2; } _focusPanStartPoint;
@property(readonly) float _exposureBiasPanStartValue;
@property(readonly) bool _panningExposureBias;
@property(setter=_setExposureBiasVirtualSliderExponent:) double _exposureBiasVirtualSliderExponent;
@property(setter=_setExposureBiasVirtualSliderPointsForFirstStop:) double _exposureBiasVirtualSliderPointsForFirstStop;

+ (bool)requiresConstraintBasedLayout;

- (bool)_panningExposureBias;
- (float)_exposureBiasPanStartValue;
- (struct CGPoint { double x1; double x2; })_focusPanStartPoint;
- (struct CGPoint { double x1; double x2; })_lastFocusPanPoint;
- (bool)_panningExposureRect;
- (id)_lastAutoTimerCaptureDate;
- (id)_lastDelayedCaptureIndicatorUpdateDate;
- (id)_torchPatternController;
- (bool)_isDelayedCaptureIndicatorVisible;
- (id)_delayedCaptureTimer;
- (id)_delayedCaptureAnimationDelegate;
- (void)set_desiredNumberOfAvalancheCaptures:(long long)arg1;
- (long long)_desiredNumberOfAvalancheCaptures;
- (bool)_needToStartAvalancheSound;
- (bool)_ignoringSubsequentAvalancheCaptureRequests;
- (bool)_isAvalancheIndicatorVisible;
- (bool)_avalancheCaptureAsSoonAsPossible;
- (id)_avalancheRecognitionTimer;
- (id)_avalancheCaptureTimer;
- (bool)_avalancheCaptureInProgress;
- (void)setSelectedModeIndex:(long long)arg1;
- (id)_modeSwitchingSnapshotView;
- (id)_previousModeGestureRecognizer;
- (id)_nextModeGestureRecognizer;
- (id)_targetDeviceSnapshotView;
- (id)_currentDeviceBackSnapshotView;
- (id)_currentDeviceFrontSnapshotView;
- (bool)_switchingBetweenCameras;
- (id)_captureSnapshotView;
- (id)_suspensionSnapshotView;
- (id)_hardwareLockIndicator;
- (id)_slalomIndicator;
- (int)_windowEdgeClip;
- (id)_previewCounterRotatingView;
- (id)_previewMaskingView;
- (bool)_receivedInitialPreviewDidStartNotification;
- (bool)_HDRUsedForLastCapture;
- (bool)_capturingFromVolumeButtons;
- (long long)_numberOfInflightStillImageRequests;
- (double)_timeIntervalOfTouchDown;
- (bool)isUserInteractionLoggingEnabled;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })previewViewTransform;
- (bool)allowsMultipleModes;
- (void)_presentCameraRoll;
- (void)_capturedPhotoWithCaptureDictionary:(id)arg1 metadata:(id)arg2;
- (bool)_wantsPreviewSizeAdjustmentForBars;
- (bool)_wantsForcedPreviewAspectRatio;
- (bool)_isSwipeToModeSwitchEnabled;
- (void)_flipToBlurredPreviewWithCompletionBlock:(id)arg1;
- (void)_setHideGridViewForFilterSelection:(bool)arg1;
- (bool)_pointIsOnPanoControls:(struct CGPoint { double x1; double x2; })arg1;
- (void)_setHideFocusForFilterSelection:(bool)arg1;
- (void)_updateForFocusCapabilities;
- (void)hideZoomSlider;
- (void)_startZoomSliderTimer;
- (void)didPlayVideoRecordingSound;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_floatingShutterButtonFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_topBarFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_bottomBarFrame;
- (void)_updatePreviewWellImage:(id)arg1;
- (id)_timelapseStartTime;
- (void)viewWillBeRemoved;
- (void)captureController:(id)arg1 didOutputPanoramaCaptureParameters:(id)arg2;
- (void)captureControllerPanoramaConfigurationChanged:(id)arg1;
- (void)captureController:(id)arg1 didFinishPanoramaRequest:(id)arg2 withResponse:(id)arg3;
- (void)captureController:(id)arg1 didStartProcessingForPanoramaRequest:(id)arg2;
- (void)captureController:(id)arg1 didStopCapturingForPanoramaRequest:(id)arg2;
- (void)captureController:(id)arg1 didStartCapturingForPanoramaRequest:(id)arg2;
- (void)captureController:(id)arg1 didFinishRecordingForVideoRequest:(id)arg2 withResponse:(id)arg3;
- (void)captureController:(id)arg1 didStopRecordingForVideoRequest:(id)arg2;
- (void)captureController:(id)arg1 didStartRecordingForVideoRequest:(id)arg2;
- (void)cameraControllerDidChangeHDRSuggestion:(id)arg1;
- (void)cameraController:(id)arg1 didFinishTransitionToShowEffectsGrid:(bool)arg2;
- (void)cameraController:(id)arg1 didStartTransitionToShowEffectsGrid:(bool)arg2 animated:(bool)arg3;
- (void)cameraController:(id)arg1 willTransitionToShowEffectsGrid:(bool)arg2;
- (void)cameraControllerDidChangeEffectFilterIndex:(id)arg1;
- (void)cameraControllerTorchAvailabilityChanged:(id)arg1;
- (void)cameraControllerTorchActiveChanged:(id)arg1;
- (void)cameraControllerFlashWillFireChanged:(id)arg1;
- (void)cameraController:(id)arg1 videoZoomFactorDidChange:(double)arg2;
- (void)cameraController:(id)arg1 faceMetadataDidChange:(id)arg2;
- (void)cameraControllerDidChangeExposureTargetBias:(id)arg1;
- (void)cameraControllerDidChangeUserLockedExposure:(id)arg1;
- (void)cameraControllerDidChangeUserLockedFocus:(id)arg1;
- (void)cameraController:(id)arg1 willResetFocus:(bool)arg2 exposure:(bool)arg3;
- (void)cameraControllerExposureDidEnd:(id)arg1;
- (void)cameraControllerExposureDidStart:(id)arg1;
- (void)cameraControllerFocusDidEnd:(id)arg1;
- (void)cameraControllerFocusDidStart:(id)arg1;
- (void)cameraController:(id)arg1 didChangeCaptureAbility:(bool)arg2;
- (void)cameraController:(id)arg1 willChangeToMode:(long long)arg2 device:(long long)arg3;
- (void)cameraController:(id)arg1 cleanApertureDidChange:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)cameraControllerServerDied:(id)arg1;
- (void)cameraControllerSessionInterruptionEnded:(id)arg1;
- (void)cameraControllerSessionWasInterrupted:(id)arg1;
- (void)cameraControllerSessionDidStop:(id)arg1;
- (void)cameraControllerWillStopSession:(id)arg1;
- (void)cameraControllerWillStartPreview:(id)arg1;
- (void)cameraControllerDidSetupSession:(id)arg1;
- (void)didHideZoomSlider:(id)arg1;
- (void)didShowZoomSlider:(id)arg1;
- (void)zoomSliderDidEndAutozooming:(id)arg1;
- (void)zoomSliderDidBeginAutozooming:(id)arg1;
- (bool)topBarShouldHideTimerButton:(id)arg1;
- (bool)topBarShouldHideFlipButton:(id)arg1;
- (bool)topBarShouldHideElapsedTimeView:(id)arg1;
- (bool)topBarShouldHideHDRButton:(id)arg1;
- (bool)topBarShouldHideFlashButton:(id)arg1;
- (id)_flashButton;
- (void)_destroyAllControls;
- (void)setControlsAreVisible:(bool)arg1;
- (void)_updateModeSwitchingAvailability;
- (void)_updateFilterAggregateDictionaries;
- (struct __CFString { }*)_aggregateDictionaryKeyForFlashMode:(long long)arg1;
- (struct __CFString { }*)_aggregateDictionaryKeyForCameraMode:(long long)arg1 device:(long long)arg2;
- (bool)_isTouch:(id)arg1 withinView:(id)arg2 insets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (bool)_isTouchWithinRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 insets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2 referenceView:(id)arg3 gestureRecognizer:(id)arg4;
- (bool)_modeChangeSwipeMatchesExposureBiasPanDirection;
- (void)_updateForStartTransitionToShowFilterSelection:(bool)arg1 animated:(bool)arg2;
- (void)_rotateCameraControlsAndInterface;
- (bool)_wantsOrientationAnimations;
- (void)_updateBadgeOrientationWithDeviceOrientation:(long long)arg1;
- (long long)_glyphOrientationForCameraOrientation:(long long)arg1;
- (bool)_isLockedToPortraitOrientation;
- (void)_updateTopBarOrientationWithDeviceOrientation:(long long)arg1;
- (void)_updateTopBarStyleForDeviceOrientation:(long long)arg1;
- (long long)_deferredModeIndex;
- (long long)_pendingModeIndex;
- (long long)selectedModeIndex;
- (void)_setDeferredModeIndex:(long long)arg1;
- (bool)_processPendingModeChange;
- (void)_applyModeSwitchingBlurAnimated:(bool)arg1 withCompletionBlock:(id)arg2;
- (bool)_isProcessingModeChange;
- (void)_switchFromCameraModeAtIndex:(long long)arg1 toCameraModeAtIndex:(long long)arg2;
- (void)_setBadgesNeedInitialLayout;
- (bool)_isSwipeToModeSwitchAllowed;
- (void)_updateExposureBiasPanGestureRecognizersForOrientation:(long long)arg1;
- (void)_updateModeSwitchingGestureRecognizersForOrientation:(long long)arg1;
- (long long)_orientationForGestureRecognizers;
- (void)_setupAvalancheCaptureTimer;
- (bool)_isInstantBurstEnabled;
- (void)_setupAvalancheRecognitionTimer;
- (void)_teardownRecognitionTimer;
- (double)_avalancheInterval;
- (void)_teardownAvalancheCaptureTimer;
- (void)_setAvalancheIndicatorVisible:(bool)arg1;
- (void)_setupAvalancheTimerAndBeginCapturing;
- (void)_setAvalancheCaptureRecognized:(bool)arg1;
- (void)_setReviewingImagePickerCapture:(bool)arg1 updateUI:(bool)arg2;
- (id)_debugEnabledDescriptionForControl:(id)arg1 withReason:(id)arg2;
- (bool)_shouldEnableZoomSlider;
- (bool)_shouldEnableModeDial;
- (bool)_shouldEnableFilterButton;
- (bool)_shouldEnableImageWell;
- (bool)_shouldEnableFlipButton;
- (bool)_shouldEnableHDRButton;
- (bool)_shouldEnableFlashButton;
- (void)_updateEnabledControlsWithReason:(id)arg1 forceLog:(bool)arg2;
- (bool)_isWaitingForStillImageCaptureToComplete;
- (bool)_isProcessingHDR;
- (bool)_isFlipping;
- (bool)_isPostprocessing;
- (bool)_isViewingCameraRoll;
- (bool)_isCameraEnabled;
- (void)_setHidingBadgesForFilterUI:(bool)arg1;
- (bool)_shouldHideTimerButtonForMode:(long long)arg1;
- (bool)_shouldHideSlalomIndicatorForMode:(long long)arg1;
- (bool)_shouldHidePanoramaViewForMode:(long long)arg1;
- (bool)_shouldHideFilterButtonForMode:(long long)arg1;
- (bool)_shouldHideShutterButtonForMode:(long long)arg1;
- (bool)_shouldHideStillDuringVideoButtonForMode:(long long)arg1;
- (bool)_shouldHideImageWellForMode:(long long)arg1;
- (bool)_shouldHideModeDialForMode:(long long)arg1;
- (bool)_shouldHideElapsedTimeViewForMode:(long long)arg1;
- (bool)_shouldHideTopBarForMode:(long long)arg1;
- (long long)_bottomBarBackgroundStyleForMode:(long long)arg1;
- (long long)_topBarBackgroundStyleForMode:(long long)arg1;
- (bool)_isChangingModes;
- (bool)_hideGridViewForFilterSelection;
- (bool)_blurredFromSuspension;
- (bool)_isHidingBadgesForFilterUI;
- (void)_showControlsForReturningFromSuspensionAnimated:(bool)arg1;
- (void)_hideControlsForSuspensionAnimated:(bool)arg1;
- (void)_setBlurredFromSuspension:(bool)arg1;
- (id)_newSnapshotView;
- (void)_performCaptureBlink;
- (bool)_shouldHideGridView;
- (void)_setHideGridViewForFilterSelection:(bool)arg1 animated:(bool)arg2;
- (void)_updateGridVisibilityAnimated:(bool)arg1;
- (void)_snapshotView:(id)arg1 andLayoutForOrientation:(long long)arg2 leaveHidden:(bool)arg3 withBlock:(id)arg4;
- (float)_effectiveExposureBias;
- (bool)_canModifyExposureBias;
- (long long)_deviceOrientationForPreviewView;
- (int)_exposureBiasScheme;
- (bool)_shouldHideHardwareLockIndicatorForMode:(long long)arg1;
- (void)_layoutHardwareLockIndicatorForOrientation:(long long)arg1;
- (void)_createHardwareLockIndicatorIfNecessary;
- (bool)_shouldHideExposureBiasTextViewForMode:(long long)arg1;
- (long long)_numberOfTicksForTimerDuration:(long long)arg1;
- (void)_delayedCaptureDelegateFired:(id)arg1;
- (void)_avalancheRecognitionTimerFired;
- (bool)_capturingAvalancheForDelayedCapture;
- (bool)_shouldUseAvalancheForDelayedCapture;
- (bool)_shouldHideHDRButtonForMode:(long long)arg1;
- (bool)_shouldHideFlashButtonForMode:(long long)arg1;
- (bool)_shouldHideFlipButtonForMode:(long long)arg1;
- (void)_setCapturingAvalancheForDelayedCapture:(bool)arg1;
- (void)_teardownDelayedCaptureDelegate;
- (void)_setPerformingDelayedCapture:(bool)arg1;
- (void)_indicateDelayedCaptureProgressUsingTorch;
- (void)_startDelayedCaptureDelegate;
- (void)_setupDelayedCaptureDelegate;
- (long long)_remainingDelayedCaptureTicks;
- (long long)_currentTimerDuration;
- (void)_updateFromTimerDurationChange;
- (void)_layoutTopCenteredView:(id)arg1 forOrientation:(long long)arg2;
- (void)_layoutBottomCenteredView:(id)arg1 forOrientation:(long long)arg2;
- (void)_updateFlashBadge;
- (bool)_isHDRSuggested;
- (int)_HDRMode;
- (bool)_shouldHideHDRBadgeForMode:(long long)arg1;
- (void)_setHDRSuggested:(bool)arg1;
- (void)_updateHDRSuggested;
- (void)_updateHDRBadge;
- (bool)_shouldHideFlashBadgeForMode:(long long)arg1;
- (bool)_ignoringAutomaticBadgeUpdatesDuringCapture;
- (bool)_ignoringAutomaticBadgeUpdatesForAvalancheIndicator;
- (long long)_photoFlashMode;
- (void)_snapshotAndHideTopBarAnimated:(bool)arg1;
- (bool)_isPreparingToRecord;
- (bool)_allowsStillFromVideoModeWhenNotRecording;
- (bool)_allowsStillFromVideoMode;
- (void)_updateAllControlsWithContentSize:(id)arg1;
- (void)_createSlalomIndicatorIfNecessary;
- (void)_createElapsedTimeViewIfNecessary;
- (void)_createStillDuringVideoButtonIfNecessary;
- (void)_setDelayedCaptureIndicatorVisible:(bool)arg1;
- (void)_createTimerIndicatorIfNecessary;
- (void)_createTimerButtonIfNecessary;
- (void)_createAvalancheIndicatorIfNecessary;
- (void)_createHDRBadgeIfNecessary;
- (void)_createFlashBadgeIfNecessary;
- (void)_createFilterButtonIfNecessary;
- (void)_createHDRButtonIfNecessary;
- (void)_createTimelapseControlsIfNecessary;
- (void)_createPanoControlsIfNecessary;
- (void)_createVideoControlsIfNecessary;
- (void)_createSlalomControlsIfNecessary;
- (void)_createStillImageControlsIfNecessary;
- (void)_createFlipButtonIfNecessary;
- (void)_createFlashButtonIfNecessary;
- (void)_createShutterButtonIfNecessary;
- (void)_createImageWellIfNecessary;
- (void)_createModeDialIfNecessary;
- (void)_createBottomBarIfNecessary;
- (void)_createTopBarIfNecessary;
- (bool)_allowExposureBiasTextView;
- (void)timerButtonDidChangeDuration:(id)arg1;
- (void)_updateHardwareLockIndicatorStateAnimated:(bool)arg1;
- (void)hdrButtonDidChangeHDRMode:(id)arg1;
- (void)flashButtonDidChangeAvailability:(id)arg1;
- (void)flashButtonDidChangeFlashMode:(id)arg1;
- (void)_zoomSliderDidEndDragging:(id)arg1;
- (void)_zoomSliderValueDidChange:(id)arg1 forEvent:(id)arg2;
- (void)_filterButtonTapped:(id)arg1;
- (void)cameraShutterCancelled:(id)arg1;
- (void)_stillDuringVideoPressed:(id)arg1;
- (void)_imageWellTapped:(id)arg1;
- (void)modeDialWasTapped:(id)arg1;
- (id)_zoomSliderOffsetConstraintsForView:(id)arg1;
- (id)_constraintsForTimerIndicatorWithVerticalBottomBarForMode:(long long)arg1;
- (id)_constraintsForTimerIndicatorWithHorizontalBottomBarForMode:(long long)arg1;
- (id)_constraintsForAvalancheIndicatorWithVerticalBottomBarForMode:(long long)arg1;
- (id)_constraintsForAvalancheIndicatorWithHorizontalBottomBarForMode:(long long)arg1;
- (id)_constraintsForZoomSliderWithHorizontalBottomBar;
- (id)_constraintsForHorizontalBottomBar;
- (id)_constraintsForVerticalBottomBar;
- (id)_constraintsForGridViewWithMode:(long long)arg1;
- (id)_constraintsForLivePreviewMaskWithMode:(long long)arg1;
- (id)_constraintsForLivePreviewContainerWithMode:(long long)arg1;
- (id)_constraintsForLivePreviewWithMode:(long long)arg1;
- (id)_nonWidescreenSquareBottomMarginLayoutSpacer;
- (double)_interpolatedTopBarHeight;
- (bool)_previewShouldFillScreenForCameraMode:(long long)arg1;
- (void)setPreviewViewTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)_updateGestureRecognizersForOrientation;
- (void)_handleExposureBiasPan:(id)arg1;
- (void)swipedToNextCameraMode;
- (void)swipedToPreviousCameraMode;
- (void)_handleFocusRectPan:(id)arg1;
- (bool)_allowFocusRectPanning;
- (void)_handleOverlayViewLongPress:(id)arg1;
- (void)_handlePreviewPinchGestureRecognizer:(id)arg1;
- (void)_handleOverlayViewSingleTap:(id)arg1;
- (void)_handleOverlayViewDoubleTap:(id)arg1;
- (id)currentContentSize;
- (bool)_showExposureBiasSliderOnChange;
- (void)verifyViewOrdering;
- (void)_invalidateConstraintsForMaskingChange;
- (bool)_wantsFullScreenPreview;
- (bool)_isTallScreenDevice;
- (double)_exposureBiasVirtualSliderExponent;
- (double)_exposureBiasVirtualSliderPointsForFirstStop;
- (void)_setExposureBiasVirtualSliderPointsForFirstStop:(double)arg1;
- (void)_setExposureBiasVirtualSliderExponent:(double)arg1;
- (int)_exposureBiasSide;
- (double)_exposureBiasForVirtualSliderPosition:(double)arg1;
- (double)_virtualSliderPositionForExposureBias:(double)arg1;
- (double)_effectiveExposureBiasMovementForTranslation:(struct CGPoint { double x1; double x2; })arg1;
- (void)_createExposureBiasTextViewIfNecessary;
- (void)_endPanFocus:(bool)arg1 exposure:(bool)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3;
- (bool)_panFocus:(bool)arg1 exposure:(bool)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3;
- (void)_aeafLockTimerDidFire;
- (bool)_canLockFocusOrExposure;
- (void)_clearAEAFLockTimer;
- (void)_togglePreviewViewAspectMode;
- (bool)_pointIsWithinOverlayView:(struct CGPoint { double x1; double x2; })arg1;
- (void)_finishCommonTapGesture;
- (void)_focusAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_previewView:(id)arg1 shouldFocusAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)_unlockFocus:(bool)arg1 andExposure:(bool)arg2 forFocusAttachment:(bool)arg3;
- (bool)_shouldShowFocusAttachmentAsLocked;
- (void)_setSplitFocusAndExposure:(bool)arg1;
- (bool)_isTouchWithinView:(id)arg1 forGestureRecognizer:(id)arg2 insets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (bool)_handleFocusTap:(id)arg1;
- (bool)_handleExposureBiasTextViewTap:(id)arg1;
- (bool)_handleDismissFocusTap:(id)arg1;
- (bool)_handleLockFocusAttachmentTap:(id)arg1;
- (bool)_handleSplitFocusAndExposureTap:(id)arg1;
- (bool)_handleEffectsGridTap:(id)arg1;
- (bool)_pointIsWithinOverlayView:(struct CGPoint { double x1; double x2; })arg1 hitView:(id*)arg2;
- (void)_updateVideoPreviewViewVideoGravity;
- (void)_lockFocus:(bool)arg1 andExposure:(bool)arg2 initiatedByUser:(bool)arg3;
- (void)_updateDelayedCaptureIndicatorWithFace:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })aspectFaceRectFromSquareFaceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 angle:(double)arg2;
- (void)_updateExposureBiasViews;
- (void)_startFaceFadeOutTimerWithTimeInterval:(double)arg1;
- (void)_updatePreviewForFocusDidEnd;
- (void)_captureAvalancheStillImage;
- (void)_expectedFocusOrExposureOperationDidEnd;
- (void)_showContinuousAEAFView;
- (void)_updateFocusViewHiddenStateAnimated:(bool)arg1;
- (void)_setHideFocusForFilterSelection:(bool)arg1 animated:(bool)arg2;
- (bool)_hideFocusForFilterSelection;
- (bool)_shouldResetFocusAndExposureWhenSubjectAreaChanged;
- (bool)_shouldResetExposureWhenSubjectAreaChanged;
- (bool)_shouldResetFocusWhenSubjectAreaChanged;
- (bool)_longPressTapIsDown;
- (void)_resetExposureBias;
- (bool)_isValidFocusOrExposurePoint:(struct CGPoint { double x1; double x2; })arg1 outAdjustedPoint:(struct CGPoint { double x1; double x2; }*)arg2;
- (bool)_shouldShowFocus;
- (void)_startFocus:(bool)arg1 andExposure:(bool)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3 startFocusAnimation:(bool)arg4;
- (struct CGPoint { double x1; double x2; })convertToPointOfInterestFromViewCoordinates:(struct CGPoint { double x1; double x2; })arg1 pointIsInsideContent:(bool*)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_unzoomedPreviewFrame;
- (bool)_canLockExposure;
- (bool)_canLockFocus;
- (bool)_canAutoExposeAtPoint;
- (bool)_canAutoFocusAtPoint;
- (int)_exposureModeForTapToFocus;
- (int)_focusModeForTapToFocus;
- (void)_setCameraEnabled:(bool)arg1;
- (void)cameraControllerSessionDidStart:(id)arg1;
- (void)cameraControllerPreviewDidStart:(id)arg1;
- (void)cameraControllerModeDidChange:(id)arg1;
- (void)_setupBadgeConstraintsWithVisibleZoomSliderForMode:(long long)arg1;
- (void)_setBadgesNeedLayoutForZoomSliderAnimation;
- (void)_updateFocusAfterZoom;
- (void)_pinchZoomWithScale:(double)arg1;
- (void)showZoomSlider;
- (void)_setZoomFactor:(double)arg1;
- (void)_createZoomSliderIfNecessary;
- (bool)_zoomIsAllowed;
- (bool)_isReviewingImagePickerCapture;
- (bool)_isPerformingFilterTransition;
- (void)_reallyToggleCamera;
- (void)_toggleCameraButtonWasPressed:(id)arg1;
- (void)_setHDRMode:(int)arg1;
- (void)_showTorchDisabledAlert;
- (void)_updateFilterButtonOnState;
- (void)_resetInflightImageRequests;
- (long long)_shutterButtonModeForCameraMode:(long long)arg1 isCapturing:(bool)arg2;
- (void)_updateMaskingViewForCameraMode:(long long)arg1 animated:(bool)arg2;
- (void)_removeModeSwitchingBlurAnimated:(bool)arg1 withCompletionBlock:(id)arg2;
- (void)_createOrDestroyPanoramaViewIfNecessary;
- (void)_applyTopBarRotationForDeviceOrientation:(long long)arg1;
- (long long)_deviceOrientationForUI;
- (bool)_processDeferredModeChange;
- (void)_setPendingModeIndex:(long long)arg1;
- (void)_stopTimelapse;
- (void)_startTimelapse;
- (bool)_isCapturingTimelapse;
- (void)_finishAvalancheCapture;
- (void)_stopDelayedCapture;
- (void)_startDelayedCapture;
- (void)_startCapturingPanorama;
- (void)_stopCapturingPanorama;
- (void)_fadeOutFaceRects;
- (void)_showControlsForCapturingVideoAnimated:(bool)arg1;
- (void)_startAvalancheCapture;
- (bool)_performingDelayedCapture;
- (bool)_shouldStartDelayedCapture;
- (void)_collapseExpandedButtonsAnimated:(bool)arg1;
- (void)_performVideoCapture;
- (void)_setNumFilterSelectionsBeforeCapture:(unsigned long long)arg1;
- (void)_resetAggregateInfoForPhotoFilters;
- (id)_filterNamesSelectedBeforeCapture;
- (unsigned long long)_numFilterSelectionsBeforeCapture;
- (void)_updateImageWellFromTimelapseThumbnailImage:(id)arg1;
- (void)_hideControlsForCapturingTimelapseAnimated:(bool)arg1;
- (void)_showControlsForCapturingTimelapseAnimated:(bool)arg1;
- (void)_updatePanoramaImageQueue;
- (void)_showControlsForChangeToMode:(long long)arg1 animated:(bool)arg2;
- (void)_hideControlsForCapturingPanoramaAnimated:(bool)arg1;
- (void)_capturePanorama;
- (void)_showControlsForCapturingPanoramaAnimated:(bool)arg1;
- (void)_hideControlsForChangeToMode:(long long)arg1 animated:(bool)arg2;
- (id)_panoramaCaptureRequestWithCurrentSettings;
- (void)_hideControlsForCapturingVideoAnimated:(bool)arg1;
- (void)_removeVideoCaptureControls;
- (void)performPostcapturePreviewForVideoAtPath:(id)arg1;
- (bool)_supportsPreviewingAfterCapture;
- (bool)_shouldPausePreviewDuringCapture;
- (void)_postCaptureCleanup;
- (void)_cleanupPostVideoCaptureState;
- (bool)_stopVideoCaptureWhenRecordingStarts;
- (void)_showVideoCaptureControls;
- (void)_captureStillImage;
- (id)_videoCaptureRequestWithCurrentSettings;
- (long long)_currentFlashMode;
- (bool)_useHDR;
- (void)_updateCaptureAggregateDictionaries;
- (void)_avalancheCaptureTimerFired;
- (void)_decrementInflightImageRequests;
- (bool)_avalancheCaptureRecognized;
- (bool)_wantsCaptureAnimations;
- (void)_incrementInflightImageRequests;
- (int)_getCaptureOrientation;
- (id)_avalancheCaptureRequest;
- (void)_captureStillImageWithRequest:(id)arg1;
- (id)_stillImageCaptureRequestWithCurrentSettings;
- (void)_handleVolumeUpEvents:(unsigned long long)arg1;
- (bool)_shouldEnableShutterButton;
- (void)cameraShutterPressed:(id)arg1;
- (bool)controlsAreVisible;
- (void)_setHasMaximumNumberOfInflightImageRequests:(bool)arg1;
- (bool)_hasMaximumNumberOfInflightImageRequests;
- (bool)_shouldStartPreviewWhenApplicationBecomesActive;
- (void)_showDiskSpaceWarning;
- (void)_enableNextCapture;
- (void)_setIgnoringAutomaticBadgeUpdatesDuringCapture:(bool)arg1;
- (void)_setIgnoringAutomaticBadgeUpdatesForAvalancheIndicator:(bool)arg1;
- (void)_setPerformingFilterTransition:(bool)arg1;
- (void)_setChangingModes:(bool)arg1;
- (void)_setProcessingHDR:(bool)arg1;
- (void)_setPostprocessing:(bool)arg1;
- (void)_setStopVideoCaptureWhenRecordingStarts:(bool)arg1;
- (void)_setPreparingToRecord:(bool)arg1;
- (void)_setWaitingForStillImageCaptureToComplete:(bool)arg1;
- (void)_blurForSuspensionWithCompletionBlock:(id)arg1;
- (bool)_shouldBlurWhenSessionStops;
- (void)_clearFocusViews;
- (void)_updateEnabledControlsWithReason:(id)arg1;
- (void)_updateFlashModeIfNecessary;
- (void)_fadeAndUnblurPreviewWithCompletionBlock:(id)arg1;
- (void)_setFlipping:(bool)arg1;
- (void)_setupTargetDeviceSnapshotView;
- (void)_cleanupAfterZPositionAnimations;
- (void)_updateHardwareLockIndicatorVisibility;
- (void)_setShouldShowFocus:(bool)arg1;
- (void)_unblurForSuspensionWithCompletionBlock:(id)arg1;
- (void)_setViewingCameraRoll:(bool)arg1;
- (void)_resetZoom;
- (void)_updatePreviewContentSizeWithCleanAperture:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_attachVideoPreviewToEffectsRenderer;
- (void)_updateToggleAspectModeAbility;
- (void)_setPreviewViewAspectMode:(int)arg1;
- (bool)_isPreviewViewAspectModeAllowed:(int)arg1;
- (void)_setPreviewPaused:(bool)arg1;
- (void)resumePreview;
- (void)pausePreview;
- (void)_startPreview:(id)arg1;
- (bool)_badgesNeedLayoutForZoomSliderAnimation;
- (void)_layoutExposureBiasTextViewForOrientation:(long long)arg1;
- (void)_layoutFlashBadgeForOrientation:(long long)arg1;
- (void)_layoutHDRBadgeForOrientation:(long long)arg1;
- (bool)_readyToLayoutBadge:(id)arg1;
- (bool)_initialLayoutNeededForBadge:(id)arg1;
- (void)_layoutTopBarForOrientation:(long long)arg1;
- (bool)_shouldApplyRotationDirectlyToTopBarForOrientation:(long long)arg1 cameraMode:(long long)arg2;
- (void)_setupZoomSliderConstraints;
- (void)_setupBottomBarConstraints;
- (void)_updateConstraintsForMode:(long long)arg1;
- (void)_setupTimerIndicatorConstraintsForMode:(long long)arg1;
- (id)_timerIndicator;
- (void)_setupAvalancheIndicatorConstraintsForMode:(long long)arg1;
- (void)_setupLivePreviewGridConstraintsForMode:(long long)arg1;
- (void)_setupLivePreviewHierarchyConstraintsForMode:(long long)arg1;
- (id)_viewWhichOwnsLivePreviewConstraints;
- (id)_exposureBiasTextView;
- (id)_avalancheIndicator;
- (id)_flashBadge;
- (id)_HDRBadge;
- (id)_zoomSlider;
- (id)_bottomBar;
- (id)_topBar;
- (void)disableCamera;
- (bool)_wantsSuspensionBlurs;
- (void)_setupPreviewLayer;
- (void)_setupPreviewView;
- (void)_ensureLivePreviewHierarchyIsValid;
- (void)_setSwipeToModeSwitchEnabled:(bool)arg1;
- (void)_setupSuspensionSnapshotViewWithBlur:(bool)arg1;
- (void)_resetDiskSpaceWarning;
- (void)_clearFaceFadeOutTimer;
- (void)_cancelZoomSliderTimer;
- (void)enableCamera;
- (void)setImagePickerWantsVolumeButtonEvents:(bool)arg1;
- (void)_initializeExposureBiasSliderParameters;
- (void)_updateFlashAndHDR;
- (void)_registerForSystemSound;
- (void)_resetFaceTracking;
- (void)_createControlsForCurrentModeIfNecessary;
- (void)_createDefaultControlsIfNecessary;
- (void)_createLivePreviewHierarchyIfNecessary;
- (void)_timelapseControllerDidChangeCapturingNotification:(id)arg1;
- (void)_applicationPreferredContentSizeChanged:(id)arg1;
- (void)_beginSuspendAnimation:(id)arg1;
- (void)_applicationDidEnterBackground;
- (void)_cameraOrientationChanged:(id)arg1;
- (void)_applicationDidResignActive:(id)arg1;
- (void)_simpleRemoteActionDidOccur:(id)arg1;
- (void)_checkDiskSpaceAfterCapture;
- (void)_inCallStatusChanged:(id)arg1;
- (void)panoramaView:(id)arg1 didChangeDirection:(int)arg2;
- (void)captureController:(id)arg1 didCompleteResponse:(id)arg2 forStillImageRequest:(id)arg3 error:(id)arg4;
- (void)captureController:(id)arg1 didGenerateResponse:(id)arg2 forStillImageRequest:(id)arg3 error:(id)arg4;
- (void)captureController:(id)arg1 didCaptureStillImageForRequest:(id)arg2;
- (void)captureController:(id)arg1 willCaptureStillImageForRequest:(id)arg2;
- (double)timeIntervalForDuration:(long long)arg1;
- (void)_performCaptureAnimation;
- (bool)_isCapturing;
- (void)_setCapturing:(bool)arg1;
- (id)modeDial:(id)arg1 titleForItemAtIndex:(unsigned long long)arg2;
- (long long)numberOfItemsInModeDial:(id)arg1;
- (id)_timerButton;
- (id)_HDRButton;
- (id)_elapsedTimeView;
- (id)_flipButton;
- (id)_filterButton;
- (id)_shutterButton;
- (id)_stillDuringVideoButton;
- (id)_imageWell;
- (id)_modeDial;
- (bool)bottomBarShouldHideFlipButton:(id)arg1;
- (bool)bottomBarShouldHideTimerButton:(id)arg1;
- (bool)bottomBarShouldHideHDRButton:(id)arg1;
- (bool)bottomBarShouldHideElapsedTimeView:(id)arg1;
- (id)videoPreviewView;
- (void)setUserInteractionLoggingEnabled:(bool)arg1;
- (void)resetImageWellForFinishedSessionAlbum;
- (void)_setupPanoUI;
- (void)_diskSpaceDidChange;
- (void)updateImageWellImage:(id)arg1 uuid:(id)arg2 animated:(bool)arg3;
- (bool)hasInFlightCaptures;
- (bool)isGridVisible;
- (int)lastSelectedHDRMode;
- (int)previewViewAspectMode;
- (long long)timerDuration;
- (long long)cameraMode;
- (long long)videoFlashMode;
- (long long)lastSelectedPhotoFlashMode;
- (bool)userChangedHDRAfterFlash;
- (bool)_didEverMoveToWindow;
- (void)setGridVisible:(bool)arg1;
- (void)setTimerDuration:(long long)arg1;
- (void)setPreviewViewAspectMode:(int)arg1;
- (void)setCameraMode:(long long)arg1;
- (void)setCameraMode:(long long)arg1 device:(long long)arg2;
- (void)setVideoFlashMode:(long long)arg1;
- (void)setLastSelectedPhotoFlashMode:(long long)arg1;
- (void)setUserChangedHDRAfterFlash:(bool)arg1;
- (void)stopPreviewAnimated:(bool)arg1;
- (void)startPreview:(id)arg1;
- (bool)cameraShutterReleased:(id)arg1;
- (bool)isCameraReady;
- (void)_pptTestSetAutofocusDisabled:(bool)arg1;
- (void)setLastSelectedHDRMode:(int)arg1;
- (void)_teardownPanoUI;
- (void)animateBlurForSuspension;
- (void)transitionToSize:(struct CGSize { double x1; double x2; })arg1 withCoordinator:(id)arg2;
- (void)clearImageWellForNewSessionAlbum;
- (void)viewWillBeDisplayed;
- (void)setRotationStyle:(int)arg1;
- (int)rotationStyle;
- (id)spec;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 spec:(id)arg2;
- (void)_handleVolumeButtonUp;
- (void)_handleVolumeButtonDown;
- (bool)_shouldHideZoomSliderForMode:(long long)arg1;
- (void)_setReviewingImagePickerCapture:(bool)arg1;
- (void)_removeVideoCaptureFileAtPath:(id)arg1;
- (id)previewContainerView;
- (id)captureController;
- (void)_setAllowsStillFromVideoModeWhenNotRecording:(bool)arg1;
- (void)setAllowsMultipleModes:(bool)arg1;
- (void)embedControlsIntoNavigationItem:(id)arg1 animated:(bool)arg2;
- (void)startPreview;
- (void)stopPreview;
- (id)previewView;
- (void)viewDidAppear;
- (id)overlayView;
- (void)_applicationSuspended:(id)arg1;
- (void)_deviceOrientationChanged:(id)arg1;
- (void)_setFlashMode:(long long)arg1;
- (void)setFlashMode:(long long)arg1;
- (long long)flashMode;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (void).cxx_destruct;
- (void)_windowDidRotate:(id)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)setCameraDevice:(long long)arg1;
- (long long)cameraDevice;
- (void)stopVideoCapture;
- (bool)startVideoCapture;
- (void)takePicture;
- (void)updateConstraints;
- (id)_scriptingInfo;
- (void)didMoveToSuperview;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)prepareForDefaultImageSnapshot;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;

@end
