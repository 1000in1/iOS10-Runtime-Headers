/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CameraKit.framework/CameraKit
 */

@interface CAMCameraSpec : NSObject  {
}

@property(readonly) long long bottomBarOrientation;
@property(readonly) long long modeDialOrientation;
@property(readonly) bool shouldCreateBottomBar;
@property(readonly) bool shouldCreateTopBar;
@property(readonly) bool shouldCreateFlashButton;
@property(readonly) bool shouldCreateElapsedTimeView;
@property(readonly) bool shouldCreateFlipButton;
@property(readonly) bool shouldCreateStillDuringVideo;
@property(readonly) bool shouldCreateImageWell;
@property(readonly) bool shouldCreateShutterButton;
@property(readonly) bool shouldCreateFiltersButton;
@property(readonly) bool shouldCreateModeDial;
@property(readonly) bool shouldCreateHDRButton;
@property(readonly) bool shouldCreatePanoramaView;
@property(readonly) bool shouldCreateZoomSlider;
@property(readonly) bool shouldCreateAvalancheIndicator;
@property(readonly) bool shouldCreateSlalomIndicator;
@property(readonly) bool shouldCreateTimerButton;

+ (id)specForPad;
+ (id)specForPhone;
+ (id)specForCurrentPlatform;

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })initialFrameForOrientation:(long long)arg1;
- (bool)isPhone;
- (bool)shouldCreateSlalomIndicator;
- (bool)shouldCreateTimerButton;
- (bool)shouldCreateAvalancheIndicator;
- (bool)isCameraApp;
- (bool)shouldCreateZoomSlider;
- (bool)shouldCreatePanoramaView;
- (bool)shouldCreateHDRButton;
- (bool)shouldCreateModeDial;
- (bool)shouldCreateFiltersButton;
- (bool)shouldCreateShutterButton;
- (bool)shouldCreateImageWell;
- (bool)shouldCreateStillDuringVideo;
- (bool)shouldCreateFlipButton;
- (bool)shouldCreateElapsedTimeView;
- (bool)shouldCreateFlashButton;
- (bool)shouldCreateTopBar;
- (bool)shouldCreateBottomBar;
- (long long)modeDialOrientation;
- (long long)bottomBarOrientation;
- (int)rotationStyle;
- (bool)isPad;

@end
