/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI
 */

@class NSString, AVURLAsset, AVPlayerItem, SUPlayerStatus, NSMutableDictionary, NSURL, AVPlayer;

@interface SUAudioPlayer : NSObject <AVAssetResourceLoaderDelegate> {
    AVURLAsset *_asset;
    NSURL *_certificateUrl;
    bool_didPostForPreviewHistory;
    NSURL *_keyUrl;
    NSMutableDictionary *_nowPlayingInfo;
    AVPlayer *_player;
    AVPlayerItem *_playerItem;
    long long _storeItemIdentifier;
    SUPlayerStatus *_status;
    id _timeObserver;
    NSURL *_url;
}

@property(readonly) NSURL * URL;
@property(retain) NSURL * certificateURL;
@property(retain) NSURL * keyURL;
@property(readonly) SUPlayerStatus * playerStatus;
@property long long storeItemIdentifier;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;


- (id)valueForNowPlayingKey:(id)arg1;
- (void)setValue:(id)arg1 forNowPlayingKey:(id)arg2;
- (void)_postStatusChangeNotification;
- (void)_itemPlayedToEndNotification:(id)arg1;
- (id)_newFadeInAudioMixForAsset:(id)arg1;
- (void)_updateForPeriodicTickWithTime:(double)arg1;
- (void)_applyNowPlayingInfo;
- (void)_setPlayerState:(long long)arg1;
- (void)_handleAssetValuesDidLoad;
- (void)_destroyPlayerItem;
- (void)_destroyPlayer;
- (void)setKeyURL:(id)arg1;
- (id)keyURL;
- (void)setCertificateURL:(id)arg1;
- (id)playerStatus;
- (void)setStoreItemIdentifier:(long long)arg1;
- (long long)storeItemIdentifier;
- (id)certificateURL;
- (void)_failWithError:(id)arg1;
- (void)_itemFailedToPlayToEndNotification:(id)arg1;
- (void)play;
- (bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (void)seekToTime:(double)arg1;
- (void)pause;
- (id)initWithURL:(id)arg1;
- (id)URL;
- (void)dealloc;
- (void)stop;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;

@end
