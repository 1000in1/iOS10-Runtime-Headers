/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSString, GEOVectorTile, UIView;

@interface VKLabelMarker : NSObject <MKCalloutSource> {
    struct shared_ptr<vk::LabelManager> { 
        struct LabelManager {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    } _manager;
    struct shared_ptr<vk::InfoLabel> { 
        struct InfoLabel {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    } _label;
    float _contentScale;
    unsigned long long _featureID;
    int _featureType;
    struct _retain_ptr<GEOVectorTile *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { 
        int (**_vptr$_retain_ptr)(); 
        GEOVectorTile *_obj; 
        struct _retain_objc { } _retain; 
        struct _release_objc { } _release; 
    } _featureTile;
    NSString *_subtitle;
}

@property(retain) UIView * leftCalloutAccessoryView;
@property(retain) UIView * rightCalloutAccessoryView;
@property(retain) UIView * detailCalloutAccessoryView;
@property(copy,readonly) NSString * subtitle;
@property(copy) NSString * subtitle;


- (bool)shouldActivateFeatureSelectionMode;
- (void)setLabelSelected:(bool)arg1;
- (id)incident;
- (id)featureTile;
- (unsigned long long)featureID;
- (bool)isFlyoverTour;
- (bool)isTrafficIncident;
- (bool)isOneWayArrow;
- (id)iconName;
- (struct shared_ptr<vk::InfoLabel> { struct InfoLabel {} *x1; struct __shared_weak_count {} *x2; })infoLabel;
- (id)initWithManager:(const struct shared_ptr<vk::LabelManager> { struct LabelManager {} *x1; struct __shared_weak_count {} *x2; }*)arg1 infoLabel:(const struct shared_ptr<vk::InfoLabel> { struct InfoLabel {} *x1; struct __shared_weak_count {} *x2; }*)arg2 contentScale:(float)arg3 featureInfo:(const struct LabelFeatureInfo { unsigned long long x1; unsigned char x2; struct _retain_ptr<GEOVectorTile *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x_3_1_1)(); id x_3_1_2; struct _retain_objc { } x_3_1_3; struct _release_objc { } x_3_1_4; } x3; }*)arg4;
- (unsigned long long)animationID;
- (int)featureType;
- (id)debugAnchorPointString;
- (struct CGPoint { double x1; double x2; })screenPointToScrollRelativeToWithCanvasSize:(struct CGSize { double x1; double x2; })arg1 canvasScale:(double)arg2;
- (struct CGPoint { double x1; double x2; })calloutAnchorPointWithCanvasSize:(struct CGSize { double x1; double x2; })arg1 canvasScale:(double)arg2 snapToPixels:(bool)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })calloutAnchorRect;
- (int)selectionType;
- (unsigned long long)businessID;
- (bool)hasBusinessID;
- (id)featureHandles;
- (id)mapRegion;
- (struct { double x1; double x2; })coordinate;
- (id)title;
- (void)dealloc;
- (void).cxx_destruct;
- (id).cxx_construct;
- (bool)isSelectable;
- (struct { double x1; double x2; double x3; double x4; })_bounds;
- (void)setSubtitle:(id)arg1;
- (id)subtitle;
- (id)detailCalloutAccessoryView;
- (void)setDetailCalloutAccessoryView:(id)arg1;
- (id)rightCalloutAccessoryView;
- (void)setRightCalloutAccessoryView:(id)arg1;
- (id)leftCalloutAccessoryView;
- (void)setLeftCalloutAccessoryView:(id)arg1;

@end
