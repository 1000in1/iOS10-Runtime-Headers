/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKMercatorTerrainHeightCache : NSObject {
    struct map<md::Anchor *, float, std::__1::less<md::Anchor *>, std::__1::allocator<std::__1::pair<md::Anchor *const, float> > > { 
        struct __tree<std::__1::__value_type<md::Anchor *, float>, std::__1::__map_value_compare<md::Anchor *, std::__1::__value_type<md::Anchor *, float>, std::__1::less<md::Anchor *>, true>, std::__1::allocator<std::__1::__value_type<md::Anchor *, float> > > { 
            struct __tree_node<std::__1::__value_type<md::Anchor *, float>, void *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<md::Anchor *, float>, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<md::Anchor *, std::__1::__value_type<md::Anchor *, float>, std::__1::less<md::Anchor *>, true> > { 
                unsigned long long __first_; 
            } __pair3_; 
        } __tree_; 
    }  _anchorToHeight;
    <VKMercatorTerrainHeightProvider> * _heightProvider;
}

@property (nonatomic) <VKMercatorTerrainHeightProvider> *heightProvider;

- (id).cxx_construct;
- (void).cxx_destruct;
- (double)heightForAnchor:(struct Anchor { int (**x1)(); struct Mercator3<double> { double x_2_1_1[3]; } x2; struct Coordinate2D<Degrees, double> { struct Unit<DegreeUnitDescription, double> { double x_1_2_1; } x_3_1_1; struct Unit<DegreeUnitDescription, double> { double x_2_2_1; } x_3_1_2; } x3; id x4; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; union x21; void*x22; void*x23; void*x24; void*x25; void*x26; struct  int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12;  {} x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; id x40; void*x41; void*x42; const void*x43; out void*x44; void*x45; void*x46; void*x47; void*x48; const void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; union x56; void*x57; in void*x58; out void*x59; in void*x60; void*x61; void*x62; void*x63; void*x64; out void*x65; void*x66; void*x67; int x68; void*x69; BOOL x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; oneway void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; const void*x85; BOOL x86; void*x87; void*x88; void*x89; void*x90; void*x91; out void*x92; const void*x93; void*x94; void*x95; void*x96; void*x97; const void*x98; const void*x99; void*x100; void*x101; int x102; void*x103; in void*x104; void*x105; void*x106; void*x107; void*x108; int x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; const void*x119; out void*x120; void x121; void*x122; int x123; void*x124; double x125; void*x126; void*x127; void*x128; const void*x129; void*x130; void*x131; void*x132; void*x133; char *x134; void*x135; void*x136; void*x137; void*x138; void*x139; int x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; const void*x150; out void*x151; void x152; void*x153; int x154; void*x155; double x156; void*x157; void*x158; void*x159; const void*x160; void*x161; void*x162; const void*x163; double x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; BOOL x171; out void*x172; in void*x173; void*x174; struct  {} x175; void*x176; char *x177; void*x178; void*x179; void*x180; void*x181; }*)arg1;
- (id)heightProvider;
- (void)invalidateRect:(const struct Box<double, 2> { struct Matrix<double, 2, 1> { double x_1_1_1[2]; } x1; struct Matrix<double, 2, 1> { double x_2_1_1[2]; } x2; }*)arg1;
- (void)removeCachedValueForAnchor:(struct Anchor { int (**x1)(); struct Mercator3<double> { double x_2_1_1[3]; } x2; struct Coordinate2D<Degrees, double> { struct Unit<DegreeUnitDescription, double> { double x_1_2_1; } x_3_1_1; struct Unit<DegreeUnitDescription, double> { double x_2_2_1; } x_3_1_2; } x3; id x4; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; union x21; void*x22; void*x23; void*x24; short x25; void*x26; short x27; void*x28; void*x29; void*x30; double x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; int x39; void*x40; const void*x41; void*x42; void*x43; float x44; void*x45; long x46; void*x47; out void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; short x57; void*x58; void*x59; void*x60; double x61; void*x62; SEL x63; void*x64; SEL x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; SEL x73; void*x74; SEL x75; void*x76; void*x77; void*x78; long long x79; void*x80; void*x81; void*x82; void*x83; void*x84; long x85; void*x86; void*x87; void*x88; void*x89; void*x90; out void*x91; void*x92; void*x93; void*x94; void*x95; in void*x96; short x97; void*x98; int x99; void*x100; void*x101; void*x102; in void*x103; void*x104; void*x105; double x106; void*x107; void*x108; void*x109; long x110; void*x111; out void*x112; in void*x113; void*x114; void*x115; void*x116; void*x117; long x118; void*x119; out void*x120; in void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; struct x132; void*x133; void*x134; void*x135; float x136; void*x137; long x138; void*x139; out void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; }*)arg1;
- (void)setHeightProvider:(id)arg1;

@end
