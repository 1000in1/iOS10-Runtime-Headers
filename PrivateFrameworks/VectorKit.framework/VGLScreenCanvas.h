/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@class VGLLayer, VGLContext, VGLFramebuffer;

@interface VGLScreenCanvas : CALayer <VGLCanvas> {
    VGLContext *_targetContext;
    int _canvasWidth;
    int _canvasHeight;
    BOOL _useDepthBuffer;
    BOOL _useStencilBuffer;
    BOOL _useMultisampling;
    BOOL _requiresMultisampling;
    struct _VGLColor { 
        float r; 
        float g; 
        float b; 
        float a; 
    } _glClearColor;
    struct CGContext { } *_snapshotContext;
    BOOL _forceRecreateFramebuffer;
    BOOL _forceRecreateFramebufferAndKeepMultisampleFramebuffer;
    VGLFramebuffer *_targetBuffer;
    float _contentScale;
    VGLLayer *_glLayer;
    BOOL _isInBackground;
}

@property BOOL useDepthBuffer;
@property BOOL useStencilBuffer;
@property BOOL useMultisampling;
@property struct _VGLColor { float x1; float x2; float x3; float x4; } glClearColor;
@property(readonly) BOOL currentSceneRequiresMSAA;
@property(getter=isDrawable,readonly) BOOL drawable;
@property(readonly) VGLLayer * glLayer;
@property float contentScale;
@property(readonly) struct CGSize { float x1; float x2; } size;
@property(readonly) struct CGSize { float x1; float x2; } sizeInPixels;
@property(readonly) VGLContext * vglContext;

+ (Class)contextClass;

- (id)glLayer;
- (struct _VGLColor { float x1; float x2; float x3; float x4; })glClearColor;
- (void)setUseStencilBuffer:(BOOL)arg1;
- (BOOL)useStencilBuffer;
- (void)setUseDepthBuffer:(BOOL)arg1;
- (BOOL)useDepthBuffer;
- (BOOL)useMultisampling;
- (void)preloadResources;
- (void)didEnterBackground;
- (BOOL)shouldRender;
- (void)drawWithTimestamp:(double)arg1;
- (void)setGlClearColor:(struct _VGLColor { float x1; float x2; float x3; float x4; })arg1;
- (id)initWithContext:(id)arg1 inBackground:(BOOL)arg2;
- (BOOL)isDrawable;
- (struct CGSize { float x1; float x2; })sizeInPixels;
- (void)didDrawView;
- (void)willDrawView;
- (void)frameBufferDestroyed;
- (id)vglContext;
- (void)createContextIfNecessary;
- (void)_destroyFramebufferAndKeepMultisampleFramebuffer;
- (BOOL)wantsRender;
- (BOOL)canRender;
- (BOOL)isEffectivelyHidden;
- (void)didPresent;
- (void)setUseMultisampling:(BOOL)arg1;
- (void)_destroyAndCreateFramebufferAndKeepMultisampleFramebuffer;
- (void)_destroyAndCreateFramebuffer;
- (BOOL)currentSceneRequiresMSAA;
- (void)_updateForceRecreateFramebuffer;
- (void)_destroyFramebuffer;
- (void)_createGLLayerIfNecessary;
- (void)_createFramebuffer;
- (void)setBackgroundColor:(struct CGColor { }*)arg1;
- (struct CGSize { float x1; float x2; })size;
- (void)setContentsScale:(float)arg1;
- (void)setContentsGravity:(id)arg1;
- (void)setOpaque:(BOOL)arg1;
- (void)layoutSublayers;
- (void)renderInContext:(struct CGContext { }*)arg1;
- (void)setNeedsDisplay;
- (void)display;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)dealloc;
- (id).cxx_construct;
- (void)willEnterForeground;
- (float)contentScale;
- (void)setContentScale:(float)arg1;
- (void)present;
- (void)didReceiveMemoryWarning;
- (void)setNeedsDisplayOnBoundsChange:(BOOL)arg1;

@end
