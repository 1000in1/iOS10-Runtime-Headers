/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@class NSString;

@interface VKPGenericShieldVariant : PBCodable <NSCopying> {
    struct { unsigned int x1; float x2; unsigned int x3; unsigned int x4; int x5; struct { unsigned int x_6_1_1 : 1; unsigned int x_6_1_2 : 1; unsigned int x_6_1_3 : 1; unsigned int x_6_1_4 : 1; unsigned int x_6_1_5 : 1; } x6; } *_layers;
    unsigned long long _layersCount;
    unsigned long long _layersSpace;
    NSString *_fontName;
    float _fontSize;
    float _leftCapWidth;
    float _leftPadding;
    float _lineSpacing;
    unsigned int _numberOfLines;
    float _rightCapWidth;
    float _rightPadding;
    float _textBaseline;
    struct { 
        unsigned int fontSize : 1; 
        unsigned int leftCapWidth : 1; 
        unsigned int leftPadding : 1; 
        unsigned int lineSpacing : 1; 
        unsigned int numberOfLines : 1; 
        unsigned int rightCapWidth : 1; 
        unsigned int rightPadding : 1; 
        unsigned int textBaseline : 1; 
    } _has;
}

@property bool hasNumberOfLines;
@property unsigned int numberOfLines;
@property(readonly) unsigned long long layersCount;
@property(readonly) struct { unsigned int x1; float x2; unsigned int x3; unsigned int x4; int x5; struct { unsigned int x_6_1_1 : 1; unsigned int x_6_1_2 : 1; unsigned int x_6_1_3 : 1; unsigned int x_6_1_4 : 1; unsigned int x_6_1_5 : 1; } x6; }* layers;
@property bool hasTextBaseline;
@property float textBaseline;
@property(readonly) bool hasFontName;
@property(retain) NSString * fontName;
@property bool hasFontSize;
@property float fontSize;
@property bool hasLeftCapWidth;
@property float leftCapWidth;
@property bool hasRightCapWidth;
@property float rightCapWidth;
@property bool hasLineSpacing;
@property float lineSpacing;
@property bool hasLeftPadding;
@property float leftPadding;
@property bool hasRightPadding;
@property float rightPadding;


- (bool)hasLineSpacing;
- (bool)hasRightPadding;
- (void)setHasRightPadding:(bool)arg1;
- (bool)hasLeftPadding;
- (void)setHasLeftPadding:(bool)arg1;
- (void)setLeftPadding:(float)arg1;
- (void)setHasLineSpacing:(bool)arg1;
- (bool)hasRightCapWidth;
- (void)setHasRightCapWidth:(bool)arg1;
- (void)setRightCapWidth:(float)arg1;
- (bool)hasLeftCapWidth;
- (void)setHasLeftCapWidth:(bool)arg1;
- (void)setLeftCapWidth:(float)arg1;
- (bool)hasNumberOfLines;
- (void)setHasNumberOfLines:(bool)arg1;
- (float)leftPadding;
- (float)rightCapWidth;
- (struct CGImage { }*)newImageWithBackgroundColor:(struct CGColor { }*)arg1 borderColor:(struct CGColor { }*)arg2 textureAtlases:(id)arg3 contentScale:(double)arg4;
- (struct CGSize { double x1; double x2; })_imageSizeWithTextureAtlases:(id)arg1;
- (void)setLayers:(struct { unsigned int x1; float x2; unsigned int x3; unsigned int x4; int x5; struct { unsigned int x_6_1_1 : 1; unsigned int x_6_1_2 : 1; unsigned int x_6_1_3 : 1; unsigned int x_6_1_4 : 1; unsigned int x_6_1_5 : 1; } x6; }*)arg1 count:(unsigned long long)arg2;
- (struct { unsigned int x1; float x2; unsigned int x3; unsigned int x4; int x5; struct { unsigned int x_6_1_1 : 1; unsigned int x_6_1_2 : 1; unsigned int x_6_1_3 : 1; unsigned int x_6_1_4 : 1; unsigned int x_6_1_5 : 1; } x6; }*)layers;
- (bool)hasFontSize;
- (void)setHasFontSize:(bool)arg1;
- (bool)hasTextBaseline;
- (void)setHasTextBaseline:(bool)arg1;
- (void)setTextBaseline:(float)arg1;
- (void)clearLayers;
- (struct { unsigned int x1; float x2; unsigned int x3; unsigned int x4; int x5; struct { unsigned int x_6_1_1 : 1; unsigned int x_6_1_2 : 1; unsigned int x_6_1_3 : 1; unsigned int x_6_1_4 : 1; unsigned int x_6_1_5 : 1; } x6; })layerAtIndex:(unsigned long long)arg1;
- (unsigned long long)layersCount;
- (float)textBaseline;
- (bool)hasFontName;
- (void)copyTo:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)writeTo:(id)arg1;
- (void)setLineSpacing:(float)arg1;
- (float)lineSpacing;
- (float)fontSize;
- (void)addLayer:(struct { unsigned int x1; float x2; unsigned int x3; unsigned int x4; int x5; struct { unsigned int x_6_1_1 : 1; unsigned int x_6_1_2 : 1; unsigned int x_6_1_3 : 1; unsigned int x_6_1_4 : 1; unsigned int x_6_1_5 : 1; } x6; })arg1;
- (void)setFontName:(id)arg1;
- (id)fontName;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dictionaryRepresentation;
- (float)rightPadding;
- (void)setRightPadding:(float)arg1;
- (void)setFontSize:(float)arg1;
- (unsigned int)numberOfLines;
- (void)setNumberOfLines:(unsigned int)arg1;
- (float)leftCapWidth;

@end
