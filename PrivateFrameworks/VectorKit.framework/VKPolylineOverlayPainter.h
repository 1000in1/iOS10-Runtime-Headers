/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@class VKAnimation, VKRouteLine, VGLTexture, VKTileKeyList, GEORoute, VGLRenderState, VKPolylineOverlay, NSString, VKTrafficDrawStyle, NSSet;

@interface VKPolylineOverlayPainter : VKOverlayPainter <VKPolylineObserver> {
    VKRouteLine *_routeLine;
    double _routeLineHalfWidthRegular;
    double _routeLineHalfWidthRealistic;
    BOOL _selected;
    VGLTexture *_selectedTextureRealistic;
    VGLTexture *_obscuredTextureRealistic;
    VGLTexture *_travelledTextureRealistic;
    GEORoute *_route;
    struct RouteLineStyle { 
        float strokeWidthRegularPoints; 
        double halfWidthRegularPoints; 
        double halfWidthRegularUnselectedScale; 
        double halfWidthRealisticMeters; 
        struct _VGLColor { 
            float r; 
            float g; 
            float b; 
            float a; 
        } travelledRegularRouteLineColor; 
        struct _VGLColor { 
            float r; 
            float g; 
            float b; 
            float a; 
        } inverseBaseColorSelected; 
        struct _VGLColor { 
            float r; 
            float g; 
            float b; 
            float a; 
        } inverseBaseColorUnselected; 
        NSString *selectedTextureNameRealistic; 
        NSString *obscuredTextureNameRealistic; 
        NSString *travelledTextureNameRealistic; 
        double widthEnlargementStartZoom; 
        double widthEnlargementScale; 
        double maxEnlargement; 
        float arrowMinZoom; 
        float selectedArrowMinZoom; 
        float brightnessRealistic; 
    } _style;
    struct { 
        double v[4][4]; 
    } _matrix;
    struct { 
        double v[4][4]; 
    } _inverseMatrix;
    NSSet *_previousTilesInView;
    VKTileKeyList *_previousKeysInView;
    double _simplificationEpsilon;
    VKAnimation *_fadeAnimation;
    float _alphaScale;
    VKAnimation *_arrowFadeAnimation;
    float _arrowAlphaScale;
    BOOL _showArrows;
    VKAnimation *_arrowCrossFadeAnimation;
    BOOL _showTraffic;
    BOOL _forceRoutelineUpdate;
    int _stencilValue;
    float _contentScale;
    VGLRenderState *_renderState;
    VKTrafficDrawStyle *_trafficDrawStyle;
    unsigned int _targetDisplayStep;
    float _crossfadingDisplayStep;
    BOOL _wasInRealisticMode;
}

@property BOOL selected;
@property(retain) GEORoute * route;
@property BOOL showTraffic;
@property(readonly) VKPolylineOverlay * polyline;


- (void)setShowTraffic:(BOOL)arg1;
- (void)drawArrowsWithContext:(id)arg1;
- (void)setNeedsLayoutForPolyline:(id)arg1;
- (void)_populateRenderBuffer:(id)arg1 matrix:(const union { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; float x_1_1_5; float x_1_1_6; float x_1_1_7; float x_1_1_8; float x_1_1_9; float x_1_1_10; float x_1_1_11; float x_1_1_12; float x_1_1_13; float x_1_1_14; float x_1_1_15; float x_1_1_16; } x1; float x2[16]; }*)arg2 halfWidth:(float)arg3 context:(id)arg4;
- (void)_drawRealisticWithContext:(id)arg1;
- (void)_drawRegularWithContext:(id)arg1;
- (void)prepareToDrawWithContext:(id)arg1;
- (void)updateRouteLineStencilValue:(int)arg1;
- (void)drawWithContext:(id)arg1 tiles:(id)arg2 prepare:(BOOL)arg3 updateStencil:(BOOL)arg4;
- (float)routeLineWidthForCamera:(id)arg1 canvasSize:(struct CGSize { float x1; float x2; })arg2;
- (void)_releaseTextures;
- (id)polyline;
- (void)_didReceiveMemoryWarning;
- (id)initWithOverlay:(id)arg1;
- (BOOL)_shouldShowTraffic;
- (void)drawDebug:(id)arg1 tiles:(id)arg2;
- (void)drawWithContext:(id)arg1 tiles:(id)arg2;
- (void)layoutWithContext:(id)arg1 tiles:(id)arg2 keysInView:(id)arg3;
- (void)setContainerModel:(id)arg1;
- (void)stylesheetDidChange;
- (id)stylesheet;
- (BOOL)showTraffic;
- (id)route;
- (void)setRoute:(id)arg1;
- (void)dealloc;
- (void).cxx_destruct;
- (id).cxx_construct;
- (BOOL)selected;
- (void)setSelected:(BOOL)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;

@end
