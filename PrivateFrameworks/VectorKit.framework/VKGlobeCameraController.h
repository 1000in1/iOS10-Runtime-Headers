/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class <VKMotionProvider>, VKAnimation, VKGlobeAnnotationTrackingCameraController;

@interface VKGlobeCameraController : VKMapCameraController <VKCameraControllerDelegate> {
    struct GlobeView { int (**x1)(); } *_globeView;
    VKGlobeAnnotationTrackingCameraController *_globeAnnotationTrackingCameraController;
    <VKMotionProvider> *_motionProvider;
    BOOL _motionActive;
    VKAnimation *_wiggleAnimation;
    VKAnimation *_positionAnimation;
    VKAnimation *_motionAnimation;
    VKAnimation *_decelerationAnimation;
    VKAnimation *_regionAnimation;
    struct CameraManager { 
        int (**_vptr$CameraManager)(); 
        bool_panBegin; 
        bool_panInProgress; 
        bool_panEnd; 
        struct Vector2i { 
            int _x; 
            int _y; 
        } _panCurrentCursor; 
        struct Vector2i { 
            int _x; 
            int _y; 
        } _panPreviousCursor; 
        struct Position3d { 
            double _latitude; 
            double _longitude; 
            double _height; 
        } _panStartPosition; 
        double _panDistance; 
        bool_rotateBegin; 
        bool_rotateInProgress; 
        bool_rotateEnd; 
        struct Position3d { 
            double _latitude; 
            double _longitude; 
            double _height; 
        } _rotateStartPosition; 
        struct Vector2i { 
            int _x; 
            int _y; 
        } _rotateCurrentCursor; 
        double _rotateAngle; 
        bool_tiltBegin; 
        bool_tiltInProgress; 
        bool_tiltEnd; 
        struct Position3d { 
            double _latitude; 
            double _longitude; 
            double _height; 
        } _tiltStartPosition; 
        struct Vector2i { 
            int _x; 
            int _y; 
        } _tiltCurrentCursor; 
        double _tiltAngle; 
        bool_zoomBegin; 
        bool_zoomInProgress; 
        bool_zoomEnd; 
        struct Position3d { 
            double _latitude; 
            double _longitude; 
            double _height; 
        } _zoomStartPosition; 
        struct Vector2i { 
            int _x; 
            int _y; 
        } _zoomCurrentCursor; 
        double _zoomFactor; 
        bool_zoomRotateToNorth; 
        bool_useTiltLimit; 
        int _tiltLimitMode; 
        bool_tiltLimitTransferInProgress; 
        bool_tiltLimitPushDown; 
        double _startPushDownTilt; 
        double _tiltLimitTransferFraction; 
        double _startTiltLimitTilt; 
        struct PositionGeo3d { 
            double _x; 
            double _y; 
            double _z; 
        } _startTiltLimitPosition; 
        struct Vector3d { 
            double _x; 
            double _y; 
            double _z; 
        } _startTiltLimitDirection; 
    } _cameraManager;
    double _currentDoublePanPitch;
}

@property struct GlobeView { int (**x1)(); }* globeView;
@property(readonly) double pitchThreshold;
@property(getter=isMotionActive,readonly) BOOL motionActive;


- (void)_performMotionAnimation;
- (void)_stopAnimations;
- (void)_animateToStartPosition;
- (void)_rotateAroundTargetWithDuration:(double)arg1 rotations:(double)arg2;
- (void)rotateTo:(double)arg1 animated:(BOOL)arg2;
- (void)tiltTo:(double)arg1 animated:(BOOL)arg2 exaggerate:(BOOL)arg3;
- (struct Vector2i { int x1; int x2; })_cursorFromScreenPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)updateGlobeFromCamera;
- (void)updateCameraManager;
- (void)stopGlobeAnimations;
- (void)stopSearchResultAnimation;
- (void)showPlaceCardAnimationAtCoordinate:(struct { double x1; double x2; })arg1 andDistance:(double)arg2;
- (void)showSearchResultAnimationAtCoordinate:(struct { double x1; double x2; })arg1 withZoom:(double)arg2;
- (double)zoomForMapRegion:(id)arg1;
- (void)moveTo:(struct { double x1; double x2; })arg1 zoom:(double)arg2 rotation:(double)arg3 tilt:(double)arg4 duration:(double)arg5 timingCurve:(id)arg6 completion:(id)arg7;
- (BOOL)isMotionActive;
- (void)stopMotion;
- (void)startWithMotionProvider:(id)arg1;
- (double)pitchThreshold;
- (void)setGlobeView:(struct GlobeView { int (**x1)(); }*)arg1;
- (struct GlobeView { int (**x1)(); }*)globeView;
- (int)minimumNormalizedZoomLevel;
- (int)maximumNormalizedZoomLevel;
- (void)stopPitching:(struct CGPoint { float x1; float x2; })arg1;
- (void)pitch:(struct CGPoint { float x1; float x2; })arg1 translation:(double)arg2;
- (void)startPitching:(struct CGPoint { float x1; float x2; })arg1;
- (void)stopRotating:(struct CGPoint { float x1; float x2; })arg1;
- (void)rotate:(double)arg1 atScreenPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)startRotating:(struct CGPoint { float x1; float x2; })arg1;
- (void)pan:(struct CGPoint { float x1; float x2; })arg1;
- (void)stopPinching:(struct CGPoint { float x1; float x2; })arg1;
- (void)pinch:(struct CGPoint { float x1; float x2; })arg1 oldFactor:(double)arg2 newFactor:(double)arg3;
- (void)startPinching:(struct CGPoint { float x1; float x2; })arg1;
- (void)tapZoom:(struct CGPoint { float x1; float x2; })arg1 levels:(double)arg2 completionHandler:(id)arg3;
- (void)stopPanning:(struct CGPoint { float x1; float x2; })arg1;
- (void)startPanning:(struct CGPoint { float x1; float x2; })arg1;
- (void)snapMapIfNecessary:(const struct VKPoint { double x1; double x2; double x3; }*)arg1 animated:(BOOL)arg2;
- (void)cameraController:(id)arg1 requestsDisplayRate:(int)arg2;
- (id)cameraController:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)cameraController:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2;
- (void)cameraController:(id)arg1 didBecomePitched:(BOOL)arg2;
- (void)cameraControllerDidStopRegionAnimation:(id)arg1 completed:(BOOL)arg2;
- (void)cameraControllerWillStartRegionAnimation:(id)arg1;
- (void)cameraControllerDidChangeCameraState:(id)arg1;
- (struct CGPoint { float x1; float x2; })_centerScreenPoint;
- (void)didAnimateInAnnotationMarkers:(id)arg1;
- (void)willAnimateInAnnotationMarkers:(id)arg1;
- (BOOL)restoreViewportFromInfo:(id)arg1;
- (BOOL)isAnimatingToTrackAnnotation;
- (void)panWithOffset:(struct CGPoint { float x1; float x2; })arg1 relativeToScreenPoint:(struct CGPoint { float x1; float x2; })arg2 animated:(BOOL)arg3 duration:(double)arg4 completionHandler:(id)arg5;
- (BOOL)isFullyPitched;
- (BOOL)isPitched;
- (void)exit3DMode;
- (void)enter3DMode;
- (void)stopPlaceCardAnimation;
- (double)durationToAnimateToMapRegion:(id)arg1;
- (void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(id)arg5;
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(BOOL)arg4 completion:(id)arg5;
- (void)setYaw:(double)arg1 animated:(BOOL)arg2;
- (void)runAnimation:(id)arg1;
- (id)mapRegionOfInterest;
- (double)presentationYaw;
- (BOOL)canEnter3DMode;
- (void)startTrackingAnnotation:(id)arg1 trackHeading:(BOOL)arg2 animated:(BOOL)arg3;
- (void)stopTrackingAnnotation;
- (BOOL)isTrackingHeading;
- (id)trackingAnnotation;
- (void)setTrackingAutoSelectsZoomScale:(BOOL)arg1;
- (void)setGesturing:(BOOL)arg1;
- (id)mapRegion;
- (double)yaw;
- (double)pitch;
- (int)tileSize;
- (id)init;
- (void)dealloc;
- (void).cxx_destruct;
- (id).cxx_construct;
- (void)setEdgeInsets:(struct VKEdgeInsets { float x1; float x2; float x3; float x4; })arg1;

@end
