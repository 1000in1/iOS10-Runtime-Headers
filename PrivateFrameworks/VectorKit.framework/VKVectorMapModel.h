/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKVectorMapModel : VKMapTileModel {
    struct vector<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > >, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { 
        struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *__begin_; 
        struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *__end_; 
        struct __compressed_pair<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > *, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { 
            struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *__first_; 
        } __end_cap_; 
    }  _defaultStencilItems;
    bool  _needsTileStencil;
    unsigned int  _stencilItemIndex;
    struct shared_ptr<ggl::PolygonSolidFill::MeshPipelineState> { 
        struct MeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _stencilPipelineState;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    }  _stencilState;
}

@property (nonatomic) bool needsTileStencil;

+ (bool)reloadOnActiveTileGroupChange;
+ (bool)reloadOnStylesheetChange;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_layoutScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2;
- (void)_updateTilesInScene:(id)arg1 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2;
- (struct shared_ptr<md::FeatureMarker> { struct FeatureMarker {} *x1; struct __shared_weak_count {} *x2; })featureMarkerAtPoint:(struct Matrix<double, 3, 1> { double x1[3]; })arg1;
- (struct shared_ptr<md::FeatureMarker> { struct FeatureMarker {} *x1; struct __shared_weak_count {} *x2; })featureMarkerInTile:(id)arg1 atPoint:(struct Matrix<double, 3, 1> { double x1[3]; }*)arg2;
- (void)gglLayoutScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (id)init;
- (id)initWithTarget:(id)arg1 sharedResources:(id)arg2;
- (unsigned long long)mapLayerPosition;
- (bool)needsTileStencil;
- (void)pushStencilItems:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; short x31; void*x32; void*x33; void*x34; const void*x35; void*x36; void*x37; BOOL x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; BOOL x48; void*x49; out void*x50; void*x51; void*x52; void*x53; void*x54; const void*x55; void*x56; void*x57; short x58; void*x59; short x60; void*x61; void*x62; void*x63; double x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; int x72; void*x73; const void*x74; void*x75; void*x76; float x77; void*x78; long x79; void*x80; out void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; short x90; void*x91; void*x92; void*x93; double x94; void*x95; SEL x96; void*x97; SEL x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; SEL x106; void*x107; SEL x108; void*x109; void*x110; void*x111; long long x112; void*x113; void*x114; void*x115; void*x116; void*x117; long x118; void*x119; void*x120; void*x121; void*x122; void*x123; out void*x124; void*x125; void*x126; void*x127; void*x128; in void*x129; short x130; void*x131; int x132; void*x133; void*x134; void*x135; in void*x136; void*x137; void*x138; double x139; void*x140; void*x141; void*x142; long x143; void*x144; out void*x145; in void*x146; void*x147; void*x148; void*x149; void*x150; long x151; void*x152; out void*x153; in void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; struct x165; void*x166; void*x167; void*x168; float x169; void*x170; long x171; void*x172; out void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; }*)arg1 tiles:(id)arg2 minZ:(int)arg3 maxZ:(int)arg4 fullyLoaded:(bool)arg5 items:(struct vector<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > >, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *x1; struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *x2; struct __compressed_pair<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > *, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *x_3_1_1; } x3; }*)arg6 layoutContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg7 sourceTileOffset:(int)arg8;
- (void)pushStencilItems:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; short x25; void*x26; void*x27; in out double x28; void*x29; void*x30; void*x31; in short x32; int x33; void*x34; in void*x35; double x36; void*x37; long x38; out in void*x39; void*x40; long x41; out in void*x42; void*x43; void*x44; void x45; out int x46; double x47; void*x48; char *x49; void*x50; void*x51; char *x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; struct  struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> { {} x59; void*x60; char *x61; char *x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; short x72; void*x73; const void*x74; BOOL x75; void*x76; void*x77; void*x78; void*x79; unsigned int x80/* : ? */; void*x81; BOOL x82; void*x83; void*x84; void*x85; void*x86; long x87; int x88; short x89; void*x90; void*x91; double x92; void*x93; void*x94; long x95; long x96; out BOOL x97; void*x98; void*x99; out const void*x100; short x101; void*x102; double x103; SEL x104; SEL x105; void*x106; void*x107; void*x108; SEL x109; SEL x110; void*x111; long x112; long x113; out BOOL x114; void*x115; void*x116; out const void*x117; short x118; void*x119; double x120; SEL x121; SEL x122; void*x123; void*x124; void*x125; SEL x126; SEL x127; void*x128; void*x129; void*x130; short x131; void*x132; void*x133; void*x134; const void*x135; void*x136; void*x137; BOOL x138; void*x139; void*x140; void*x141; void*x142; void*x143; double x144; void*x145; void*x146; void*x147; long long x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; out void*x160; SEL x161; void*x162; SEL x163; void*x164; float x165; void*x166; void*x167; void*x168; short x169; void*x170; void*x171; void*x172; void*x173; void*x174; short x175; void*x176; void*x177; void*x178; void*x179; void*x180; const void*x181; void*x182; void*x183; double x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; const void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; long x199; void*x200; SEL x201; void*x202; SEL x203; void*x204; unsigned long long x205; void*x206; void*x207; void*x208; void*x209; void*x210; const void*x211; void*x212; void*x213; unsigned int x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; short x228; void*x229; void*x230; void*x231; double x232; void*x233; SEL x234; void*x235; SEL x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; SEL x244; void*x245; SEL x246; void*x247; void*x248; void*x249; long x250; void*x251; long x252; void*x253; out void*x254; BOOL x255; void*x256; void*x257; void*x258; void*x259; void*x260; out void*x261; const void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; out void*x269; SEL x270; void*x271; SEL x272; void*x273; float x274; void*x275; void*x276; void*x277; short x278; void*x279; void*x280; void*x281; void*x282; void*x283; short x284; void*x285; void*x286; void*x287; void*x288; void*x289; const void*x290; void*x291; void*x292; double x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; const void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; long x308; void*x309; SEL x310; void*x311; SEL x312; void*x313; unsigned long long x314; void*x315; void*x316; void*x317; void*x318; void*x319; const void*x320; void*x321; void*x322; unsigned int x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; struct x343; void*x344; void*x345; void*x346; short x347; void*x348; void*x349; void*x350; const void*x351; void*x352; void*x353; BOOL x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; short x364; void*x365; void*x366; void*x367; long x368; void*x369; int x370; void*x371; void*x372; void*x373; void*x374; void*x375; unsigned int x376/* : ? */; void*x377; void*x378; void*x379; float x380; void*x381; float x382; void*x383; void*x384; void*x385; const void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; out void*x393; SEL x394; void*x395; SEL x396; void*x397; float x398; void*x399; void*x400; void*x401; short x402; void*x403; void*x404; void*x405; void*x406; void*x407; short x408; void*x409; void*x410; void*x411; void*x412; void*x413; const void*x414; void*x415; void*x416; double x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; const void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; long x432; void*x433; SEL x434; void*x435; SEL x436; void*x437; unsigned long long x438; void*x439; void*x440; void*x441; void*x442; void*x443; const void*x444; void*x445; void*x446; unsigned int x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; char *x459; void*x460; void*x461; void*x462; void*x463; void*x464; short x465; void*x466; void*x467; void*x468; double x469; void*x470; SEL x471; void*x472; SEL x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; SEL x481; void*x482; SEL x483; void*x484; void*x485; void*x486; long x487; void*x488; long x489; void*x490; out void*x491; BOOL x492; void*x493; void*x494; void*x495; void*x496; void*x497; out void*x498; const void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; out void*x506; SEL x507; void*x508; SEL x509; void*x510; float x511; void*x512; void*x513; void*x514; short x515; void*x516; void*x517; void*x518; void*x519; void*x520; short x521; void*x522; void*x523; void*x524; void*x525; void*x526; const void*x527; void*x528; void*x529; double x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; const void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; long x545; void*x546; SEL x547; void*x548; SEL x549; void*x550; unsigned long long x551; void*x552; void*x553; void*x554; void*x555; void*x556; const void*x557; void*x558; void*x559; unsigned int x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; char *x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; struct x582; void*x583; void*x584; void*x585; short x586; void*x587; void*x588; void*x589; const void*x590; void*x591; void*x592; BOOL x593; void*x594; void*x595; void*x596; void*x597; void*x598; float x599; void*x600; void*x601; void*x602; short x603; void*x604; void*x605; void*x606; void*x607; void*x608; short x609; void*x610; void*x611; void*x612; void*x613; void*x614; const void*x615; void*x616; void*x617; double x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; const void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; long x633; void*x634; SEL x635; void*x636; SEL x637; void*x638; unsigned long long x639; void*x640; void*x641; void*x642; void*x643; void*x644; const void*x645; void*x646; void*x647; unsigned int x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; struct x660; void*x661; }*)arg1 tiles:(id)arg2 minZ:(int)arg3 maxZ:(int)arg4 fullyLoaded:(bool)arg5 layoutContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg6 sourceTileOffset:(int)arg7;
- (void)resetStencilState;
- (void)setNeedsTileStencil:(bool)arg1;
- (bool)wantsCategorizedSourceTiles;

@end
