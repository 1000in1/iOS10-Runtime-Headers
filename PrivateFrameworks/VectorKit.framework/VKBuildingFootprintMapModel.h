/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKBuildingFootprintMapModel : VKVectorMapModel <VKMapLayer, VKMercatorTerrainHeightProvider> {
    struct RenderItemBatcher { 
        struct vector<ggl::Range, std::__1::allocator<ggl::Range> > { 
            struct Range {} *__begin_; 
            struct Range {} *__end_; 
            struct __compressed_pair<ggl::Range *, std::__1::allocator<ggl::Range> > { 
                struct Range {} *__first_; 
            } __end_cap_; 
        } _activeRanges; 
        unsigned long long _rangePoolCount; 
        struct vector<ggl::MultiRange, std::__1::allocator<ggl::MultiRange> > { 
            struct MultiRange {} *__begin_; 
            struct MultiRange {} *__end_; 
            struct __compressed_pair<ggl::MultiRange *, std::__1::allocator<ggl::MultiRange> > { 
                struct MultiRange {} *__first_; 
            } __end_cap_; 
        } _rangePool; 
        struct vector<ggl::Range, std::__1::allocator<ggl::Range> > { 
            struct Range {} *__begin_; 
            struct Range {} *__end_; 
            struct __compressed_pair<ggl::Range *, std::__1::allocator<ggl::Range> > { 
                struct Range {} *__first_; 
            } __end_cap_; 
        } _activeRanges; 
        struct RenderItem {} *_prototype; 
        struct Pool<ggl::RenderItem> { 
            struct set<void *, std::__1::less<void *>, std::__1::allocator<void *> > { 
                struct __tree<void *, std::__1::less<void *>, std::__1::allocator<void *> > { 
                    struct __tree_node<void *, void *> {} *__begin_node_; 
                    struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<void *, void *> > > { 
                        struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                            struct __tree_node_base<void *> {} *__left_; 
                        } __first_; 
                    } __pair1_; 
                    struct __compressed_pair<unsigned long, std::__1::less<void *> > { 
                        unsigned long long __first_; 
                    } __pair3_; 
                } __tree_; 
            } mAllocatedSlabs; 
            unsigned long long mElementsPerSlab; 
            unsigned long long mSlabSize; 
            struct FreeList {} *mFreeElement; 
        } _pool; 
        unsigned long long _rangePoolCount; 
        struct vector<ggl::MultiRange, std::__1::allocator<ggl::MultiRange> > { 
            struct MultiRange {} *__begin_; 
            struct MultiRange {} *__end_; 
            struct __compressed_pair<ggl::MultiRange *, std::__1::allocator<ggl::MultiRange> > { 
                struct MultiRange {} *__first_; 
            } __end_cap_; 
        } _rangePool; 
    }  _batcher;
    float  _brightness;
    float  _buildingChangeoverZ;
    struct unique_ptr<ggl::FragmentedPool<ggl::BuildingFacadeDepth::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFacadeDepth::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::BuildingFacadeDepth::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFacadeDepth::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::BuildingFacadeDepth::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _buildingDepthPipelineSetupPool;
    struct shared_ptr<ggl::BuildingFacadeDepth::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _buildingDepthPipelineState;
    int  _buildingMode;
    struct unique_ptr<ggl::FragmentedPool<ggl::BuildingPointyRoofDepth::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingPointyRoofDepth::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::BuildingPointyRoofDepth::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingPointyRoofDepth::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::BuildingPointyRoofDepth::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _buildingPointyRoofDepthPipelineSetupPool;
    struct shared_ptr<ggl::BuildingPointyRoofDepth::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _buildingPointyRoofDepthPipelineState;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::RenderItem> *, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
            struct FragmentedPool<ggl::RenderItem> {} *__first_; 
        } __ptr_; 
    }  _buildingRenderItemPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::BuildingTopDepth::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingTopDepth::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::BuildingTopDepth::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingTopDepth::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::BuildingTopDepth::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _buildingTopDepthPipelineSetupPool;
    struct shared_ptr<ggl::BuildingTopDepth::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _buildingTopDepthPipelineState;
    struct ClearItem { unsigned char x1; struct Matrix<float, 4, 1> { float x_2_1_1[4]; } x2; bool x3; float x4; unsigned char x5; unsigned int x6; } * _clearItem;
    struct unordered_map<VKVectorTile *, OccluderGroupList, std::__1::hash<VKVectorTile *>, std::__1::equal_to<VKVectorTile *>, std::__1::allocator<std::__1::pair<VKVectorTile *const, OccluderGroupList> > > { 
        struct __hash_table<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::__unordered_map_hasher<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::hash<VKVectorTile *>, true>, std::__1::__unordered_map_equal<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::equal_to<VKVectorTile *>, true>, std::__1::allocator<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList> > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > { 
                            unsigned long long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::hash<VKVectorTile *>, true> > { 
                unsigned long long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::equal_to<VKVectorTile *>, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    }  _currentOccluders;
    <VKBuildingFootprintMapModelDelegate> * _delegate;
    struct shared_ptr<ggl::RenderState> { 
        struct RenderState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _depthPassRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::DiffuseBuilding::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuilding::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::DiffuseBuilding::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuilding::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::DiffuseBuilding::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _diffuseBuildingPipelineSetupPool;
    struct shared_ptr<ggl::DiffuseBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _diffuseBuildingPipelineStateWithBlending;
    struct shared_ptr<ggl::DiffuseBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _diffuseBuildingPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::DiffuseBuildingPointyRoof::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuildingPointyRoof::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::DiffuseBuildingPointyRoof::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuildingPointyRoof::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::DiffuseBuildingPointyRoof::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _diffusePointyRoofPipelineSetupPool;
    struct shared_ptr<ggl::DiffuseBuildingPointyRoof::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _diffusePointyRoofPipelineStateWithBlending;
    struct shared_ptr<ggl::DiffuseBuildingPointyRoof::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _diffusePointyRoofPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::DiffuseBuildingTop::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuildingTop::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::DiffuseBuildingTop::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuildingTop::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::DiffuseBuildingTop::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _diffuseTopPipelineSetupPool;
    struct shared_ptr<ggl::DiffuseBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _diffuseTopPipelineStateWithBlending;
    struct shared_ptr<ggl::DiffuseBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _diffuseTopPipelineStateWithoutBlending;
    VKTimedAnimation * _fadeBuildingAnimation;
    struct shared_ptr<ggl::ConstantDataTyped<ggl::Building::Fade> > { 
        struct ConstantDataTyped<ggl::Building::Fade> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _fadeConstantData;
    bool  _fadeNeedsAlpha;
    bool  _fadeTiles;
    struct unique_ptr<ggl::FragmentedPool<ggl::BuildingFlat::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFlat::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::BuildingFlat::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFlat::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::BuildingFlat::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _fillPipelineSetupPool;
    struct shared_ptr<ggl::BuildingFlat::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _fillPipelineStateWithBlending;
    struct shared_ptr<ggl::BuildingFlat::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _fillPipelineStateWithoutBlending;
    struct shared_ptr<ggl::RenderState> { 
        struct RenderState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _fillRenderState;
    bool  _fogEnabled;
    struct unique_ptr<ggl::FragmentedPool<ggl::FoggedDiffuseBuilding::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedDiffuseBuilding::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::FoggedDiffuseBuilding::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedDiffuseBuilding::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::FoggedDiffuseBuilding::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _foggedDiffuseBuildingPipelineSetupPool;
    struct shared_ptr<ggl::FoggedDiffuseBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedDiffuseBuildingPipelineStateWithBlending;
    struct shared_ptr<ggl::FoggedDiffuseBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedDiffuseBuildingPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _foggedDiffuseTopPipelineSetupPool;
    struct shared_ptr<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedDiffuseTopPipelineStateWithBlending;
    struct shared_ptr<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedDiffuseTopPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::FoggedSpecularBuilding::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedSpecularBuilding::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::FoggedSpecularBuilding::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedSpecularBuilding::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::FoggedSpecularBuilding::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _foggedSpecularBuildingPipelineSetupPool;
    struct shared_ptr<ggl::FoggedSpecularBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedSpecularBuildingPipelineStateWithBlending;
    struct shared_ptr<ggl::FoggedSpecularBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedSpecularBuildingPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _foggedSpecularTopPipelineSetupPool;
    struct shared_ptr<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedSpecularTopPipelineStateWithBlending;
    struct shared_ptr<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedSpecularTopPipelineStateWithoutBlending;
    VKMercatorTerrainHeightCache * _heightCache;
    bool  _initializedStyles;
    VK3DObjectSubMapModel * _landmarksModel;
    struct unordered_map<VKVectorTile *, OccluderGroupList, std::__1::hash<VKVectorTile *>, std::__1::equal_to<VKVectorTile *>, std::__1::allocator<std::__1::pair<VKVectorTile *const, OccluderGroupList> > > { 
        struct __hash_table<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::__unordered_map_hasher<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::hash<VKVectorTile *>, true>, std::__1::__unordered_map_equal<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::equal_to<VKVectorTile *>, true>, std::__1::allocator<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList> > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > { 
                            unsigned long long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::hash<VKVectorTile *>, true> > { 
                unsigned long long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::equal_to<VKVectorTile *>, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    }  _previousOccluders;
    struct unique_ptr<ggl::FragmentedPool<ggl::BuildingShadow::MeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingShadow::MeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::BuildingShadow::MeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingShadow::MeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::BuildingShadow::MeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _shadowPipelineSetupPool;
    struct shared_ptr<ggl::BuildingShadow::MeshPipelineState> { 
        struct MeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _shadowPipelineState;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::RenderItem> *, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
            struct FragmentedPool<ggl::RenderItem> {} *__first_; 
        } __ptr_; 
    }  _shadowRenderItemPool;
    struct shared_ptr<ggl::RenderState> { 
        struct RenderState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _shadowsRenderState;
    bool  _shouldDraw3DBuildingsIn3DBuildingsRenderPass;
    bool  _shouldDraw3DBuildingsInVectorBuildingsRenderPass;
    VKSkyModel * _skyModel;
    struct unique_ptr<ggl::FragmentedPool<ggl::SpecularBuilding::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuilding::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::SpecularBuilding::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuilding::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::SpecularBuilding::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _specularBuildingPipelineSetupPool;
    struct shared_ptr<ggl::SpecularBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _specularBuildingPipelineStateWithBlending;
    struct shared_ptr<ggl::SpecularBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _specularBuildingPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::SpecularBuildingPointyRoof::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuildingPointyRoof::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::SpecularBuildingPointyRoof::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuildingPointyRoof::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::SpecularBuildingPointyRoof::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _specularPointyRoofPipelineSetupPool;
    struct shared_ptr<ggl::SpecularBuildingPointyRoof::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _specularPointyRoofPipelineStateWithBlending;
    struct shared_ptr<ggl::SpecularBuildingPointyRoof::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _specularPointyRoofPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::SpecularBuildingTop::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuildingTop::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::SpecularBuildingTop::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuildingTop::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::SpecularBuildingTop::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _specularTopPipelineSetupPool;
    struct shared_ptr<ggl::SpecularBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _specularTopPipelineStateWithBlending;
    struct shared_ptr<ggl::SpecularBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _specularTopPipelineStateWithoutBlending;
    int  _stencilRef;
    struct unique_ptr<ggl::FragmentedPool<ggl::PrefilteredLine::PrefilteredLinePipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PrefilteredLine::PrefilteredLinePipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::PrefilteredLine::PrefilteredLinePipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::PrefilteredLine::PrefilteredLinePipelineSetup> > > { 
            struct FragmentedPool<ggl::PrefilteredLine::PrefilteredLinePipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _stroke3DPipelineSetupPool;
    struct shared_ptr<ggl::PrefilteredLine::PrefilteredLinePipelineState> { 
        struct PrefilteredLinePipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _stroke3DPipelineState;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::RenderItem> *, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
            struct FragmentedPool<ggl::RenderItem> {} *__first_; 
        } __ptr_; 
    }  _stroke3DRenderItemPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineSetup> > > { 
            struct FragmentedPool<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _strokePipelineSetupPool;
    struct shared_ptr<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineState> { 
        struct BuildingFlatStrokePipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _strokePipelineState;
    struct shared_ptr<ggl::RenderState> { 
        struct RenderState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _strokeRenderState;
    VKTimedAnimation * _styleChangeAnimation;
    struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { 
        struct StylesheetManager<gss::PropertyID> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _styleManager;
    bool  _supports3DBuildings;
    bool  _supports3DStrokes;
    bool  _supportsBuildingShadows;
    bool  _supportsPerFragmentLighting;
    bool  _supportsStrokes;
    int  _targetBuildingMode;
    struct shared_ptr<ggl::RenderState> { 
        struct RenderState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _threeDRenderState;
    struct shared_ptr<ggl::RenderState> { 
        struct RenderState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _threeDStrokeRenderState;
}

@property (nonatomic) float buildingChangeoverZ;
@property (nonatomic) int buildingMode;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <VKBuildingFootprintMapModelDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool fadeTiles;
@property (getter=isFogEnabled, nonatomic) bool fogEnabled;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) VKMercatorTerrainHeightCache *heightCache;
@property (nonatomic, retain) VK3DObjectSubMapModel *landmarksModel;
@property (nonatomic, retain) VKSkyModel *skyModel;
@property (nonatomic) struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x1; struct __shared_weak_count {} *x2; } styleManager;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_clearOccluders;
- (void)_updateBuildingModeForContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg1;
- (void)_updateStyles;
- (void)addTilesInScene:(id)arg1 toSet:(id)arg2 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3;
- (void)animateTiles:(id)arg1 fromAlpha:(float)arg2 toAlpha:(float)arg3 fromScale:(float)arg4 toScale:(float)arg5;
- (float)buildingChangeoverZ;
- (int)buildingMode;
- (void)dealloc;
- (id)delegate;
- (void)didReceiveMemoryWarning:(bool)arg1;
- (struct shared_ptr<ggl::ConstantDataTyped<ggl::Building::Fade> > { struct ConstantDataTyped<ggl::Building::Fade> {} *x1; struct __shared_weak_count {} *x2; }*)fadeConstantData;
- (bool)fadeNeedsAlpha;
- (bool)fadeTiles;
- (struct shared_ptr<md::FeatureMarker> { struct FeatureMarker {} *x1; struct __shared_weak_count {} *x2; })featureMarkerInTile:(id)arg1 atPoint:(struct Matrix<double, 3, 1> { double x1[3]; }*)arg2;
- (void)flushPools;
- (void)generate2DBuildingRenderItemsForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; short x32; void*x33; const void*x34; BOOL x35; void*x36; void*x37; void*x38; void*x39; BOOL x40; out void*x41; void*x42; const void*x43; short x44; short x45; void*x46; double x47; void*x48; void*x49; void*x50; int x51; const void*x52; short x53; void*x54; double x55; SEL x56; SEL x57; void*x58; void*x59; void*x60; SEL x61; SEL x62; void*x63; void*x64; void*x65; const void*x66; void*x67; void*x68; void*x69; in double x70; void*x71; in out double x72; void*x73; void*x74; short x75; void*x76; double x77; SEL x78; SEL x79; void*x80; void*x81; void*x82; SEL x83; SEL x84; void*x85; void*x86; void*x87; const void*x88; void*x89; void*x90; in out double x91; void*x92; void*x93; unsigned int x94/* : ? */; void*x95; short x96; void*x97; void*x98; void x99; out int x100; double x101; void*x102; char *x103; void*x104; void*x105; char *x106; void*x107; void*x108; void*x109; short x110; void*x111; double x112; SEL x113; SEL x114; void*x115; void*x116; void*x117; SEL x118; SEL x119; void*x120; long x121; long x122; out BOOL x123; void*x124; void*x125; out const void*x126; short x127; void*x128; double x129; SEL x130; SEL x131; void*x132; void*x133; void*x134; SEL x135; SEL x136; void*x137; void*x138; void*x139; const void*x140; void*x141; void*x142; in out double x143; void*x144; void*x145; void x146; out int x147; double x148; void*x149; char *x150; void*x151; void*x152; void x153; out int x154; double x155; void*x156; char *x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; struct  
                        struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                            struct __tree_node_base<void *> { {} x164; void*x165; char *x166; void*x167; void*x168; long x169; void*x170; float x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; }*)arg3;
- (void)generate2DBuildingRenderItemsIfNecessaryForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; BOOL x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; BOOL x35; void*x36; out void*x37; void*x38; void*x39; void*x40; void*x41; const void*x42; void*x43; void*x44; short x45; void*x46; short x47; void*x48; void*x49; void*x50; double x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; int x59; void*x60; const void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; long x68; void*x69; SEL x70; void*x71; SEL x72; void*x73; bool x74; void*x75; void*x76; void*x77; float x78; void*x79; float x80; void*x81; void*x82; void*x83; const void*x84; unsigned long x85; void*x86; out void*x87; void*x88; void*x89; double x90; void*x91; unsigned int x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; char *x102; void*x103; void*x104; void*x105; void*x106; void*x107; short x108; void*x109; void*x110; void*x111; double x112; void*x113; SEL x114; void*x115; SEL x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; SEL x124; void*x125; SEL x126; void*x127; void*x128; void*x129; long x130; void*x131; long x132; void*x133; out void*x134; BOOL x135; void*x136; void*x137; void*x138; void*x139; void*x140; out void*x141; const void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; long x149; void*x150; SEL x151; void*x152; SEL x153; void*x154; bool x155; void*x156; void*x157; void*x158; float x159; void*x160; float x161; void*x162; void*x163; void*x164; const void*x165; unsigned long x166; void*x167; out void*x168; void*x169; void*x170; double x171; void*x172; unsigned int x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; struct x189; void*x190; void*x191; void*x192; short x193; void*x194; void*x195; void*x196; const void*x197; void*x198; void*x199; BOOL x200; void*x201; void*x202; void*x203; void*x204; void*x205; bool x206; void*x207; void*x208; void*x209; float x210; void*x211; float x212; void*x213; void*x214; void*x215; const void*x216; unsigned long x217; void*x218; out void*x219; void*x220; void*x221; double x222; void*x223; unsigned int x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; struct x234; void*x235; }*)arg3;
- (void)generate3DBuildingRenderItemsForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void x27; void*x28; out void*x29; int x30; void*x31; double x32; void*x33; char *x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void x48; void*x49; out void*x50; int x51; void*x52; double x53; void*x54; char *x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void x69; void*x70; out void*x71; int x72; void*x73; double x74; void*x75; char *x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void x90; void*x91; out void*x92; int x93; void*x94; double x95; void*x96; char *x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void x111; void*x112; out void*x113; int x114; void*x115; double x116; void*x117; char *x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; long x132; void*x133; out void*x134; in void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; out void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; int x159; void*x160; in void*x161; void*x162; void*x163; void x164; void*x165; out void*x166; int x167; void*x168; double x169; void*x170; char *x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void x185; void*x186; out void*x187; int x188; void*x189; double x190; void*x191; char *x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void x206; void*x207; out void*x208; int x209; void*x210; double x211; void*x212; char *x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void x227; void*x228; out void*x229; int x230; void*x231; double x232; void*x233; char *x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void x248; void*x249; out void*x250; int x251; void*x252; double x253; void*x254; char *x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void x269; void*x270; out void*x271; int x272; void*x273; double x274; void*x275; char *x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void x290; void*x291; out void*x292; int x293; void*x294; double x295; void*x296; char *x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void x311; void*x312; out void*x313; int x314; void*x315; double x316; void*x317; char *x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void x332; void*x333; out void*x334; int x335; void*x336; double x337; void*x338; char *x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void x353; void*x354; out void*x355; int x356; void*x357; double x358; void*x359; char *x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; char *x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; out void*x398; int x399; void*x400; double x401; void*x402; char *x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; BOOL x417; void*x418; void*x419; void*x420; void*x421; void*x422; const void*x423; void*x424; void*x425; char *x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void x440; void*x441; out void*x442; int x443; void*x444; double x445; void*x446; char *x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void x461; void*x462; out void*x463; int x464; void*x465; double x466; void*x467; char *x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void x482; void*x483; out void*x484; int x485; void*x486; double x487; void*x488; char *x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void x503; void*x504; out void*x505; int x506; void*x507; double x508; void*x509; char *x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void x524; void*x525; out void*x526; int x527; void*x528; double x529; void*x530; char *x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void x545; void*x546; out void*x547; int x548; void*x549; double x550; void*x551; char *x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void x566; void*x567; out void*x568; int x569; void*x570; double x571; void*x572; char *x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void x587; void*x588; out void*x589; int x590; void*x591; double x592; void*x593; char *x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void x608; void*x609; out void*x610; int x611; void*x612; double x613; void*x614; char *x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void x629; void*x630; out void*x631; int x632; void*x633; double x634; void*x635; char *x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void x650; void*x651; out void*x652; int x653; void*x654; double x655; void*x656; char *x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void x671; void*x672; out void*x673; int x674; void*x675; double x676; void*x677; char *x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; void*x690; void*x691; void x692; void*x693; out void*x694; int x695; void*x696; double x697; void*x698; char *x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void x713; void*x714; out void*x715; int x716; void*x717; double x718; void*x719; char *x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void x734; void*x735; out void*x736; int x737; void*x738; double x739; void*x740; char *x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void x755; void*x756; out void*x757; int x758; void*x759; double x760; void*x761; char *x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void x776; void*x777; out void*x778; int x779; void*x780; double x781; void*x782; char *x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void x797; void*x798; out void*x799; int x800; void*x801; double x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; out void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; int x825; void*x826; in void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; double x844; void*x845; out void*x846; void*x847; void*x848; unsigned int x849/* : ? */; void*x850; long x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; short x861; void*x862; void*x863; void*x864; const void*x865; void*x866; void*x867; BOOL x868; void*x869; void*x870; void*x871; void*x872; void*x873; unsigned char x874; void*x875; out void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; in void*x883; double x884; void*x885; bool x886; void*x887; void*x888; void*x889; float x890; void*x891; float x892; void*x893; void*x894; void*x895; const void*x896; void*x897; void*x898; struct x899; void*x900; void*x901; void*x902; int x903; void*x904; in void*x905; void*x906; void*x907; void*x908; void*x909; union x910; void*x911; char *x912; void*x913; char *x914; void*x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; union x922; void*x923; void*x924; void*x925; void*x926; void*x927; void*x928; void*x929; BOOL x930; void*x931; void*x932; void*x933; void*x934; void*x935; const void*x936; void*x937; void*x938; char *x939; void*x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; in void*x951; short x952; void*x953; int x954; void*x955; void*x956; void*x957; in void*x958; void*x959; void*x960; double x961; void*x962; void*x963; void*x964; BOOL x965; void*x966; void*x967; void*x968; void*x969; void*x970; const void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; short x982; void*x983; void*x984; void*x985; const void*x986; void*x987; void*x988; BOOL x989; void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; void*x998; in void*x999; double x1000; void*x1001; void*x1002; void*x1003; const void*x1004; unsigned long long x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; struct x1017; void*x1018; }*)arg3;
- (void)generate3DBuildingRenderItemsIfNecessaryForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; BOOL x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; BOOL x35; void*x36; out void*x37; void*x38; void*x39; void*x40; void*x41; const void*x42; void*x43; void*x44; short x45; void*x46; short x47; void*x48; void*x49; void*x50; double x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; int x59; void*x60; const void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; long x68; void*x69; SEL x70; void*x71; SEL x72; void*x73; bool x74; void*x75; void*x76; void*x77; float x78; void*x79; float x80; void*x81; void*x82; void*x83; const void*x84; unsigned long x85; void*x86; out void*x87; void*x88; void*x89; double x90; void*x91; unsigned int x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; char *x102; void*x103; void*x104; void*x105; void*x106; void*x107; short x108; void*x109; void*x110; void*x111; double x112; void*x113; SEL x114; void*x115; SEL x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; SEL x124; void*x125; SEL x126; void*x127; void*x128; void*x129; long x130; void*x131; long x132; void*x133; out void*x134; BOOL x135; void*x136; void*x137; void*x138; void*x139; void*x140; out void*x141; const void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; long x149; void*x150; SEL x151; void*x152; SEL x153; void*x154; bool x155; void*x156; void*x157; void*x158; float x159; void*x160; float x161; void*x162; void*x163; void*x164; const void*x165; unsigned long x166; void*x167; out void*x168; void*x169; void*x170; double x171; void*x172; unsigned int x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; struct x189; void*x190; void*x191; void*x192; short x193; void*x194; void*x195; void*x196; const void*x197; void*x198; void*x199; BOOL x200; void*x201; void*x202; void*x203; void*x204; void*x205; bool x206; void*x207; void*x208; void*x209; float x210; void*x211; float x212; void*x213; void*x214; void*x215; const void*x216; unsigned long x217; void*x218; out void*x219; void*x220; void*x221; double x222; void*x223; unsigned int x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; struct x234; void*x235; }*)arg3;
- (void)generateDiffuseRenderItemsForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 flatQueries:(const struct vector<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> >, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x1; struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x2; struct __compressed_pair<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > *, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x_3_1_1; } x3; }*)arg4 pointyQueries:(const struct vector<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> >, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x1; struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x2; struct __compressed_pair<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > *, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x_3_1_1; } x3; }*)arg5 texture:(struct Texture2D { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; int x6; int x7; int x8; int x9; unsigned int x10; struct shared_ptr<const ggl::TextureDataAbstract> { struct TextureDataAbstract {} *x_11_1_1; struct __shared_weak_count {} *x_11_1_2; } x11; bool x12; bool x13; unsigned int x14; unsigned int x15; bool x16; struct shared_ptr<ggl::SamplerState> { struct SamplerState {} *x_17_1_1; struct __shared_weak_count {} *x_17_1_2; } x17; }*)arg6 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg7 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void x26; out int x27; double x28; char *x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; bool x36; bycopy bycopy unsigned long x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void x45; out int x46; double x47; char *x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void x55; out int x56; double x57; char *x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void x65; out int x66; double x67; char *x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void x75; out int x76; double x77; char *x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void x85; out int x86; double x87; char *x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; out void*x95; void*x96; void*x97; void x98; out int x99; double x100; char *x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; BOOL x108; out in short x109; void*x110; void*x111; void x112; out int x113; double x114; char *x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void x122; out int x123; double x124; char *x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void x132; out int x133; double x134; char *x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void x142; out int x143; double x144; char *x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void x152; out int x153; double x154; char *x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void x162; out int x163; double x164; char *x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void x172; out int x173; double x174; char *x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; long x182; out in void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void x191; out int x192; double x193; char *x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; unsigned short x201; void*x202; unsigned long x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void x211; out int x212; double x213; char *x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; unsigned short x221; void*x222; unsigned long x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void x231; out int x232; double x233; char *x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; unsigned int x241/* : ? */; out out long x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void x250; out int x251; double x252; char *x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void x260; out int x261; double x262; char *x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void x270; out int x271; double x272; char *x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; float x280; long x281; out void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void x291; out int x292; double x293; char *x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; float x301; long x302; out void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void x312; out int x313; double x314; char *x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void x322; out int x323; double x324; char *x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void x332; out int x333; double x334; char *x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; BOOL x342; out in short x343; void*x344; void*x345; void x346; out int x347; double x348; char *x349; void*x350; void*x351; void*x352; short x353; void*x354; void*x355; void*x356; const void*x357; void*x358; void*x359; BOOL x360; void*x361; void*x362; void*x363; void*x364; void*x365; double x366; void*x367; void*x368; void*x369; long long x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; long x382; void*x383; SEL x384; void*x385; SEL x386; void*x387; void*x388; void*x389; void*x390; void*x391; in void*x392; double x393; void*x394; int x395; void*x396; in void*x397; void*x398; void*x399; unsigned long long x400; void*x401; void*x402; void*x403; void*x404; void*x405; const void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; short x413; void*x414; void*x415; void*x416; double x417; void*x418; SEL x419; void*x420; SEL x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; SEL x429; void*x430; SEL x431; void*x432; void*x433; void*x434; long x435; void*x436; long x437; void*x438; out void*x439; BOOL x440; void*x441; void*x442; void*x443; void*x444; void*x445; out void*x446; const void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; long x454; void*x455; SEL x456; void*x457; SEL x458; void*x459; void*x460; void*x461; void*x462; void*x463; in void*x464; double x465; void*x466; int x467; void*x468; in void*x469; void*x470; void*x471; unsigned long long x472; void*x473; void*x474; void*x475; void*x476; void*x477; const void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; struct x489; void*x490; void*x491; void*x492; short x493; void*x494; void*x495; void*x496; const void*x497; void*x498; void*x499; BOOL x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; short x510; void*x511; void*x512; void*x513; long x514; void*x515; int x516; void*x517; void*x518; void*x519; void*x520; void*x521; unsigned int x522/* : ? */; void*x523; void*x524; void*x525; float x526; void*x527; float x528; void*x529; void*x530; void*x531; const void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; long x539; void*x540; SEL x541; void*x542; SEL x543; void*x544; void*x545; void*x546; void*x547; void*x548; in void*x549; double x550; void*x551; int x552; void*x553; in void*x554; void*x555; void*x556; unsigned long long x557; void*x558; void*x559; void*x560; void*x561; void*x562; const void*x563; void*x564; void*x565; void*x566; void*x567; char *x568; void*x569; void*x570; void*x571; void*x572; void*x573; short x574; void*x575; void*x576; void*x577; double x578; void*x579; SEL x580; void*x581; SEL x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; SEL x590; void*x591; SEL x592; void*x593; void*x594; void*x595; long x596; void*x597; long x598; void*x599; out void*x600; BOOL x601; void*x602; void*x603; void*x604; void*x605; void*x606; out void*x607; const void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; long x615; void*x616; SEL x617; void*x618; SEL x619; void*x620; void*x621; void*x622; void*x623; void*x624; in void*x625; double x626; void*x627; int x628; void*x629; in void*x630; void*x631; void*x632; unsigned long long x633; void*x634; void*x635; void*x636; void*x637; void*x638; const void*x639; void*x640; void*x641; void*x642; void*x643; char *x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; struct x654; void*x655; void*x656; void*x657; short x658; void*x659; void*x660; void*x661; const void*x662; void*x663; void*x664; BOOL x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; in void*x675; double x676; void*x677; int x678; void*x679; in void*x680; void*x681; void*x682; unsigned long long x683; void*x684; void*x685; void*x686; void*x687; void*x688; const void*x689; void*x690; void*x691; void*x692; void*x693; struct x694; void*x695; }*)arg8 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg9 alpha:(float)arg10 scale:(float)arg11 zoomLevel:(float)arg12 numTextures:(unsigned int)arg13 cullingMask:(unsigned int)arg14;
- (void)generateRenderItemsForBuildingShadowsInScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; double x23; void*x24; const void*x25; double x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; long long x33; void*x34; void*x35; long x36; void*x37; oneway void*x38; oneway void*x39; BOOL x40; void*x41; out const void*x42; int x43; long x44; void*x45; void*x46; char *x47; void*x48; void*x49; short x50; void*x51; double x52; SEL x53; SEL x54; void*x55; void*x56; void*x57; SEL x58; SEL x59; void*x60; void*x61; void*x62; void*x63; short x64; void*x65; void*x66; void x67; void*x68; long x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; oneway void*x78; oneway void*x79; BOOL x80; void*x81; out const void*x82; int x83; long x84; void*x85; void*x86; char *x87; void*x88; void*x89; bycopy BOOL x90; BOOL x91; long x92; void*x93; double x94; void*x95; const void*x96; const out void*x97; void*x98; unsigned long x99; int x100; short x101; void*x102; void*x103; void*x104; void*x105; short x106; void*x107; double x108; SEL x109; SEL x110; void*x111; void*x112; void*x113; SEL x114; SEL x115; void*x116; long long x117; void*x118; void*x119; long x120; void*x121; void*x122; out void*x123; oneway void*x124; oneway void*x125; BOOL x126; void*x127; out const void*x128; int x129; long x130; void*x131; void*x132; char *x133; void*x134; void*x135; void*x136; void*x137; const void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; struct  
                float __first_; 
             {} x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; }*)arg3 drawOrder:(unsigned int)arg4;
- (void)generateSpecularRenderItemsForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 flatQueries:(const struct vector<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> >, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x1; struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x2; struct __compressed_pair<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > *, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x_3_1_1; } x3; }*)arg4 pointyQueries:(const struct vector<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> >, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x1; struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x2; struct __compressed_pair<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > *, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x_3_1_1; } x3; }*)arg5 texture:(struct Texture2D { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; int x6; int x7; int x8; int x9; unsigned int x10; struct shared_ptr<const ggl::TextureDataAbstract> { struct TextureDataAbstract {} *x_11_1_1; struct __shared_weak_count {} *x_11_1_2; } x11; bool x12; bool x13; unsigned int x14; unsigned int x15; bool x16; struct shared_ptr<ggl::SamplerState> { struct SamplerState {} *x_17_1_1; struct __shared_weak_count {} *x_17_1_2; } x17; }*)arg6 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg7 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; const void*x25; double x26; void*x27; void*x28; void*x29; const void*x30; void*x31; void*x32; long x33; SEL x34; SEL x35; unsigned long long x36; void*x37; void*x38; const void*x39; unsigned int x40; void*x41; void*x42; void*x43; void*x44; void*x45; char *x46; void*x47; void*x48; short x49; void*x50; double x51; SEL x52; SEL x53; void*x54; void*x55; void*x56; SEL x57; SEL x58; void*x59; long x60; long x61; out BOOL x62; void*x63; void*x64; out const void*x65; void*x66; void*x67; out SEL x68; SEL x69; float x70; void*x71; short x72; void*x73; void*x74; short x75; void*x76; void*x77; const void*x78; double x79; void*x80; void*x81; void*x82; const void*x83; void*x84; void*x85; long x86; SEL x87; SEL x88; unsigned long long x89; void*x90; void*x91; const void*x92; unsigned int x93; void*x94; void*x95; void*x96; void*x97; void*x98; char *x99; void*x100; void*x101; void*x102; void*x103; struct  struct fast_shared_ptr<ggl::QueryItem> { {} x104; void*x105; char *x106; char *x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; short x117; void*x118; const void*x119; BOOL x120; void*x121; void*x122; float x123; void*x124; short x125; void*x126; void*x127; short x128; void*x129; void*x130; const void*x131; double x132; void*x133; void*x134; void*x135; const void*x136; void*x137; void*x138; long x139; SEL x140; SEL x141; unsigned long long x142; void*x143; void*x144; const void*x145; unsigned int x146; void*x147; void*x148; void*x149; void*x150; void*x151; struct  {} x152; void*x153; char *x154; char *x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; short x165; void*x166; const void*x167; BOOL x168; void*x169; void*x170; float x171; void*x172; short x173; void*x174; void*x175; short x176; void*x177; void*x178; const void*x179; double x180; void*x181; void*x182; void*x183; const void*x184; void*x185; void*x186; long x187; SEL x188; SEL x189; unsigned long long x190; void*x191; void*x192; const void*x193; unsigned int x194; void*x195; void*x196; void*x197; void*x198; void*x199; struct  {} x200; void*x201; char *x202; char *x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; short x213; void*x214; const void*x215; BOOL x216; void*x217; void*x218; void*x219; void*x220; BOOL x221; out void*x222; void*x223; const void*x224; short x225; short x226; void*x227; double x228; void*x229; void*x230; void*x231; int x232; const void*x233; void*x234; void*x235; out SEL x236; SEL x237; float x238; void*x239; short x240; void*x241; void*x242; short x243; void*x244; void*x245; const void*x246; double x247; void*x248; void*x249; void*x250; const void*x251; void*x252; void*x253; long x254; SEL x255; SEL x256; unsigned long long x257; void*x258; void*x259; const void*x260; unsigned int x261; void*x262; void*x263; void*x264; void*x265; void*x266; char *x267; char *x268; void*x269; void*x270; short x271; void*x272; double x273; SEL x274; SEL x275; void*x276; void*x277; void*x278; SEL x279; SEL x280; void*x281; long x282; long x283; out BOOL x284; void*x285; void*x286; out const void*x287; void*x288; void*x289; out SEL x290; SEL x291; float x292; void*x293; short x294; void*x295; void*x296; short x297; void*x298; void*x299; const void*x300; double x301; void*x302; void*x303; void*x304; const void*x305; void*x306; void*x307; long x308; SEL x309; SEL x310; unsigned long long x311; void*x312; void*x313; const short x314; void*x315; void*x316; void*x317; const void*x318; void*x319; void*x320; BOOL x321; void*x322; void*x323; void*x324; void*x325; void*x326; double x327; void*x328; void*x329; void*x330; long long x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; long x343; void*x344; SEL x345; void*x346; SEL x347; void*x348; void*x349; void*x350; void*x351; void*x352; in void*x353; double x354; void*x355; int x356; void*x357; in void*x358; void*x359; void*x360; unsigned long long x361; void*x362; void*x363; void*x364; void*x365; void*x366; const void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; short x374; void*x375; void*x376; void*x377; double x378; void*x379; SEL x380; void*x381; SEL x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; SEL x390; void*x391; SEL x392; void*x393; void*x394; void*x395; long x396; void*x397; long x398; void*x399; out void*x400; BOOL x401; void*x402; void*x403; void*x404; void*x405; void*x406; out void*x407; const void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; long x415; void*x416; SEL x417; void*x418; SEL x419; void*x420; void*x421; void*x422; void*x423; void*x424; in void*x425; double x426; void*x427; int x428; void*x429; in void*x430; void*x431; void*x432; unsigned long long x433; void*x434; void*x435; void*x436; void*x437; void*x438; const void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; struct x450; void*x451; void*x452; void*x453; short x454; void*x455; void*x456; void*x457; const void*x458; void*x459; void*x460; BOOL x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; short x471; void*x472; void*x473; void*x474; long x475; void*x476; int x477; void*x478; void*x479; void*x480; void*x481; void*x482; unsigned int x483/* : ? */; void*x484; void*x485; void*x486; float x487; void*x488; float x489; void*x490; void*x491; void*x492; const void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; long x500; void*x501; SEL x502; void*x503; SEL x504; void*x505; void*x506; void*x507; void*x508; void*x509; in void*x510; double x511; void*x512; int x513; void*x514; in void*x515; void*x516; void*x517; unsigned long long x518; void*x519; void*x520; void*x521; void*x522; void*x523; const void*x524; void*x525; void*x526; void*x527; void*x528; char *x529; void*x530; void*x531; void*x532; void*x533; void*x534; short x535; void*x536; void*x537; void*x538; double x539; void*x540; SEL x541; void*x542; SEL x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; SEL x551; void*x552; SEL x553; void*x554; void*x555; void*x556; long x557; void*x558; long x559; void*x560; out void*x561; BOOL x562; void*x563; void*x564; void*x565; void*x566; void*x567; out void*x568; const void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; long x576; void*x577; SEL x578; void*x579; SEL x580; void*x581; void*x582; void*x583; void*x584; void*x585; in void*x586; double x587; void*x588; int x589; void*x590; in void*x591; void*x592; void*x593; unsigned long long x594; void*x595; void*x596; void*x597; void*x598; void*x599; const void*x600; void*x601; void*x602; void*x603; void*x604; char *x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; struct x615; void*x616; void*x617; void*x618; short x619; void*x620; void*x621; void*x622; const void*x623; void*x624; void*x625; BOOL x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; in void*x636; double x637; void*x638; int x639; void*x640; in void*x641; void*x642; void*x643; unsigned long long x644; void*x645; void*x646; void*x647; void*x648; void*x649; const void*x650; void*x651; void*x652; void*x653; void*x654; struct x655; void*x656; }*)arg8 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg9 alpha:(float)arg10 scale:(float)arg11 zoomLevel:(float)arg12 numTextures:(unsigned int)arg13 cullingMask:(unsigned int)arg14;
- (struct BuildingPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getDiffusePointyRoofPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg4 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg5 scale:(float)arg6;
- (struct CompressedMeshPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getDiffuseTopPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg4 scale:(float)arg5;
- (struct BuildingPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getExtrusionDepthPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg4 scale:(float)arg5;
- (struct BuildingPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getExtrusionPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 texture:(struct Texture2D { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; int x6; int x7; int x8; int x9; unsigned int x10; struct shared_ptr<const ggl::TextureDataAbstract> { struct TextureDataAbstract {} *x_11_1_1; struct __shared_weak_count {} *x_11_1_2; } x11; bool x12; bool x13; unsigned int x14; unsigned int x15; bool x16; struct shared_ptr<ggl::SamplerState> { struct SamplerState {} *x_17_1_1; struct __shared_weak_count {} *x_17_1_2; } x17; }*)arg3 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg4 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg5 scale:(float)arg6;
- (struct CompressedMeshPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getFoggedDiffuseTopPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg4 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg5 scale:(float)arg6;
- (struct BuildingPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getFoggedExtrusionPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 texture:(struct Texture2D { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; int x6; int x7; int x8; int x9; unsigned int x10; struct shared_ptr<const ggl::TextureDataAbstract> { struct TextureDataAbstract {} *x_11_1_1; struct __shared_weak_count {} *x_11_1_2; } x11; bool x12; bool x13; unsigned int x14; unsigned int x15; bool x16; struct shared_ptr<ggl::SamplerState> { struct SamplerState {} *x_17_1_1; struct __shared_weak_count {} *x_17_1_2; } x17; }*)arg4 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg5 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg6 scale:(float)arg7;
- (struct CompressedMeshPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getFoggedSpecularTopPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg4 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg5 scale:(float)arg6;
- (struct BuildingPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getPointyRoofDepthPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg4 scale:(float)arg5;
- (struct BuildingPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getSpecularPointyRoofPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg4 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg5 scale:(float)arg6;
- (struct CompressedMeshPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getSpecularTopPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg4 scale:(float)arg5;
- (struct CompressedMeshPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getTopDepthPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg4 scale:(float)arg5;
- (void)gglLayoutScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (double)heightAtPoint:(struct Matrix<double, 3, 1> { double x1[3]; })arg1;
- (id)heightCache;
- (id)initWithTarget:(id)arg1 sharedResources:(id)arg2;
- (bool)isFogEnabled;
- (id)landmarksModel;
- (unsigned long long)mapLayerPosition;
- (double)maxTileHeightAtPoint:(struct Mercator2<double> { double x1[2]; })arg1;
- (void)removePersistingExitingTiles:(id)arg1;
- (void)reserveStencilRangeForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)reset;
- (void)resetPools;
- (void)setActive:(bool)arg1;
- (void)setBuildingChangeoverZ:(float)arg1;
- (void)setBuildingMode:(int)arg1;
- (void)setBuildingMode:(int)arg1 animated:(bool)arg2;
- (void)setDelegate:(id)arg1;
- (void)setFadeTiles:(bool)arg1;
- (void)setFogEnabled:(bool)arg1;
- (void)setLandmarksModel:(id)arg1;
- (void)setSkyModel:(id)arg1;
- (void)setStyleManager:(struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (id)skyModel;
- (struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x1; struct __shared_weak_count {} *x2; })styleManager;
- (void)stylesheetDidChange;
- (void)updateFadeParametersWithLayoutContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg1;
- (bool)wantsCategorizedSourceTiles;
- (void)willStartDrawingTiles:(id)arg1;
- (void)willStopDrawingTiles:(id)arg1;

@end
