/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKGlobeAnnotationTrackingCameraController : VKAnnotationTrackingCameraController {
    struct Anchor { int (**x1)(); } * _anchor;
    struct { 
        double latitude; 
        double longitude; 
    }  _currentAnimationEndCoordinate;
    struct { 
        double latitude; 
        double longitude; 
    }  _currentAnimationPresentationStartCoordinate;
    struct { 
        double latitude; 
        double longitude; 
        double altitude; 
    }  _currentAnimationStartCoordinate;
    struct GlobeView { int (**x1)(); struct AnchorManagerPrivate {} *x2; struct Scene {} *x3; struct Context {} *x4; struct DtmCacheNode {} *x5; struct DtmRequestManager {} *x6; struct FreezeViewNode {} *x7; struct Projection { struct Perspective { double x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; } x_8_1_1; struct Ortho { double x_2_2_1; double x_2_2_2; double x_2_2_3; double x_2_2_4; double x_2_2_5; double x_2_2_6; } x_8_1_2; bool x_8_1_3; bool x_8_1_4; } x8; struct FrameLatLon { double x_9_1_1; double x_9_1_2; double x_9_1_3; double x_9_1_4; struct PositionLatLonAlt { double x_5_2_1; double x_5_2_2; double x_5_2_3; } x_9_1_5; } x9; bool x10; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_11_1_1; } x11; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_12_1_1; } x12; struct vector<altitude::TileBound, std::__1::allocator<altitude::TileBound> > { struct TileBound {} *x_13_1_1; struct TileBound {} *x_13_1_2; struct __compressed_pair<altitude::TileBound *, std::__1::allocator<altitude::TileBound> > { struct TileBound {} *x_3_2_1; } x_13_1_3; } x13; struct vector<altitude::SimpleTileKey, std::__1::allocator<altitude::SimpleTileKey> > { struct SimpleTileKey {} *x_14_1_1; struct SimpleTileKey {} *x_14_1_2; struct __compressed_pair<altitude::SimpleTileKey *, std::__1::allocator<altitude::SimpleTileKey> > { struct SimpleTileKey {} *x_3_2_1; } x_14_1_3; } x14; bool x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; struct VKClassicGlobeCanvas { } *x20; bool x21; bool x22; int x23; struct AnimationManager { struct AnimationTimer { struct AnimationReferenceTimer {} *x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; } x_24_1_1; double x_24_1_2; struct vector<altitude::AnimationObjectHolder, std::__1::allocator<altitude::AnimationObjectHolder> > { struct AnimationObjectHolder {} *x_3_2_1; struct AnimationObjectHolder {} *x_3_2_2; struct __compressed_pair<altitude::AnimationObjectHolder *, std::__1::allocator<altitude::AnimationObjectHolder> > { struct AnimationObjectHolder {} *x_3_3_1; } x_3_2_3; } x_24_1_3; } x24; struct Timer { double x_25_1_1; } x25; double x26; bool x27; double x28; double x29; double x30; struct FrameLatLon { double x_31_1_1; double x_31_1_2; double x_31_1_3; double x_31_1_4; struct PositionLatLonAlt { double x_5_2_1; double x_5_2_2; double x_5_2_3; } x_31_1_5; } x31; struct C3mmRequestManager {} *x32; struct RenderableGroup {} *x33; unsigned int x34; double x35; bool x36; bool x37; struct LabelDataManagerPrivate {} *x38; bool x39; bool x40; bool x41; bool x42; struct RouteLineManager {} *x43; struct GlobeCleanupLoader {} *x44; struct CompleteGlobeTileSetCullingGraph {} *x45; struct CompleteGlobeTileSetLoader {} *x46; struct TileSetNode {} *x47; struct GlobeTileRenderManager {} *x48; struct CullingNode {} *x49; struct EarthAdjustedViewNode {} *x50; struct UserViewNode {} *x51; struct View {} *x52; struct BasicViewNode {} *x53; struct GlobeMainViewNode {} *x54; struct C3bRequestManager {} *x55; float x56; bool x57; struct shared_ptr<bool> { bool *x_58_1_1; struct __shared_weak_count {} *x_58_1_2; } x58; struct HeightRequestManager {} *x59; struct map<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d>, altitude::GlobeView::LessVector2i, std::__1::allocator<std::__1::pair<const gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> > > > { struct __tree<std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, std::__1::__map_value_compare<gm::Matrix<int, 2, 1>, std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, altitude::GlobeView::LessVector2i, true>, std::__1::allocator<std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> > > > { struct __tree_node<std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gm::Matrix<int, 2, 1>, std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, altitude::GlobeView::LessVector2i, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_60_1_1; } x60; struct Mutex { void *x_61_1_1; } x61; struct shared_ptr<altitude::Stylesheet> { struct Stylesheet {} *x_62_1_1; struct __shared_weak_count {} *x_62_1_2; } x62; struct FlyoverTour {} *x63; bool x64; struct TriggerManager {} *x65; struct Viewport { int x_66_1_1; int x_66_1_2; int x_66_1_3; int x_66_1_4; } x66; struct AnimationReferenceTimer { double x_67_1_1; double x_67_1_2; double x_67_1_3; } x67; bool x68; struct set<altitude::ManifestListener *, std::__1::less<altitude::ManifestListener *>, std::__1::allocator<altitude::ManifestListener *> > { struct __tree<altitude::ManifestListener *, std::__1::less<altitude::ManifestListener *>, std::__1::allocator<altitude::ManifestListener *> > { struct __tree_node<altitude::ManifestListener *, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<altitude::ManifestListener *, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::less<altitude::ManifestListener *> > { unsigned long long x_3_3_1; } x_1_2_3; } x_69_1_1; } x69; struct GeoServicesLoader {} *x70; struct ManifestManager {} *x71; struct GlobeDispatch {} *x72; } * _globeView;
}

@property (nonatomic) struct GlobeView { int (**x1)(); struct AnchorManagerPrivate {} *x2; struct Scene {} *x3; struct Context {} *x4; struct DtmCacheNode {} *x5; struct DtmRequestManager {} *x6; struct FreezeViewNode {} *x7; struct Projection { struct Perspective { double x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; } x_8_1_1; struct Ortho { double x_2_2_1; double x_2_2_2; double x_2_2_3; double x_2_2_4; double x_2_2_5; double x_2_2_6; } x_8_1_2; bool x_8_1_3; bool x_8_1_4; } x8; struct FrameLatLon { double x_9_1_1; double x_9_1_2; double x_9_1_3; double x_9_1_4; struct PositionLatLonAlt { double x_5_2_1; double x_5_2_2; double x_5_2_3; } x_9_1_5; } x9; bool x10; /* Warning: unhandled struct encoding: '{basic_string<char' */ struct x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; short x20; void*x21; void*x22; void*x23; const void*x24; void*x25; void*x26; BOOL x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; BOOL x37; void*x38; out void*x39; void*x40; void*x41; void*x42; void*x43; const void*x44; void*x45; void*x46; short x47; void*x48; short x49; void*x50; void*x51; void*x52; double x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; int x61; void*x62; const void*x63; void*x64; void*x65; void*x66; void*x67; in void*x68; short x69; void*x70; int x71; void*x72; void*x73; void*x74; in void*x75; void*x76; void*x77; double x78; void*x79; void*x80; void*x81; long x82; void*x83; out void*x84; in void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; short x92; void*x93; void*x94; void*x95; double x96; void*x97; SEL x98; void*x99; SEL x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; SEL x108; void*x109; SEL x110; void*x111; long x112; void*x113; void*x114; void*x115; short x116; void*x117; short x118; void*x119; void*x120; void*x121; void*x122; void*x123; long x124; void*x125; void*x126; void*x127; int x128; void*x129; void*x130; void*x131; void*x132; void*x133; double x134; void*x135; void*x136; void*x137; SEL x138; void*x139; SEL x140; void*x141; void*x142; void*x143; void*x144; void*x145; in void*x146; int x147; void*x148; float x149; void*x150; void*x151; void*x152; short x153; void*x154; void*x155; void*x156; unsigned long x157; void*x158; int x159; void*x160; short x161; void*x162; void*x163; void*x164; void*x165; void*x166; in void*x167; void*x168; void*x169; const void*x170; void*x171; void*x172; char *x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; struct x183; void*x184; void*x185; void*x186; void*x187; void*x188; in void*x189; short x190; void*x191; int x192; void*x193; void*x194; void*x195; in void*x196; void*x197; void*x198; double x199; void*x200; void*x201; void*x202; long x203; void*x204; out void*x205; in void*x206; void*x207; void*x208; void*x209; void*x210; long x211; void*x212; out void*x213; in void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; }*globeView; /* unknown property attribute:  std::__1::less<altitude::ManifestListener *> >=Q}}}^{GeoServicesLoader}^{ManifestManager}^{GlobeDispatch}} */

- (struct Matrix<int, 2, 1> { int x1[2]; })_centerCursor;
- (void)_goToAnnotationAnimated:(bool)arg1 duration:(double)arg2 isInitial:(bool)arg3;
- (void)_rotateToHeadingAnimated:(bool)arg1 duration:(double)arg2;
- (void)dealloc;
- (struct GlobeView { int (**x1)(); struct AnchorManagerPrivate {} *x2; struct Scene {} *x3; struct Context {} *x4; struct DtmCacheNode {} *x5; struct DtmRequestManager {} *x6; struct FreezeViewNode {} *x7; struct Projection { struct Perspective { double x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; } x_8_1_1; struct Ortho { double x_2_2_1; double x_2_2_2; double x_2_2_3; double x_2_2_4; double x_2_2_5; double x_2_2_6; } x_8_1_2; bool x_8_1_3; bool x_8_1_4; } x8; struct FrameLatLon { double x_9_1_1; double x_9_1_2; double x_9_1_3; double x_9_1_4; struct PositionLatLonAlt { double x_5_2_1; double x_5_2_2; double x_5_2_3; } x_9_1_5; } x9; bool x10; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_11_1_1; } x11; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_12_1_1; } x12; struct vector<altitude::TileBound, std::__1::allocator<altitude::TileBound> > { struct TileBound {} *x_13_1_1; struct TileBound {} *x_13_1_2; struct __compressed_pair<altitude::TileBound *, std::__1::allocator<altitude::TileBound> > { struct TileBound {} *x_3_2_1; } x_13_1_3; } x13; struct vector<altitude::SimpleTileKey, std::__1::allocator<altitude::SimpleTileKey> > { struct SimpleTileKey {} *x_14_1_1; struct SimpleTileKey {} *x_14_1_2; struct __compressed_pair<altitude::SimpleTileKey *, std::__1::allocator<altitude::SimpleTileKey> > { struct SimpleTileKey {} *x_3_2_1; } x_14_1_3; } x14; bool x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; struct VKClassicGlobeCanvas { } *x20; bool x21; bool x22; int x23; struct AnimationManager { struct AnimationTimer { struct AnimationReferenceTimer {} *x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; } x_24_1_1; double x_24_1_2; struct vector<altitude::AnimationObjectHolder, std::__1::allocator<altitude::AnimationObjectHolder> > { struct AnimationObjectHolder {} *x_3_2_1; struct AnimationObjectHolder {} *x_3_2_2; struct __compressed_pair<altitude::AnimationObjectHolder *, std::__1::allocator<altitude::AnimationObjectHolder> > { struct AnimationObjectHolder {} *x_3_3_1; } x_3_2_3; } x_24_1_3; } x24; struct Timer { double x_25_1_1; } x25; double x26; bool x27; double x28; double x29; double x30; struct FrameLatLon { double x_31_1_1; double x_31_1_2; double x_31_1_3; double x_31_1_4; struct PositionLatLonAlt { double x_5_2_1; double x_5_2_2; double x_5_2_3; } x_31_1_5; } x31; struct C3mmRequestManager {} *x32; struct RenderableGroup {} *x33; unsigned int x34; double x35; bool x36; bool x37; struct LabelDataManagerPrivate {} *x38; bool x39; bool x40; bool x41; bool x42; struct RouteLineManager {} *x43; struct GlobeCleanupLoader {} *x44; struct CompleteGlobeTileSetCullingGraph {} *x45; struct CompleteGlobeTileSetLoader {} *x46; struct TileSetNode {} *x47; struct GlobeTileRenderManager {} *x48; struct CullingNode {} *x49; struct EarthAdjustedViewNode {} *x50; struct UserViewNode {} *x51; struct View {} *x52; struct BasicViewNode {} *x53; struct GlobeMainViewNode {} *x54; struct C3bRequestManager {} *x55; float x56; bool x57; struct shared_ptr<bool> { bool *x_58_1_1; struct __shared_weak_count {} *x_58_1_2; } x58; struct HeightRequestManager {} *x59; struct map<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d>, altitude::GlobeView::LessVector2i, std::__1::allocator<std::__1::pair<const gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> > > > { struct __tree<std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, std::__1::__map_value_compare<gm::Matrix<int, 2, 1>, std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, altitude::GlobeView::LessVector2i, true>, std::__1::allocator<std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> > > > { struct __tree_node<std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gm::Matrix<int, 2, 1>, std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, altitude::GlobeView::LessVector2i, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_60_1_1; } x60; struct Mutex { void *x_61_1_1; } x61; struct shared_ptr<altitude::Stylesheet> { struct Stylesheet {} *x_62_1_1; struct __shared_weak_count {} *x_62_1_2; } x62; struct FlyoverTour {} *x63; bool x64; struct TriggerManager {} *x65; struct Viewport { int x_66_1_1; int x_66_1_2; int x_66_1_3; int x_66_1_4; } x66; struct AnimationReferenceTimer { double x_67_1_1; double x_67_1_2; double x_67_1_3; } x67; bool x68; struct set<altitude::ManifestListener *, std::__1::less<altitude::ManifestListener *>, std::__1::allocator<altitude::ManifestListener *> > { struct __tree<altitude::ManifestListener *, std::__1::less<altitude::ManifestListener *>, std::__1::allocator<altitude::ManifestListener *> > { struct __tree_node<altitude::ManifestListener *, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<altitude::ManifestListener *, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::less<altitude::ManifestListener *> > { unsigned long long x_3_3_1; } x_1_2_3; } x_69_1_1; } x69; struct GeoServicesLoader {} *x70; struct ManifestManager {} *x71; struct GlobeDispatch {} *x72; }*)globeView;
- (id)init;
- (void)setGlobeView:(struct GlobeView { int (**x1)(); struct AnchorManagerPrivate {} *x2; struct Scene {} *x3; struct Context {} *x4; struct DtmCacheNode {} *x5; struct DtmRequestManager {} *x6; struct FreezeViewNode {} *x7; struct Projection { struct Perspective { double x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; } x_8_1_1; struct Ortho { double x_2_2_1; double x_2_2_2; double x_2_2_3; double x_2_2_4; double x_2_2_5; double x_2_2_6; } x_8_1_2; bool x_8_1_3; bool x_8_1_4; } x8; struct FrameLatLon { double x_9_1_1; double x_9_1_2; double x_9_1_3; double x_9_1_4; struct PositionLatLonAlt { double x_5_2_1; double x_5_2_2; double x_5_2_3; } x_9_1_5; } x9; bool x10; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_11_1_1; } x11; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_12_1_1; } x12; struct vector<altitude::TileBound, std::__1::allocator<altitude::TileBound> > { struct TileBound {} *x_13_1_1; struct TileBound {} *x_13_1_2; struct __compressed_pair<altitude::TileBound *, std::__1::allocator<altitude::TileBound> > { struct TileBound {} *x_3_2_1; } x_13_1_3; } x13; struct vector<altitude::SimpleTileKey, std::__1::allocator<altitude::SimpleTileKey> > { struct SimpleTileKey {} *x_14_1_1; struct SimpleTileKey {} *x_14_1_2; struct __compressed_pair<altitude::SimpleTileKey *, std::__1::allocator<altitude::SimpleTileKey> > { struct SimpleTileKey {} *x_3_2_1; } x_14_1_3; } x14; bool x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; struct VKClassicGlobeCanvas { } *x20; bool x21; bool x22; int x23; struct AnimationManager { struct AnimationTimer { struct AnimationReferenceTimer {} *x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; } x_24_1_1; double x_24_1_2; struct vector<altitude::AnimationObjectHolder, std::__1::allocator<altitude::AnimationObjectHolder> > { struct AnimationObjectHolder {} *x_3_2_1; struct AnimationObjectHolder {} *x_3_2_2; struct __compressed_pair<altitude::AnimationObjectHolder *, std::__1::allocator<altitude::AnimationObjectHolder> > { struct AnimationObjectHolder {} *x_3_3_1; } x_3_2_3; } x_24_1_3; } x24; struct Timer { double x_25_1_1; } x25; double x26; bool x27; double x28; double x29; double x30; struct FrameLatLon { double x_31_1_1; double x_31_1_2; double x_31_1_3; double x_31_1_4; struct PositionLatLonAlt { double x_5_2_1; double x_5_2_2; double x_5_2_3; } x_31_1_5; } x31; struct C3mmRequestManager {} *x32; struct RenderableGroup {} *x33; unsigned int x34; double x35; bool x36; bool x37; struct LabelDataManagerPrivate {} *x38; bool x39; bool x40; bool x41; bool x42; struct RouteLineManager {} *x43; struct GlobeCleanupLoader {} *x44; struct CompleteGlobeTileSetCullingGraph {} *x45; struct CompleteGlobeTileSetLoader {} *x46; struct TileSetNode {} *x47; struct GlobeTileRenderManager {} *x48; struct CullingNode {} *x49; struct EarthAdjustedViewNode {} *x50; struct UserViewNode {} *x51; struct View {} *x52; struct BasicViewNode {} *x53; struct GlobeMainViewNode {} *x54; struct C3bRequestManager {} *x55; float x56; bool x57; struct shared_ptr<bool> { bool *x_58_1_1; struct __shared_weak_count {} *x_58_1_2; } x58; struct HeightRequestManager {} *x59; struct map<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d>, altitude::GlobeView::LessVector2i, std::__1::allocator<std::__1::pair<const gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> > > > { struct __tree<std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, std::__1::__map_value_compare<gm::Matrix<int, 2, 1>, std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, altitude::GlobeView::LessVector2i, true>, std::__1::allocator<std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> > > > { struct __tree_node<std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gm::Matrix<int, 2, 1>, std::__1::__value_type<gm::Matrix<int, 2, 1>, std::__1::pair<bool, altitude::Position3d> >, altitude::GlobeView::LessVector2i, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_60_1_1; } x60; struct Mutex { void *x_61_1_1; } x61; struct shared_ptr<altitude::Stylesheet> { struct Stylesheet {} *x_62_1_1; struct __shared_weak_count {} *x_62_1_2; } x62; struct FlyoverTour {} *x63; bool x64; struct TriggerManager {} *x65; struct Viewport { int x_66_1_1; int x_66_1_2; int x_66_1_3; int x_66_1_4; } x66; struct AnimationReferenceTimer { double x_67_1_1; double x_67_1_2; double x_67_1_3; } x67; bool x68; struct set<altitude::ManifestListener *, std::__1::less<altitude::ManifestListener *>, std::__1::allocator<altitude::ManifestListener *> > { struct __tree<altitude::ManifestListener *, std::__1::less<altitude::ManifestListener *>, std::__1::allocator<altitude::ManifestListener *> > { struct __tree_node<altitude::ManifestListener *, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<altitude::ManifestListener *, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::less<altitude::ManifestListener *> > { unsigned long long x_3_3_1; } x_1_2_3; } x_69_1_1; } x69; struct GeoServicesLoader {} *x70; struct ManifestManager {} *x71; struct GlobeDispatch {} *x72; }*)arg1;

@end
