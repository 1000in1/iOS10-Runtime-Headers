/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class VKStylesheet, <VKLabelModelDelegate>, NSArray;

@interface VKLabelModel : VKModelObject <LabelManagerDelegate, GEOResourceManifestTileGroupObserver, VKMapLayer, VKStylesheetObserver, VKMapModeObserver> {
    BOOL _debugSkipLabels;
    <VKLabelModelDelegate> *_delegate;
    BOOL _drawLabels;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _observerIsReadyHook;

    struct shared_ptr<vk::LabelManager> { 
        struct LabelManager {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    } _labelManager;
    int _layoutStamp;
    struct map<VKTileKey, std::__1::shared_ptr<vk::StandardInfoMapTile>, TileKeyComparer, std::__1::allocator<std::__1::pair<const VKTileKey, std::__1::shared_ptr<vk::StandardInfoMapTile> > > > { 
        struct __tree<std::__1::pair<VKTileKey, std::__1::shared_ptr<vk::StandardInfoMapTile> >, std::__1::__map_value_compare<VKTileKey, std::__1::shared_ptr<vk::StandardInfoMapTile>, TileKeyComparer, true>, std::__1::allocator<std::__1::pair<VKTileKey, std::__1::shared_ptr<vk::StandardInfoMapTile> > > > { 
            struct __tree_node<std::__1::pair<VKTileKey, std::__1::shared_ptr<vk::StandardInfoMapTile> >, void *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<VKTileKey, std::__1::shared_ptr<vk::StandardInfoMapTile> >, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<VKTileKey, std::__1::shared_ptr<vk::StandardInfoMapTile>, TileKeyComparer, true> > { 
                unsigned long __first_; 
            } __pair3_; 
        } __tree_; 
    } _infoMapTiles;
    struct vector<std::__1::shared_ptr<vk::InfoMapTile>, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile> > > { 
        struct shared_ptr<vk::InfoMapTile> {} *__begin_; 
        struct shared_ptr<vk::InfoMapTile> {} *__end_; 
        struct __compressed_pair<std::__1::shared_ptr<vk::InfoMapTile> *, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile> > > { 
            struct shared_ptr<vk::InfoMapTile> {} *__first_; 
        } __end_cap_; 
    } _currentTiles;
    bool_inRealistic;
}

@property <VKLabelModelDelegate> * delegate;
@property BOOL drawLabels;
@property BOOL localizeLabels;
@property int labelScaleFactor;
@property BOOL labelMarkerSelectionEnabled;
@property(readonly) struct shared_ptr<vk::LabelManager> { struct LabelManager {} *x1; struct __shared_weak_count {} *x2; } labelManager;
@property int shieldSize;
@property int navigationShieldSize;
@property int shieldIdiom;
@property(retain) NSArray * alwaysVisibleTrafficIncidents;
@property(readonly) VKStylesheet * stylesheet;

+ (BOOL)reloadOnStylesheetChange;

- (BOOL)drawLabels;
- (void)forEachDisplayedLabel:(id)arg1;
- (void)labelManager:(struct LabelManager { int (**x1)(); struct weak_ptr<vk::LabelManager> { struct LabelManager {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; id x3; unsigned int x4; int x5; int x6; boolx7; boolx8; boolx9; boolx10; boolx11; boolx12; boolx13; boolx14; boolx15; boolx16; boolx17; boolx18; boolx19; boolx20; boolx21; boolx22; boolx23; struct Vec3Imp<double> { double x_24_1_1; double x_24_1_2; double x_24_1_3; } x24; struct Vec3Imp<double> { double x_25_1_1; double x_25_1_2; double x_25_1_3; } x25; struct Vec3Imp<double> { double x_26_1_1; double x_26_1_2; double x_26_1_3; } x26; struct Vec3Imp<double> { double x_27_1_1; double x_27_1_2; double x_27_1_3; } x27; struct Vec3Imp<double> { double x_28_1_1; double x_28_1_2; double x_28_1_3; } x28; double x29; double x30; double x31; double x32; struct { double x_33_1_1[4][4]; } x33; struct Mat4Imp<double> { double x_34_1_1[16]; } x34; struct CGSize { float x_35_1_1; float x_35_1_2; } x35; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_36_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_36_1_2; } x36; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_37_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_37_1_2; } x37; float x38; float x39; float x40; unsigned long long x41; double x42[5]; double x43; int x44; struct vector<std::__1::shared_ptr<vk::InfoMapTile>, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile> > > { struct shared_ptr<vk::InfoMapTile> {} *x_45_1_1; struct shared_ptr<vk::InfoMapTile> {} *x_45_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::InfoMapTile> *, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile> > > { struct shared_ptr<vk::InfoMapTile> {} *x_3_2_1; } x_45_1_3; } x45; struct InfoLabelFeaturePool { struct mutex { struct _opaque_pthread_mutex_t { long x_1_3_1; BOOL x_1_3_2[40]; } x_1_2_1; } x_46_1_1; struct map<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, vk_allocator<std::__1::pair<const vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value> > > { struct __tree<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, true>, vk_allocator<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value> > > { struct __tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_2_2_1; } x_46_1_2; struct map<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, vk_allocator<std::__1::pair<const vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value> > > { struct __tree<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, true>, vk_allocator<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value> > > { struct __tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_3_2_1; } x_46_1_3; } x46; struct RoadLabelPool { struct map<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, vk_allocator<std::__1::pair<const std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true>, vk_allocator<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_47_1_1; } x47; struct PointLabelPool { struct map<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, vk_allocator<std::__1::pair<const std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true>, vk_allocator<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_48_1_1; } x48; struct TrafficIncidentLabelPool { struct vector<std::__1::shared_ptr<vk::InfoLabel>, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_1_2_1; struct shared_ptr<vk::InfoLabel> {} *x_1_2_2; struct __compressed_pair<std::__1::shared_ptr<vk::InfoLabel> *, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_3_3_1; } x_1_2_3; } x_49_1_1; } x49; struct vector<std::__1::shared_ptr<vk::InfoLabel>, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_50_1_1; struct shared_ptr<vk::InfoLabel> {} *x_50_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::InfoLabel> *, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_3_2_1; } x_50_1_3; } x50; struct vector<vk::InfoLabel *, vk_allocator<vk::InfoLabel *> > { struct InfoLabel {} **x_51_1_1; struct InfoLabel {} **x_51_1_2; struct __compressed_pair<vk::InfoLabel **, vk_allocator<vk::InfoLabel *> > { struct InfoLabel {} **x_3_2_1; } x_51_1_3; } x51; struct FontAtlas { int (**x_52_1_1)(); struct shared_ptr<vk::FontAtlasPage> { struct FontAtlasPage {} *x_2_2_1; struct __shared_weak_count {} *x_2_2_2; } x_52_1_2; struct vector<std::__1::shared_ptr<vk::FontAtlasPage>, vk_allocator<std::__1::shared_ptr<vk::FontAtlasPage> > > { struct shared_ptr<vk::FontAtlasPage> {} *x_3_2_1; struct shared_ptr<vk::FontAtlasPage> {} *x_3_2_2; struct __compressed_pair<std::__1::shared_ptr<vk::FontAtlasPage> *, vk_allocator<std::__1::shared_ptr<vk::FontAtlasPage> > > { struct shared_ptr<vk::FontAtlasPage> {} *x_3_3_1; } x_3_2_3; } x_52_1_3; struct FontAtlasCell {} *x_52_1_4; struct FontAtlasCell {} *x_52_1_5; int x_52_1_6; struct CGColor {} *x_52_1_7; struct CGContext {} *x_52_1_8; void *x_52_1_9; unsigned int x_52_1_10; unsigned int x_52_1_11; unsigned int x_52_1_12; struct FontGlyphCache {} *x_52_1_13; } x52; struct LabelMesh { struct vector<vk::IconLabelPart *, vk_allocator<vk::IconLabelPart *> > { struct IconLabelPart {} **x_1_2_1; struct IconLabelPart {} **x_1_2_2; struct __compressed_pair<vk::IconLabelPart **, vk_allocator<vk::IconLabelPart *> > { struct IconLabelPart {} **x_3_3_1; } x_1_2_3; } x_53_1_1; struct vector<vk::LabelMesh::BufferRange, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_2_2_1; struct BufferRange {} *x_2_2_2; struct __compressed_pair<vk::LabelMesh::BufferRange *, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_3_3_1; } x_2_2_3; } x_53_1_2; struct VGLIconMeshVAO { int (**x_3_2_1)(); struct vector<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad> > { struct VertexQuad {} *x_2_3_1; struct VertexQuad {} *x_2_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad> > { struct VertexQuad {} *x_3_4_1; } x_2_3_3; } x_3_2_2; struct vector<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad> > { struct IndicesQuad {} *x_3_3_1; struct IndicesQuad {} *x_3_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad> > { struct IndicesQuad {} *x_3_4_1; } x_3_3_3; } x_3_2_3; unsigned int x_3_2_4; id x_3_2_5; id x_3_2_6; id x_3_2_7; unsigned int x_3_2_8; boolx_3_2_9; boolx_3_2_10; } x_53_1_3; struct vector<vk::TextLabelPart *, vk_allocator<vk::TextLabelPart *> > { struct TextLabelPart {} **x_4_2_1; struct TextLabelPart {} **x_4_2_2; struct __compressed_pair<vk::TextLabelPart **, vk_allocator<vk::TextLabelPart *> > { struct TextLabelPart {} **x_3_3_1; } x_4_2_3; } x_53_1_4; struct vector<vk::LabelMesh::BufferRange, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_5_2_1; struct BufferRange {} *x_5_2_2; struct __compressed_pair<vk::LabelMesh::BufferRange *, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_3_3_1; } x_5_2_3; } x_53_1_5; struct VGLTextMeshVAO { int (**x_6_2_1)(); struct vector<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad> > { struct VertexQuad {} *x_2_3_1; struct VertexQuad {} *x_2_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad> > { struct VertexQuad {} *x_3_4_1; } x_2_3_3; } x_6_2_2; struct vector<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad> > { struct IndicesQuad {} *x_3_3_1; struct IndicesQuad {} *x_3_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad> > { struct IndicesQuad {} *x_3_4_1; } x_3_3_3; } x_6_2_3; unsigned int x_6_2_4; id x_6_2_5; id x_6_2_6; id x_6_2_7; unsigned int x_6_2_8; boolx_6_2_9; boolx_6_2_10; } x_53_1_6; struct FontAtlas {} *x_53_1_7; id x_53_1_8; id x_53_1_9; boolx_53_1_10; } x53; struct LabelStyleCache { struct mutex { struct _opaque_pthread_mutex_t { long x_1_3_1; BOOL x_1_3_2[40]; } x_1_2_1; } x_54_1_1; float x_54_1_2; boolx_54_1_3; int x_54_1_4; int x_54_1_5; int x_54_1_6; struct _retain_ptr<VKStylesheet *, geo::_retain_objc, geo::_release_objc> { int (**x_7_2_1)(); id x_7_2_2; struct _retain_objc { } x_7_2_3; struct _release_objc { } x_7_2_4; } x_54_1_7; boolx_54_1_8; struct _retain_ptr<VKStyleResolutionSession *, geo::_retain_objc, geo::_release_objc> { int (**x_9_2_1)(); id x_9_2_2; struct _retain_objc { } x_9_2_3; struct _release_objc { } x_9_2_4; } x_54_1_9; struct map<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, vk_allocator<std::__1::pair<VKLabelDrawStyle *const, std::__1::shared_ptr<vk::LabelStyle> > > > { struct __tree<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> >, std::__1::__map_value_compare<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, true>, vk_allocator<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> > > > { struct __tree_node<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> >, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_10_2_1; } x_54_1_10; } x54; struct InfoLabelCollider { struct vector<vk::CollisionItem, vk_allocator<vk::CollisionItem> > { struct CollisionItem {} *x_1_2_1; struct CollisionItem {} *x_1_2_2; struct __compressed_pair<vk::CollisionItem *, vk_allocator<vk::CollisionItem> > { struct CollisionItem {} *x_3_3_1; } x_1_2_3; } x_55_1_1; struct vector<vk::CollisionPair, vk_allocator<vk::CollisionPair> > { struct CollisionPair {} *x_2_2_1; struct CollisionPair {} *x_2_2_2; struct __compressed_pair<vk::CollisionPair *, vk_allocator<vk::CollisionPair> > { struct CollisionPair {} *x_3_3_1; } x_2_2_3; } x_55_1_2; } x55; struct InfoOcclusionTester { int (**x_56_1_1)(); struct queue<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > > { struct deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { struct __split_buffer<std::__1::shared_ptr<vk::InfoOcclusionQuery> *, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_1; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_2; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_3; struct __compressed_pair<std::__1::shared_ptr<vk::InfoOcclusionQuery> **, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_4_5_1; } x_1_4_4; } x_1_3_1; unsigned int x_1_3_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { unsigned long x_3_4_1; } x_1_3_3; } x_2_2_1; } x_56_1_2; struct queue<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > > { struct deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { struct __split_buffer<std::__1::shared_ptr<vk::InfoOcclusionQuery> *, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_1; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_2; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_3; struct __compressed_pair<std::__1::shared_ptr<vk::InfoOcclusionQuery> **, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_4_5_1; } x_1_4_4; } x_1_3_1; unsigned int x_1_3_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { unsigned long x_3_4_1; } x_1_3_3; } x_3_2_1; } x_56_1_3; struct queue<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int> > > { struct deque<unsigned int, std::__1::allocator<unsigned int> > { struct __split_buffer<unsigned int *, std::__1::allocator<unsigned int *> > { unsigned int **x_1_4_1; unsigned int **x_1_4_2; unsigned int **x_1_4_3; struct __compressed_pair<unsigned int **, std::__1::allocator<unsigned int *> > { unsigned int **x_4_5_1; } x_1_4_4; } x_1_3_1; unsigned int x_1_3_2; struct __compressed_pair<unsigned long, std::__1::allocator<unsigned int> > { unsigned long x_3_4_1; } x_1_3_3; } x_4_2_1; } x_56_1_4; id x_56_1_5; unsigned int x_56_1_6; boolx_56_1_7; struct { double x_8_2_1[4][4]; } x_56_1_8; } x56; struct shared_ptr<vk::LabelTrafficTilePool> { struct LabelTrafficTilePool {} *x_57_1_1; struct __shared_weak_count {} *x_57_1_2; } x57; struct vector<std::__1::shared_ptr<vk::LabelIcon>, vk_allocator<std::__1::shared_ptr<vk::LabelIcon> > > { struct shared_ptr<vk::LabelIcon> {} *x_58_1_1; struct shared_ptr<vk::LabelIcon> {} *x_58_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::LabelIcon> *, vk_allocator<std::__1::shared_ptr<vk::LabelIcon> > > { struct shared_ptr<vk::LabelIcon> {} *x_3_2_1; } x_58_1_3; } x58; struct shared_ptr<vk::LabelManagerNotifierHook> { struct LabelManagerNotifierHook {} *x_59_1_1; struct __shared_weak_count {} *x_59_1_2; } x59; unsigned int x60; unsigned int x61; unsigned int x62; double x63; double x64; boolx65; float x66; int x67; struct shared_ptr<vk::InfoLabel> { struct InfoLabel {} *x_68_1_1; struct __shared_weak_count {} *x_68_1_2; } x68; struct shared_ptr<vk::LabelFeature> { struct LabelFeature {} *x_69_1_1; struct __shared_weak_count {} *x_69_1_2; } x69; int x70; int x71; int x72; int x73; boolx74; boolx75; float x76; int x77; int x78; float x79; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_5_1; unsigned int x_1_5_2; char *x_1_5_3; } x_1_4_1; struct __short { union { unsigned char x_1_6_1; BOOL x_1_6_2; } x_2_5_1; BOOL x_2_5_2[11]; } x_1_4_2; struct __raw { unsigned long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_80_1_1; } x80; struct _retain_ptr<VKLabelMarker *, geo::_retain_objc, geo::_release_objc> { int (**x_81_1_1)(); id x_81_1_2; struct _retain_objc { } x_81_1_3; struct _release_objc { } x_81_1_4; } x81; struct _retain_ptr<VKLabelNavSupport *, geo::_retain_objc, geo::_release_objc> { int (**x_82_1_1)(); id x_82_1_2; struct _retain_objc { } x_82_1_3; struct _release_objc { } x_82_1_4; } x82; struct _retain_ptr<NSArray *, geo::_retain_objc, geo::_release_objc> { int (**x_83_1_1)(); id x_83_1_2; struct _retain_objc { } x_83_1_3; struct _release_objc { } x_83_1_4; } x83; struct vector<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature>, vk_allocator<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature> > > { struct shared_ptr<vk::TrafficIncidentLabelFeature> {} *x_84_1_1; struct shared_ptr<vk::TrafficIncidentLabelFeature> {} *x_84_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature> *, vk_allocator<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature> > > { struct shared_ptr<vk::TrafficIncidentLabelFeature> {} *x_3_2_1; } x_84_1_3; } x84; boolx85; struct vector<std::__1::shared_ptr<vk::NavLabel>, vk_allocator<std::__1::shared_ptr<vk::NavLabel> > > { struct shared_ptr<vk::NavLabel> {} *x_86_1_1; struct shared_ptr<vk::NavLabel> {} *x_86_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::NavLabel> *, vk_allocator<std::__1::shared_ptr<vk::NavLabel> > > { struct shared_ptr<vk::NavLabel> {} *x_3_2_1; } x_86_1_3; } x86; struct BRectImp<double> { struct Vec2Imp<double> { double x_1_2_1; double x_1_2_2; } x_87_1_1; struct Vec2Imp<double> { double x_2_2_1; double x_2_2_2; } x_87_1_2; } x87; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_88_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_88_1_2; } x88; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_89_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_89_1_2; } x89; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_90_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_90_1_2; } x90; }*)arg1 pendingArtworkIsReady:(BOOL)arg2;
- (void)labelManager:(struct LabelManager { int (**x1)(); struct weak_ptr<vk::LabelManager> { struct LabelManager {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; id x3; unsigned int x4; int x5; int x6; boolx7; boolx8; boolx9; boolx10; boolx11; boolx12; boolx13; boolx14; boolx15; boolx16; boolx17; boolx18; boolx19; boolx20; boolx21; boolx22; boolx23; struct Vec3Imp<double> { double x_24_1_1; double x_24_1_2; double x_24_1_3; } x24; struct Vec3Imp<double> { double x_25_1_1; double x_25_1_2; double x_25_1_3; } x25; struct Vec3Imp<double> { double x_26_1_1; double x_26_1_2; double x_26_1_3; } x26; struct Vec3Imp<double> { double x_27_1_1; double x_27_1_2; double x_27_1_3; } x27; struct Vec3Imp<double> { double x_28_1_1; double x_28_1_2; double x_28_1_3; } x28; double x29; double x30; double x31; double x32; struct { double x_33_1_1[4][4]; } x33; struct Mat4Imp<double> { double x_34_1_1[16]; } x34; struct CGSize { float x_35_1_1; float x_35_1_2; } x35; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_36_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_36_1_2; } x36; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_37_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_37_1_2; } x37; float x38; float x39; float x40; unsigned long long x41; double x42[5]; double x43; int x44; struct vector<std::__1::shared_ptr<vk::InfoMapTile>, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile> > > { struct shared_ptr<vk::InfoMapTile> {} *x_45_1_1; struct shared_ptr<vk::InfoMapTile> {} *x_45_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::InfoMapTile> *, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile> > > { struct shared_ptr<vk::InfoMapTile> {} *x_3_2_1; } x_45_1_3; } x45; struct InfoLabelFeaturePool { struct mutex { struct _opaque_pthread_mutex_t { long x_1_3_1; BOOL x_1_3_2[40]; } x_1_2_1; } x_46_1_1; struct map<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, vk_allocator<std::__1::pair<const vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value> > > { struct __tree<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, true>, vk_allocator<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value> > > { struct __tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_2_2_1; } x_46_1_2; struct map<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, vk_allocator<std::__1::pair<const vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value> > > { struct __tree<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, true>, vk_allocator<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value> > > { struct __tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_3_2_1; } x_46_1_3; } x46; struct RoadLabelPool { struct map<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, vk_allocator<std::__1::pair<const std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true>, vk_allocator<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_47_1_1; } x47; struct PointLabelPool { struct map<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, vk_allocator<std::__1::pair<const std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true>, vk_allocator<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_48_1_1; } x48; struct TrafficIncidentLabelPool { struct vector<std::__1::shared_ptr<vk::InfoLabel>, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_1_2_1; struct shared_ptr<vk::InfoLabel> {} *x_1_2_2; struct __compressed_pair<std::__1::shared_ptr<vk::InfoLabel> *, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_3_3_1; } x_1_2_3; } x_49_1_1; } x49; struct vector<std::__1::shared_ptr<vk::InfoLabel>, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_50_1_1; struct shared_ptr<vk::InfoLabel> {} *x_50_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::InfoLabel> *, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_3_2_1; } x_50_1_3; } x50; struct vector<vk::InfoLabel *, vk_allocator<vk::InfoLabel *> > { struct InfoLabel {} **x_51_1_1; struct InfoLabel {} **x_51_1_2; struct __compressed_pair<vk::InfoLabel **, vk_allocator<vk::InfoLabel *> > { struct InfoLabel {} **x_3_2_1; } x_51_1_3; } x51; struct FontAtlas { int (**x_52_1_1)(); struct shared_ptr<vk::FontAtlasPage> { struct FontAtlasPage {} *x_2_2_1; struct __shared_weak_count {} *x_2_2_2; } x_52_1_2; struct vector<std::__1::shared_ptr<vk::FontAtlasPage>, vk_allocator<std::__1::shared_ptr<vk::FontAtlasPage> > > { struct shared_ptr<vk::FontAtlasPage> {} *x_3_2_1; struct shared_ptr<vk::FontAtlasPage> {} *x_3_2_2; struct __compressed_pair<std::__1::shared_ptr<vk::FontAtlasPage> *, vk_allocator<std::__1::shared_ptr<vk::FontAtlasPage> > > { struct shared_ptr<vk::FontAtlasPage> {} *x_3_3_1; } x_3_2_3; } x_52_1_3; struct FontAtlasCell {} *x_52_1_4; struct FontAtlasCell {} *x_52_1_5; int x_52_1_6; struct CGColor {} *x_52_1_7; struct CGContext {} *x_52_1_8; void *x_52_1_9; unsigned int x_52_1_10; unsigned int x_52_1_11; unsigned int x_52_1_12; struct FontGlyphCache {} *x_52_1_13; } x52; struct LabelMesh { struct vector<vk::IconLabelPart *, vk_allocator<vk::IconLabelPart *> > { struct IconLabelPart {} **x_1_2_1; struct IconLabelPart {} **x_1_2_2; struct __compressed_pair<vk::IconLabelPart **, vk_allocator<vk::IconLabelPart *> > { struct IconLabelPart {} **x_3_3_1; } x_1_2_3; } x_53_1_1; struct vector<vk::LabelMesh::BufferRange, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_2_2_1; struct BufferRange {} *x_2_2_2; struct __compressed_pair<vk::LabelMesh::BufferRange *, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_3_3_1; } x_2_2_3; } x_53_1_2; struct VGLIconMeshVAO { int (**x_3_2_1)(); struct vector<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad> > { struct VertexQuad {} *x_2_3_1; struct VertexQuad {} *x_2_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad> > { struct VertexQuad {} *x_3_4_1; } x_2_3_3; } x_3_2_2; struct vector<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad> > { struct IndicesQuad {} *x_3_3_1; struct IndicesQuad {} *x_3_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad> > { struct IndicesQuad {} *x_3_4_1; } x_3_3_3; } x_3_2_3; unsigned int x_3_2_4; id x_3_2_5; id x_3_2_6; id x_3_2_7; unsigned int x_3_2_8; boolx_3_2_9; boolx_3_2_10; } x_53_1_3; struct vector<vk::TextLabelPart *, vk_allocator<vk::TextLabelPart *> > { struct TextLabelPart {} **x_4_2_1; struct TextLabelPart {} **x_4_2_2; struct __compressed_pair<vk::TextLabelPart **, vk_allocator<vk::TextLabelPart *> > { struct TextLabelPart {} **x_3_3_1; } x_4_2_3; } x_53_1_4; struct vector<vk::LabelMesh::BufferRange, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_5_2_1; struct BufferRange {} *x_5_2_2; struct __compressed_pair<vk::LabelMesh::BufferRange *, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_3_3_1; } x_5_2_3; } x_53_1_5; struct VGLTextMeshVAO { int (**x_6_2_1)(); struct vector<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad> > { struct VertexQuad {} *x_2_3_1; struct VertexQuad {} *x_2_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad> > { struct VertexQuad {} *x_3_4_1; } x_2_3_3; } x_6_2_2; struct vector<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad> > { struct IndicesQuad {} *x_3_3_1; struct IndicesQuad {} *x_3_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad> > { struct IndicesQuad {} *x_3_4_1; } x_3_3_3; } x_6_2_3; unsigned int x_6_2_4; id x_6_2_5; id x_6_2_6; id x_6_2_7; unsigned int x_6_2_8; boolx_6_2_9; boolx_6_2_10; } x_53_1_6; struct FontAtlas {} *x_53_1_7; id x_53_1_8; id x_53_1_9; boolx_53_1_10; } x53; struct LabelStyleCache { struct mutex { struct _opaque_pthread_mutex_t { long x_1_3_1; BOOL x_1_3_2[40]; } x_1_2_1; } x_54_1_1; float x_54_1_2; boolx_54_1_3; int x_54_1_4; int x_54_1_5; int x_54_1_6; struct _retain_ptr<VKStylesheet *, geo::_retain_objc, geo::_release_objc> { int (**x_7_2_1)(); id x_7_2_2; struct _retain_objc { } x_7_2_3; struct _release_objc { } x_7_2_4; } x_54_1_7; boolx_54_1_8; struct _retain_ptr<VKStyleResolutionSession *, geo::_retain_objc, geo::_release_objc> { int (**x_9_2_1)(); id x_9_2_2; struct _retain_objc { } x_9_2_3; struct _release_objc { } x_9_2_4; } x_54_1_9; struct map<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, vk_allocator<std::__1::pair<VKLabelDrawStyle *const, std::__1::shared_ptr<vk::LabelStyle> > > > { struct __tree<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> >, std::__1::__map_value_compare<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, true>, vk_allocator<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> > > > { struct __tree_node<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> >, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_10_2_1; } x_54_1_10; } x54; struct InfoLabelCollider { struct vector<vk::CollisionItem, vk_allocator<vk::CollisionItem> > { struct CollisionItem {} *x_1_2_1; struct CollisionItem {} *x_1_2_2; struct __compressed_pair<vk::CollisionItem *, vk_allocator<vk::CollisionItem> > { struct CollisionItem {} *x_3_3_1; } x_1_2_3; } x_55_1_1; struct vector<vk::CollisionPair, vk_allocator<vk::CollisionPair> > { struct CollisionPair {} *x_2_2_1; struct CollisionPair {} *x_2_2_2; struct __compressed_pair<vk::CollisionPair *, vk_allocator<vk::CollisionPair> > { struct CollisionPair {} *x_3_3_1; } x_2_2_3; } x_55_1_2; } x55; struct InfoOcclusionTester { int (**x_56_1_1)(); struct queue<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > > { struct deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { struct __split_buffer<std::__1::shared_ptr<vk::InfoOcclusionQuery> *, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_1; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_2; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_3; struct __compressed_pair<std::__1::shared_ptr<vk::InfoOcclusionQuery> **, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_4_5_1; } x_1_4_4; } x_1_3_1; unsigned int x_1_3_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { unsigned long x_3_4_1; } x_1_3_3; } x_2_2_1; } x_56_1_2; struct queue<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > > { struct deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { struct __split_buffer<std::__1::shared_ptr<vk::InfoOcclusionQuery> *, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_1; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_2; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_3; struct __compressed_pair<std::__1::shared_ptr<vk::InfoOcclusionQuery> **, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_4_5_1; } x_1_4_4; } x_1_3_1; unsigned int x_1_3_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { unsigned long x_3_4_1; } x_1_3_3; } x_3_2_1; } x_56_1_3; struct queue<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int> > > { struct deque<unsigned int, std::__1::allocator<unsigned int> > { struct __split_buffer<unsigned int *, std::__1::allocator<unsigned int *> > { unsigned int **x_1_4_1; unsigned int **x_1_4_2; unsigned int **x_1_4_3; struct __compressed_pair<unsigned int **, std::__1::allocator<unsigned int *> > { unsigned int **x_4_5_1; } x_1_4_4; } x_1_3_1; unsigned int x_1_3_2; struct __compressed_pair<unsigned long, std::__1::allocator<unsigned int> > { unsigned long x_3_4_1; } x_1_3_3; } x_4_2_1; } x_56_1_4; id x_56_1_5; unsigned int x_56_1_6; boolx_56_1_7; struct { double x_8_2_1[4][4]; } x_56_1_8; } x56; struct shared_ptr<vk::LabelTrafficTilePool> { struct LabelTrafficTilePool {} *x_57_1_1; struct __shared_weak_count {} *x_57_1_2; } x57; struct vector<std::__1::shared_ptr<vk::LabelIcon>, vk_allocator<std::__1::shared_ptr<vk::LabelIcon> > > { struct shared_ptr<vk::LabelIcon> {} *x_58_1_1; struct shared_ptr<vk::LabelIcon> {} *x_58_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::LabelIcon> *, vk_allocator<std::__1::shared_ptr<vk::LabelIcon> > > { struct shared_ptr<vk::LabelIcon> {} *x_3_2_1; } x_58_1_3; } x58; struct shared_ptr<vk::LabelManagerNotifierHook> { struct LabelManagerNotifierHook {} *x_59_1_1; struct __shared_weak_count {} *x_59_1_2; } x59; unsigned int x60; unsigned int x61; unsigned int x62; double x63; double x64; boolx65; float x66; int x67; struct shared_ptr<vk::InfoLabel> { struct InfoLabel {} *x_68_1_1; struct __shared_weak_count {} *x_68_1_2; } x68; struct shared_ptr<vk::LabelFeature> { struct LabelFeature {} *x_69_1_1; struct __shared_weak_count {} *x_69_1_2; } x69; int x70; int x71; int x72; int x73; boolx74; boolx75; float x76; int x77; int x78; float x79; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_5_1; unsigned int x_1_5_2; char *x_1_5_3; } x_1_4_1; struct __short { union { unsigned char x_1_6_1; BOOL x_1_6_2; } x_2_5_1; BOOL x_2_5_2[11]; } x_1_4_2; struct __raw { unsigned long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_80_1_1; } x80; struct _retain_ptr<VKLabelMarker *, geo::_retain_objc, geo::_release_objc> { int (**x_81_1_1)(); id x_81_1_2; struct _retain_objc { } x_81_1_3; struct _release_objc { } x_81_1_4; } x81; struct _retain_ptr<VKLabelNavSupport *, geo::_retain_objc, geo::_release_objc> { int (**x_82_1_1)(); id x_82_1_2; struct _retain_objc { } x_82_1_3; struct _release_objc { } x_82_1_4; } x82; struct _retain_ptr<NSArray *, geo::_retain_objc, geo::_release_objc> { int (**x_83_1_1)(); id x_83_1_2; struct _retain_objc { } x_83_1_3; struct _release_objc { } x_83_1_4; } x83; struct vector<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature>, vk_allocator<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature> > > { struct shared_ptr<vk::TrafficIncidentLabelFeature> {} *x_84_1_1; struct shared_ptr<vk::TrafficIncidentLabelFeature> {} *x_84_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature> *, vk_allocator<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature> > > { struct shared_ptr<vk::TrafficIncidentLabelFeature> {} *x_3_2_1; } x_84_1_3; } x84; boolx85; struct vector<std::__1::shared_ptr<vk::NavLabel>, vk_allocator<std::__1::shared_ptr<vk::NavLabel> > > { struct shared_ptr<vk::NavLabel> {} *x_86_1_1; struct shared_ptr<vk::NavLabel> {} *x_86_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::NavLabel> *, vk_allocator<std::__1::shared_ptr<vk::NavLabel> > > { struct shared_ptr<vk::NavLabel> {} *x_3_2_1; } x_86_1_3; } x86; struct BRectImp<double> { struct Vec2Imp<double> { double x_1_2_1; double x_1_2_2; } x_87_1_1; struct Vec2Imp<double> { double x_2_2_1; double x_2_2_2; } x_87_1_2; } x87; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_88_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_88_1_2; } x88; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_89_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_89_1_2; } x89; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_90_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_90_1_2; } x90; }*)arg1 selectedLabelMarkerWillDisappear:(id)arg2;
- (void)labelManager:(struct LabelManager { int (**x1)(); struct weak_ptr<vk::LabelManager> { struct LabelManager {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; id x3; unsigned int x4; int x5; int x6; boolx7; boolx8; boolx9; boolx10; boolx11; boolx12; boolx13; boolx14; boolx15; boolx16; boolx17; boolx18; boolx19; boolx20; boolx21; boolx22; boolx23; struct Vec3Imp<double> { double x_24_1_1; double x_24_1_2; double x_24_1_3; } x24; struct Vec3Imp<double> { double x_25_1_1; double x_25_1_2; double x_25_1_3; } x25; struct Vec3Imp<double> { double x_26_1_1; double x_26_1_2; double x_26_1_3; } x26; struct Vec3Imp<double> { double x_27_1_1; double x_27_1_2; double x_27_1_3; } x27; struct Vec3Imp<double> { double x_28_1_1; double x_28_1_2; double x_28_1_3; } x28; double x29; double x30; double x31; double x32; struct { double x_33_1_1[4][4]; } x33; struct Mat4Imp<double> { double x_34_1_1[16]; } x34; struct CGSize { float x_35_1_1; float x_35_1_2; } x35; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_36_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_36_1_2; } x36; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_37_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_37_1_2; } x37; float x38; float x39; float x40; unsigned long long x41; double x42[5]; double x43; int x44; struct vector<std::__1::shared_ptr<vk::InfoMapTile>, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile> > > { struct shared_ptr<vk::InfoMapTile> {} *x_45_1_1; struct shared_ptr<vk::InfoMapTile> {} *x_45_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::InfoMapTile> *, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile> > > { struct shared_ptr<vk::InfoMapTile> {} *x_3_2_1; } x_45_1_3; } x45; struct InfoLabelFeaturePool { struct mutex { struct _opaque_pthread_mutex_t { long x_1_3_1; BOOL x_1_3_2[40]; } x_1_2_1; } x_46_1_1; struct map<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, vk_allocator<std::__1::pair<const vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value> > > { struct __tree<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, true>, vk_allocator<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value> > > { struct __tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_2_2_1; } x_46_1_2; struct map<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, vk_allocator<std::__1::pair<const vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value> > > { struct __tree<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, true>, vk_allocator<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value> > > { struct __tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_3_2_1; } x_46_1_3; } x46; struct RoadLabelPool { struct map<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, vk_allocator<std::__1::pair<const std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true>, vk_allocator<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_47_1_1; } x47; struct PointLabelPool { struct map<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, vk_allocator<std::__1::pair<const std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true>, vk_allocator<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_48_1_1; } x48; struct TrafficIncidentLabelPool { struct vector<std::__1::shared_ptr<vk::InfoLabel>, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_1_2_1; struct shared_ptr<vk::InfoLabel> {} *x_1_2_2; struct __compressed_pair<std::__1::shared_ptr<vk::InfoLabel> *, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_3_3_1; } x_1_2_3; } x_49_1_1; } x49; struct vector<std::__1::shared_ptr<vk::InfoLabel>, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_50_1_1; struct shared_ptr<vk::InfoLabel> {} *x_50_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::InfoLabel> *, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_3_2_1; } x_50_1_3; } x50; struct vector<vk::InfoLabel *, vk_allocator<vk::InfoLabel *> > { struct InfoLabel {} **x_51_1_1; struct InfoLabel {} **x_51_1_2; struct __compressed_pair<vk::InfoLabel **, vk_allocator<vk::InfoLabel *> > { struct InfoLabel {} **x_3_2_1; } x_51_1_3; } x51; struct FontAtlas { int (**x_52_1_1)(); struct shared_ptr<vk::FontAtlasPage> { struct FontAtlasPage {} *x_2_2_1; struct __shared_weak_count {} *x_2_2_2; } x_52_1_2; struct vector<std::__1::shared_ptr<vk::FontAtlasPage>, vk_allocator<std::__1::shared_ptr<vk::FontAtlasPage> > > { struct shared_ptr<vk::FontAtlasPage> {} *x_3_2_1; struct shared_ptr<vk::FontAtlasPage> {} *x_3_2_2; struct __compressed_pair<std::__1::shared_ptr<vk::FontAtlasPage> *, vk_allocator<std::__1::shared_ptr<vk::FontAtlasPage> > > { struct shared_ptr<vk::FontAtlasPage> {} *x_3_3_1; } x_3_2_3; } x_52_1_3; struct FontAtlasCell {} *x_52_1_4; struct FontAtlasCell {} *x_52_1_5; int x_52_1_6; struct CGColor {} *x_52_1_7; struct CGContext {} *x_52_1_8; void *x_52_1_9; unsigned int x_52_1_10; unsigned int x_52_1_11; unsigned int x_52_1_12; struct FontGlyphCache {} *x_52_1_13; } x52; struct LabelMesh { struct vector<vk::IconLabelPart *, vk_allocator<vk::IconLabelPart *> > { struct IconLabelPart {} **x_1_2_1; struct IconLabelPart {} **x_1_2_2; struct __compressed_pair<vk::IconLabelPart **, vk_allocator<vk::IconLabelPart *> > { struct IconLabelPart {} **x_3_3_1; } x_1_2_3; } x_53_1_1; struct vector<vk::LabelMesh::BufferRange, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_2_2_1; struct BufferRange {} *x_2_2_2; struct __compressed_pair<vk::LabelMesh::BufferRange *, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_3_3_1; } x_2_2_3; } x_53_1_2; struct VGLIconMeshVAO { int (**x_3_2_1)(); struct vector<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad> > { struct VertexQuad {} *x_2_3_1; struct VertexQuad {} *x_2_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad> > { struct VertexQuad {} *x_3_4_1; } x_2_3_3; } x_3_2_2; struct vector<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad> > { struct IndicesQuad {} *x_3_3_1; struct IndicesQuad {} *x_3_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad> > { struct IndicesQuad {} *x_3_4_1; } x_3_3_3; } x_3_2_3; unsigned int x_3_2_4; id x_3_2_5; id x_3_2_6; id x_3_2_7; unsigned int x_3_2_8; boolx_3_2_9; boolx_3_2_10; } x_53_1_3; struct vector<vk::TextLabelPart *, vk_allocator<vk::TextLabelPart *> > { struct TextLabelPart {} **x_4_2_1; struct TextLabelPart {} **x_4_2_2; struct __compressed_pair<vk::TextLabelPart **, vk_allocator<vk::TextLabelPart *> > { struct TextLabelPart {} **x_3_3_1; } x_4_2_3; } x_53_1_4; struct vector<vk::LabelMesh::BufferRange, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_5_2_1; struct BufferRange {} *x_5_2_2; struct __compressed_pair<vk::LabelMesh::BufferRange *, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_3_3_1; } x_5_2_3; } x_53_1_5; struct VGLTextMeshVAO { int (**x_6_2_1)(); struct vector<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad> > { struct VertexQuad {} *x_2_3_1; struct VertexQuad {} *x_2_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad> > { struct VertexQuad {} *x_3_4_1; } x_2_3_3; } x_6_2_2; struct vector<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad> > { struct IndicesQuad {} *x_3_3_1; struct IndicesQuad {} *x_3_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad> > { struct IndicesQuad {} *x_3_4_1; } x_3_3_3; } x_6_2_3; unsigned int x_6_2_4; id x_6_2_5; id x_6_2_6; id x_6_2_7; unsigned int x_6_2_8; boolx_6_2_9; boolx_6_2_10; } x_53_1_6; struct FontAtlas {} *x_53_1_7; id x_53_1_8; id x_53_1_9; boolx_53_1_10; } x53; struct LabelStyleCache { struct mutex { struct _opaque_pthread_mutex_t { long x_1_3_1; BOOL x_1_3_2[40]; } x_1_2_1; } x_54_1_1; float x_54_1_2; boolx_54_1_3; int x_54_1_4; int x_54_1_5; int x_54_1_6; struct _retain_ptr<VKStylesheet *, geo::_retain_objc, geo::_release_objc> { int (**x_7_2_1)(); id x_7_2_2; struct _retain_objc { } x_7_2_3; struct _release_objc { } x_7_2_4; } x_54_1_7; boolx_54_1_8; struct _retain_ptr<VKStyleResolutionSession *, geo::_retain_objc, geo::_release_objc> { int (**x_9_2_1)(); id x_9_2_2; struct _retain_objc { } x_9_2_3; struct _release_objc { } x_9_2_4; } x_54_1_9; struct map<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, vk_allocator<std::__1::pair<VKLabelDrawStyle *const, std::__1::shared_ptr<vk::LabelStyle> > > > { struct __tree<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> >, std::__1::__map_value_compare<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, true>, vk_allocator<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> > > > { struct __tree_node<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> >, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_10_2_1; } x_54_1_10; } x54; struct InfoLabelCollider { struct vector<vk::CollisionItem, vk_allocator<vk::CollisionItem> > { struct CollisionItem {} *x_1_2_1; struct CollisionItem {} *x_1_2_2; struct __compressed_pair<vk::CollisionItem *, vk_allocator<vk::CollisionItem> > { struct CollisionItem {} *x_3_3_1; } x_1_2_3; } x_55_1_1; struct vector<vk::CollisionPair, vk_allocator<vk::CollisionPair> > { struct CollisionPair {} *x_2_2_1; struct CollisionPair {} *x_2_2_2; struct __compressed_pair<vk::CollisionPair *, vk_allocator<vk::CollisionPair> > { struct CollisionPair {} *x_3_3_1; } x_2_2_3; } x_55_1_2; } x55; struct InfoOcclusionTester { int (**x_56_1_1)(); struct queue<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > > { struct deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { struct __split_buffer<std::__1::shared_ptr<vk::InfoOcclusionQuery> *, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_1; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_2; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_3; struct __compressed_pair<std::__1::shared_ptr<vk::InfoOcclusionQuery> **, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_4_5_1; } x_1_4_4; } x_1_3_1; unsigned int x_1_3_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { unsigned long x_3_4_1; } x_1_3_3; } x_2_2_1; } x_56_1_2; struct queue<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > > { struct deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { struct __split_buffer<std::__1::shared_ptr<vk::InfoOcclusionQuery> *, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_1; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_2; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_3; struct __compressed_pair<std::__1::shared_ptr<vk::InfoOcclusionQuery> **, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_4_5_1; } x_1_4_4; } x_1_3_1; unsigned int x_1_3_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { unsigned long x_3_4_1; } x_1_3_3; } x_3_2_1; } x_56_1_3; struct queue<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int> > > { struct deque<unsigned int, std::__1::allocator<unsigned int> > { struct __split_buffer<unsigned int *, std::__1::allocator<unsigned int *> > { unsigned int **x_1_4_1; unsigned int **x_1_4_2; unsigned int **x_1_4_3; struct __compressed_pair<unsigned int **, std::__1::allocator<unsigned int *> > { unsigned int **x_4_5_1; } x_1_4_4; } x_1_3_1; unsigned int x_1_3_2; struct __compressed_pair<unsigned long, std::__1::allocator<unsigned int> > { unsigned long x_3_4_1; } x_1_3_3; } x_4_2_1; } x_56_1_4; id x_56_1_5; unsigned int x_56_1_6; boolx_56_1_7; struct { double x_8_2_1[4][4]; } x_56_1_8; } x56; struct shared_ptr<vk::LabelTrafficTilePool> { struct LabelTrafficTilePool {} *x_57_1_1; struct __shared_weak_count {} *x_57_1_2; } x57; struct vector<std::__1::shared_ptr<vk::LabelIcon>, vk_allocator<std::__1::shared_ptr<vk::LabelIcon> > > { struct shared_ptr<vk::LabelIcon> {} *x_58_1_1; struct shared_ptr<vk::LabelIcon> {} *x_58_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::LabelIcon> *, vk_allocator<std::__1::shared_ptr<vk::LabelIcon> > > { struct shared_ptr<vk::LabelIcon> {} *x_3_2_1; } x_58_1_3; } x58; struct shared_ptr<vk::LabelManagerNotifierHook> { struct LabelManagerNotifierHook {} *x_59_1_1; struct __shared_weak_count {} *x_59_1_2; } x59; unsigned int x60; unsigned int x61; unsigned int x62; double x63; double x64; boolx65; float x66; int x67; struct shared_ptr<vk::InfoLabel> { struct InfoLabel {} *x_68_1_1; struct __shared_weak_count {} *x_68_1_2; } x68; struct shared_ptr<vk::LabelFeature> { struct LabelFeature {} *x_69_1_1; struct __shared_weak_count {} *x_69_1_2; } x69; int x70; int x71; int x72; int x73; boolx74; boolx75; float x76; int x77; int x78; float x79; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_5_1; unsigned int x_1_5_2; char *x_1_5_3; } x_1_4_1; struct __short { union { unsigned char x_1_6_1; BOOL x_1_6_2; } x_2_5_1; BOOL x_2_5_2[11]; } x_1_4_2; struct __raw { unsigned long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_80_1_1; } x80; struct _retain_ptr<VKLabelMarker *, geo::_retain_objc, geo::_release_objc> { int (**x_81_1_1)(); id x_81_1_2; struct _retain_objc { } x_81_1_3; struct _release_objc { } x_81_1_4; } x81; struct _retain_ptr<VKLabelNavSupport *, geo::_retain_objc, geo::_release_objc> { int (**x_82_1_1)(); id x_82_1_2; struct _retain_objc { } x_82_1_3; struct _release_objc { } x_82_1_4; } x82; struct _retain_ptr<NSArray *, geo::_retain_objc, geo::_release_objc> { int (**x_83_1_1)(); id x_83_1_2; struct _retain_objc { } x_83_1_3; struct _release_objc { } x_83_1_4; } x83; struct vector<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature>, vk_allocator<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature> > > { struct shared_ptr<vk::TrafficIncidentLabelFeature> {} *x_84_1_1; struct shared_ptr<vk::TrafficIncidentLabelFeature> {} *x_84_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature> *, vk_allocator<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature> > > { struct shared_ptr<vk::TrafficIncidentLabelFeature> {} *x_3_2_1; } x_84_1_3; } x84; boolx85; struct vector<std::__1::shared_ptr<vk::NavLabel>, vk_allocator<std::__1::shared_ptr<vk::NavLabel> > > { struct shared_ptr<vk::NavLabel> {} *x_86_1_1; struct shared_ptr<vk::NavLabel> {} *x_86_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::NavLabel> *, vk_allocator<std::__1::shared_ptr<vk::NavLabel> > > { struct shared_ptr<vk::NavLabel> {} *x_3_2_1; } x_86_1_3; } x86; struct BRectImp<double> { struct Vec2Imp<double> { double x_1_2_1; double x_1_2_2; } x_87_1_1; struct Vec2Imp<double> { double x_2_2_1; double x_2_2_2; } x_87_1_2; } x87; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_88_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_88_1_2; } x88; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_89_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_89_1_2; } x89; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_90_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_90_1_2; } x90; }*)arg1 setNeedsDisplay:(BOOL)arg2;
- (void)labelManager:(struct LabelManager { int (**x1)(); struct weak_ptr<vk::LabelManager> { struct LabelManager {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; id x3; unsigned int x4; int x5; int x6; boolx7; boolx8; boolx9; boolx10; boolx11; boolx12; boolx13; boolx14; boolx15; boolx16; boolx17; boolx18; boolx19; boolx20; boolx21; boolx22; boolx23; struct Vec3Imp<double> { double x_24_1_1; double x_24_1_2; double x_24_1_3; } x24; struct Vec3Imp<double> { double x_25_1_1; double x_25_1_2; double x_25_1_3; } x25; struct Vec3Imp<double> { double x_26_1_1; double x_26_1_2; double x_26_1_3; } x26; struct Vec3Imp<double> { double x_27_1_1; double x_27_1_2; double x_27_1_3; } x27; struct Vec3Imp<double> { double x_28_1_1; double x_28_1_2; double x_28_1_3; } x28; double x29; double x30; double x31; double x32; struct { double x_33_1_1[4][4]; } x33; struct Mat4Imp<double> { double x_34_1_1[16]; } x34; struct CGSize { float x_35_1_1; float x_35_1_2; } x35; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_36_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_36_1_2; } x36; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_37_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_37_1_2; } x37; float x38; float x39; float x40; unsigned long long x41; double x42[5]; double x43; int x44; struct vector<std::__1::shared_ptr<vk::InfoMapTile>, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile> > > { struct shared_ptr<vk::InfoMapTile> {} *x_45_1_1; struct shared_ptr<vk::InfoMapTile> {} *x_45_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::InfoMapTile> *, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile> > > { struct shared_ptr<vk::InfoMapTile> {} *x_3_2_1; } x_45_1_3; } x45; struct InfoLabelFeaturePool { struct mutex { struct _opaque_pthread_mutex_t { long x_1_3_1; BOOL x_1_3_2[40]; } x_1_2_1; } x_46_1_1; struct map<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, vk_allocator<std::__1::pair<const vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value> > > { struct __tree<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, true>, vk_allocator<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value> > > { struct __tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_2_2_1; } x_46_1_2; struct map<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, vk_allocator<std::__1::pair<const vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value> > > { struct __tree<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, true>, vk_allocator<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value> > > { struct __tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_3_2_1; } x_46_1_3; } x46; struct RoadLabelPool { struct map<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, vk_allocator<std::__1::pair<const std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true>, vk_allocator<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_47_1_1; } x47; struct PointLabelPool { struct map<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, vk_allocator<std::__1::pair<const std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true>, vk_allocator<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> > > > { struct __tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int> >, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_48_1_1; } x48; struct TrafficIncidentLabelPool { struct vector<std::__1::shared_ptr<vk::InfoLabel>, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_1_2_1; struct shared_ptr<vk::InfoLabel> {} *x_1_2_2; struct __compressed_pair<std::__1::shared_ptr<vk::InfoLabel> *, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_3_3_1; } x_1_2_3; } x_49_1_1; } x49; struct vector<std::__1::shared_ptr<vk::InfoLabel>, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_50_1_1; struct shared_ptr<vk::InfoLabel> {} *x_50_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::InfoLabel> *, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > > { struct shared_ptr<vk::InfoLabel> {} *x_3_2_1; } x_50_1_3; } x50; struct vector<vk::InfoLabel *, vk_allocator<vk::InfoLabel *> > { struct InfoLabel {} **x_51_1_1; struct InfoLabel {} **x_51_1_2; struct __compressed_pair<vk::InfoLabel **, vk_allocator<vk::InfoLabel *> > { struct InfoLabel {} **x_3_2_1; } x_51_1_3; } x51; struct FontAtlas { int (**x_52_1_1)(); struct shared_ptr<vk::FontAtlasPage> { struct FontAtlasPage {} *x_2_2_1; struct __shared_weak_count {} *x_2_2_2; } x_52_1_2; struct vector<std::__1::shared_ptr<vk::FontAtlasPage>, vk_allocator<std::__1::shared_ptr<vk::FontAtlasPage> > > { struct shared_ptr<vk::FontAtlasPage> {} *x_3_2_1; struct shared_ptr<vk::FontAtlasPage> {} *x_3_2_2; struct __compressed_pair<std::__1::shared_ptr<vk::FontAtlasPage> *, vk_allocator<std::__1::shared_ptr<vk::FontAtlasPage> > > { struct shared_ptr<vk::FontAtlasPage> {} *x_3_3_1; } x_3_2_3; } x_52_1_3; struct FontAtlasCell {} *x_52_1_4; struct FontAtlasCell {} *x_52_1_5; int x_52_1_6; struct CGColor {} *x_52_1_7; struct CGContext {} *x_52_1_8; void *x_52_1_9; unsigned int x_52_1_10; unsigned int x_52_1_11; unsigned int x_52_1_12; struct FontGlyphCache {} *x_52_1_13; } x52; struct LabelMesh { struct vector<vk::IconLabelPart *, vk_allocator<vk::IconLabelPart *> > { struct IconLabelPart {} **x_1_2_1; struct IconLabelPart {} **x_1_2_2; struct __compressed_pair<vk::IconLabelPart **, vk_allocator<vk::IconLabelPart *> > { struct IconLabelPart {} **x_3_3_1; } x_1_2_3; } x_53_1_1; struct vector<vk::LabelMesh::BufferRange, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_2_2_1; struct BufferRange {} *x_2_2_2; struct __compressed_pair<vk::LabelMesh::BufferRange *, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_3_3_1; } x_2_2_3; } x_53_1_2; struct VGLIconMeshVAO { int (**x_3_2_1)(); struct vector<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad> > { struct VertexQuad {} *x_2_3_1; struct VertexQuad {} *x_2_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad> > { struct VertexQuad {} *x_3_4_1; } x_2_3_3; } x_3_2_2; struct vector<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad> > { struct IndicesQuad {} *x_3_3_1; struct IndicesQuad {} *x_3_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad> > { struct IndicesQuad {} *x_3_4_1; } x_3_3_3; } x_3_2_3; unsigned int x_3_2_4; id x_3_2_5; id x_3_2_6; id x_3_2_7; unsigned int x_3_2_8; boolx_3_2_9; boolx_3_2_10; } x_53_1_3; struct vector<vk::TextLabelPart *, vk_allocator<vk::TextLabelPart *> > { struct TextLabelPart {} **x_4_2_1; struct TextLabelPart {} **x_4_2_2; struct __compressed_pair<vk::TextLabelPart **, vk_allocator<vk::TextLabelPart *> > { struct TextLabelPart {} **x_3_3_1; } x_4_2_3; } x_53_1_4; struct vector<vk::LabelMesh::BufferRange, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_5_2_1; struct BufferRange {} *x_5_2_2; struct __compressed_pair<vk::LabelMesh::BufferRange *, vk_allocator<vk::LabelMesh::BufferRange> > { struct BufferRange {} *x_3_3_1; } x_5_2_3; } x_53_1_5; struct VGLTextMeshVAO { int (**x_6_2_1)(); struct vector<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad> > { struct VertexQuad {} *x_2_3_1; struct VertexQuad {} *x_2_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad> > { struct VertexQuad {} *x_3_4_1; } x_2_3_3; } x_6_2_2; struct vector<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad> > { struct IndicesQuad {} *x_3_3_1; struct IndicesQuad {} *x_3_3_2; struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad> > { struct IndicesQuad {} *x_3_4_1; } x_3_3_3; } x_6_2_3; unsigned int x_6_2_4; id x_6_2_5; id x_6_2_6; id x_6_2_7; unsigned int x_6_2_8; boolx_6_2_9; boolx_6_2_10; } x_53_1_6; struct FontAtlas {} *x_53_1_7; id x_53_1_8; id x_53_1_9; boolx_53_1_10; } x53; struct LabelStyleCache { struct mutex { struct _opaque_pthread_mutex_t { long x_1_3_1; BOOL x_1_3_2[40]; } x_1_2_1; } x_54_1_1; float x_54_1_2; boolx_54_1_3; int x_54_1_4; int x_54_1_5; int x_54_1_6; struct _retain_ptr<VKStylesheet *, geo::_retain_objc, geo::_release_objc> { int (**x_7_2_1)(); id x_7_2_2; struct _retain_objc { } x_7_2_3; struct _release_objc { } x_7_2_4; } x_54_1_7; boolx_54_1_8; struct _retain_ptr<VKStyleResolutionSession *, geo::_retain_objc, geo::_release_objc> { int (**x_9_2_1)(); id x_9_2_2; struct _retain_objc { } x_9_2_3; struct _release_objc { } x_9_2_4; } x_54_1_9; struct map<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, vk_allocator<std::__1::pair<VKLabelDrawStyle *const, std::__1::shared_ptr<vk::LabelStyle> > > > { struct __tree<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> >, std::__1::__map_value_compare<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, true>, vk_allocator<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> > > > { struct __tree_node<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> >, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, vk_allocator<std::__1::__tree_node<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_10_2_1; } x_54_1_10; } x54; struct InfoLabelCollider { struct vector<vk::CollisionItem, vk_allocator<vk::CollisionItem> > { struct CollisionItem {} *x_1_2_1; struct CollisionItem {} *x_1_2_2; struct __compressed_pair<vk::CollisionItem *, vk_allocator<vk::CollisionItem> > { struct CollisionItem {} *x_3_3_1; } x_1_2_3; } x_55_1_1; struct vector<vk::CollisionPair, vk_allocator<vk::CollisionPair> > { struct CollisionPair {} *x_2_2_1; struct CollisionPair {} *x_2_2_2; struct __compressed_pair<vk::CollisionPair *, vk_allocator<vk::CollisionPair> > { struct CollisionPair {} *x_3_3_1; } x_2_2_3; } x_55_1_2; } x55; struct InfoOcclusionTester { int (**x_56_1_1)(); struct queue<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > > { struct deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { struct __split_buffer<std::__1::shared_ptr<vk::InfoOcclusionQuery> *, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_1; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_2; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_3; struct __compressed_pair<std::__1::shared_ptr<vk::InfoOcclusionQuery> **, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_4_5_1; } x_1_4_4; } x_1_3_1; unsigned int x_1_3_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { unsigned long x_3_4_1; } x_1_3_3; } x_2_2_1; } x_56_1_2; struct queue<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > > { struct deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { struct __split_buffer<std::__1::shared_ptr<vk::InfoOcclusionQuery> *, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_1; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_2; struct shared_ptr<vk::InfoOcclusionQuery> {} **x_1_4_3; struct __compressed_pair<std::__1::shared_ptr<vk::InfoOcclusionQuery> **, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> *> > { struct shared_ptr<vk::InfoOcclusionQuery> {} **x_4_5_1; } x_1_4_4; } x_1_3_1; unsigned int x_1_3_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery> > > { unsigned long x_3_4_1; } x_1_3_3; } x_3_2_1; } x_56_1_3; struct queue<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int> > > { struct deque<unsigned int, std::__1::allocator<unsigned int> > { struct __split_buffer<unsigned int *, std::__1::allocator<unsigned int *> > { unsigned int **x_1_4_1; unsigned int **x_1_4_2; unsigned int **x_1_4_3; struct __compressed_pair<unsigned int **, std::__1::allocator<unsigned int *> > { unsigned int **x_4_5_1; } x_1_4_4; } x_1_3_1; unsigned int x_1_3_2; struct __compressed_pair<unsigned long, std::__1::allocator<unsigned int> > { unsigned long x_3_4_1; } x_1_3_3; } x_4_2_1; } x_56_1_4; id x_56_1_5; unsigned int x_56_1_6; boolx_56_1_7; struct { double x_8_2_1[4][4]; } x_56_1_8; } x56; struct shared_ptr<vk::LabelTrafficTilePool> { struct LabelTrafficTilePool {} *x_57_1_1; struct __shared_weak_count {} *x_57_1_2; } x57; struct vector<std::__1::shared_ptr<vk::LabelIcon>, vk_allocator<std::__1::shared_ptr<vk::LabelIcon> > > { struct shared_ptr<vk::LabelIcon> {} *x_58_1_1; struct shared_ptr<vk::LabelIcon> {} *x_58_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::LabelIcon> *, vk_allocator<std::__1::shared_ptr<vk::LabelIcon> > > { struct shared_ptr<vk::LabelIcon> {} *x_3_2_1; } x_58_1_3; } x58; struct shared_ptr<vk::LabelManagerNotifierHook> { struct LabelManagerNotifierHook {} *x_59_1_1; struct __shared_weak_count {} *x_59_1_2; } x59; unsigned int x60; unsigned int x61; unsigned int x62; double x63; double x64; boolx65; float x66; int x67; struct shared_ptr<vk::InfoLabel> { struct InfoLabel {} *x_68_1_1; struct __shared_weak_count {} *x_68_1_2; } x68; struct shared_ptr<vk::LabelFeature> { struct LabelFeature {} *x_69_1_1; struct __shared_weak_count {} *x_69_1_2; } x69; int x70; int x71; int x72; int x73; boolx74; boolx75; float x76; int x77; int x78; float x79; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_5_1; unsigned int x_1_5_2; char *x_1_5_3; } x_1_4_1; struct __short { union { unsigned char x_1_6_1; BOOL x_1_6_2; } x_2_5_1; BOOL x_2_5_2[11]; } x_1_4_2; struct __raw { unsigned long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_80_1_1; } x80; struct _retain_ptr<VKLabelMarker *, geo::_retain_objc, geo::_release_objc> { int (**x_81_1_1)(); id x_81_1_2; struct _retain_objc { } x_81_1_3; struct _release_objc { } x_81_1_4; } x81; struct _retain_ptr<VKLabelNavSupport *, geo::_retain_objc, geo::_release_objc> { int (**x_82_1_1)(); id x_82_1_2; struct _retain_objc { } x_82_1_3; struct _release_objc { } x_82_1_4; } x82; struct _retain_ptr<NSArray *, geo::_retain_objc, geo::_release_objc> { int (**x_83_1_1)(); id x_83_1_2; struct _retain_objc { } x_83_1_3; struct _release_objc { } x_83_1_4; } x83; struct vector<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature>, vk_allocator<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature> > > { struct shared_ptr<vk::TrafficIncidentLabelFeature> {} *x_84_1_1; struct shared_ptr<vk::TrafficIncidentLabelFeature> {} *x_84_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature> *, vk_allocator<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature> > > { struct shared_ptr<vk::TrafficIncidentLabelFeature> {} *x_3_2_1; } x_84_1_3; } x84; boolx85; struct vector<std::__1::shared_ptr<vk::NavLabel>, vk_allocator<std::__1::shared_ptr<vk::NavLabel> > > { struct shared_ptr<vk::NavLabel> {} *x_86_1_1; struct shared_ptr<vk::NavLabel> {} *x_86_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::NavLabel> *, vk_allocator<std::__1::shared_ptr<vk::NavLabel> > > { struct shared_ptr<vk::NavLabel> {} *x_3_2_1; } x_86_1_3; } x86; struct BRectImp<double> { struct Vec2Imp<double> { double x_1_2_1; double x_1_2_2; } x_87_1_1; struct Vec2Imp<double> { double x_2_2_1; double x_2_2_2; } x_87_1_2; } x87; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_88_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_88_1_2; } x88; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_89_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_89_1_2; } x89; struct BRectImp<float> { struct Vec2Imp<float> { float x_1_2_1; float x_1_2_2; } x_90_1_1; struct Vec2Imp<float> { float x_2_2_1; float x_2_2_2; } x_90_1_2; } x90; }*)arg1 setNeedsLayout:(BOOL)arg2;
- (void)updateInfoMapTiles:(id)arg1;
- (id)labelDebugString;
- (void)debugHighlightLabelAtScreenPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setFocusedPolylinePainter:(id)arg1;
- (id)focusedPolylinePainter;
- (void)didTransitionFrom:(int)arg1 To:(int)arg2;
- (void)willTransitionFrom:(int)arg1 To:(int)arg2;
- (void)didTapZoom;
- (void)willTapZoom;
- (id)initWithPurpose:(unsigned int)arg1;
- (void)stylesheetDoneChanging;
- (void)setLabelMode:(int)arg1;
- (void)setVectorType:(int)arg1;
- (void)stylesheetDidChange;
- (void)stylesheetWillChange;
- (void)prepareForStylesheetTransitionToMapDisplayStyle:(int)arg1 withReadinessBlock:(id)arg2;
- (void)setDrawLabels:(BOOL)arg1;
- (struct shared_ptr<vk::LabelManager> { struct LabelManager {} *x1; struct __shared_weak_count {} *x2; })labelManager;
- (void)drawScene:(id)arg1 withContext:(id)arg2;
- (unsigned int)supportedRenderPasses;
- (void)layoutScene:(id)arg1 withContext:(id)arg2;
- (void)setCurrentLocationText:(id)arg1;
- (void)setRouteUserOffset:(struct PolylineCoordinate { unsigned int x1; float x2; })arg1;
- (id)labelMarkers;
- (id)selectedLabelMarker;
- (void)selectLabelMarker:(id)arg1;
- (id)labelMarkerForSelectionAtPoint:(struct CGPoint { float x1; float x2; })arg1 selectableLabelsOnly:(BOOL)arg2;
- (void)setMapType:(int)arg1;
- (void)deselectLabelMarker;
- (void)setAlwaysVisibleTrafficIncidents:(id)arg1;
- (id)alwaysVisibleTrafficIncidents;
- (void)setShieldIdiom:(int)arg1;
- (int)shieldIdiom;
- (void)setNavigationShieldSize:(int)arg1;
- (int)navigationShieldSize;
- (void)setShieldSize:(int)arg1;
- (int)shieldSize;
- (void)clearScene;
- (void)setLabelScaleFactor:(int)arg1;
- (int)labelScaleFactor;
- (void)setLocalizeLabels:(BOOL)arg1;
- (BOOL)localizeLabels;
- (void)setTrafficEnabled:(BOOL)arg1;
- (void)setStylesheet:(id)arg1;
- (id)stylesheet;
- (void)setLabelMarkerSelectionEnabled:(BOOL)arg1;
- (BOOL)labelMarkerSelectionEnabled;
- (unsigned int)mapLayerPosition;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (void).cxx_destruct;
- (id).cxx_construct;
- (id)delegate;

@end
