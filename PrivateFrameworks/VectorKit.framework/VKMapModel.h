/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@class VKAnnotationModel, VKRasterOverlayTileSource, VKRoadMapModel, VKOverlayContainerModel, VKAnnotationMarker, NSMapTable, VKSkyModel, VKRealisticMapModel, VKOverlayTileSource, VKStylesheet, VKLabelMarker, VKGroundCoverMapModel, VKRasterTrafficMapModel, VKPolylineOverlayPainter, <VKMapModeObserver>, <VKRouteMatchedAnnotationPresentation>, VKDebugModel, VKTileProvider, NSMutableSet, VKTrafficTileSource, VKLabelModel, NSArray, <VKRoutePreloadSession>, VKGridModel, <VKMapModelDelegate>, NSMutableArray, NSSet, VKMapRasterizer, VKAnimation, VKBuildingFootprintMapModel, VKPolygonMapModel, VKRoadTrafficMapModel, VKRasterOverlayMapModel, VKRasterMapModel, VKMercatorTerrainHeightCache;

@interface VKMapModel : VKModelObject <VKAnnotationModelDelegate, VKOverlayContainerDelegate, VKLabelModelDelegate, GEOResourceManifestTileGroupObserver, VKTileProviderClient> {
    unsigned int _mapPurpose;
    int _tileSize;
    VKTileProvider *_tileProviders[3];
    VKTileProvider *_rasterOverlayProvider[2];
    int _mapMode;
    int _desiredMapMode;
    BOOL _transitioningToNav;
    BOOL _activeMapLayers[3][29];
    NSMapTable *_layerToSourceMaps[3];
    VKTrafficTileSource *_trafficSource;
    VKOverlayTileSource *_overlayTileSource;
    VKOverlayTileSource *_realisticOverlayTileSource;
    VKRasterOverlayTileSource *_rasterOverlayTileSource[2];
    VKGridModel *_gridModel;
    VKSkyModel *_skyModel;
    VKLabelModel *_labelModel;
    VKRasterMapModel *_rasterModel;
    VKRasterMapModel *_standardRasterModel;
    VKGroundCoverMapModel *_groundCoverModel;
    VKRoadMapModel *_riverLineModel;
    VKRasterTrafficMapModel *_rasterTrafficModel;
    VKPolygonMapModel *_polygonModel;
    VKRoadMapModel *_roadModel;
    VKRoadMapModel *_hybridRoadModel;
    VKRoadTrafficMapModel *_roadTrafficModel;
    VKRealisticMapModel *_realisticModel;
    VKBuildingFootprintMapModel *_buildingFootprintModel;
    VKAnnotationModel *_annotationModel;
    VKOverlayContainerModel *_overlayContainerModel;
    VKRasterOverlayMapModel *_rasterOverlayModel[2];
    VKDebugModel *_debugModel;
    NSMapTable *_tileSources;
    NSMutableArray *_drawOrder;
    NSMutableArray *_mapLayerSubmodels;
    NSMutableArray *_mapTileSubmodels;
    VKStylesheet *_activeStylesheet;
    VKStylesheet *_defaultStylesheet;
    VKStylesheet *_hybridStylesheet;
    VKStylesheet *_satelliteStylesheet;
    double _zoomLevel;
    int _mapType;
    <VKMapModelDelegate> *_delegate;
    <VKRoutePreloadSession> *_routePreloadSession;
    BOOL _dynamicMapModesEnabled;
    BOOL _debugDynamicMapModesEnabled;
    BOOL _buildingsAreVisible;
    BOOL _showsBuildings;
    BOOL _fullyDrawn;
    BOOL _shouldNotifyFullyDrawn;
    BOOL _hasFailedTile;
    BOOL _trafficEnabled;
    BOOL _shouldRasterize;
    int _loadingCount;
    float _contentScale;
    int _targetDisplay;
    double _lodBias;
    BOOL _disableRoads;
    BOOL _disableLabels;
    BOOL _disablePolygons;
    BOOL _disableBuildingFootprints;
    BOOL _disableRasters;
    BOOL _enableBlackRoadLines;
    BOOL _disableGrid;
    struct _VGLColor { 
        float r; 
        float g; 
        float b; 
        float a; 
    } _clearColor;
    VKMapRasterizer *_rasterizer;
    VKRasterMapModel *_rasterViewer;
    int _annotationMarkerStyle;
    BOOL _limitingNavCameraHeight;
    NSMutableSet *_blockingStylesheetObservers;
    float _styleTransitionProgress;
    NSMutableArray *_externalAnchors;
    VKAnimation *_modeTransitionAnimation;
    BOOL _disableRoadClass[9];
    <VKMapModeObserver> *_mapModeObserver;
}

@property(retain) VKStylesheet * stylesheet;
@property int mapType;
@property BOOL shouldLoadFallbackTiles;
@property unsigned int neighborMode;
@property int shieldSize;
@property int navigationShieldSize;
@property int shieldIdiom;
@property BOOL showsPointsOfInterest;
@property BOOL showsBuildings;
@property BOOL dynamicMapModesEnabled;
@property(readonly) int currentMapMode;
@property BOOL limitingNavCameraHeight;
@property(readonly) VKMercatorTerrainHeightCache * terrainHeightCache;
@property(getter=isTrafficEnabled) BOOL trafficEnabled;
@property BOOL localizeLabels;
@property int labelScaleFactor;
@property float contentScale;
@property int targetDisplay;
@property <VKMapModelDelegate> * delegate;
@property(readonly) VKBuildingFootprintMapModel * buildingFootprintModel;
@property(readonly) BOOL buildingsAreVisible;
@property(readonly) BOOL isFullyDrawn;
@property(readonly) VKTileProvider * tileProvider;
@property(readonly) VKLabelMarker * selectedLabelMarker;
@property BOOL labelMarkerSelectionEnabled;
@property(retain) NSArray * alwaysVisibleTrafficIncidents;
@property(readonly) VKAnnotationMarker * selectedAnnotationMarker;
@property(readonly) NSArray * overlays;
@property(readonly) NSSet * persistentOverlays;
@property(retain) VKPolylineOverlayPainter * focusedLabelsPolylinePainter;
@property BOOL disableRoads;
@property BOOL disableLabels;
@property BOOL disablePolygons;
@property BOOL disableBuildingFootprints;
@property BOOL disableRasters;
@property BOOL enableBlackRoadLines;
@property BOOL disableRealisticRoads;
@property BOOL disableRealisticLand;
@property BOOL disableGrid;
@property struct _VGLColor { float x1; float x2; float x3; float x4; } clearColor;
@property(retain) <VKRoutePreloadSession> * routePreloadSession;
@property <VKRouteMatchedAnnotationPresentation> * routeLineSplitAnnotation;
@property(readonly) NSArray * visibleTileSets;

+ (unsigned long)numberOfRoadClasses;
+ (const char *)nameForRoadClass:(int)arg1;

- (BOOL)limitingNavCameraHeight;
- (BOOL)buildingsAreVisible;
- (id)buildingFootprintModel;
- (BOOL)enableBlackRoadLines;
- (int)maximumZoomLevelInView:(id)arg1;
- (int)minimumZoomLevelInView:(id)arg1;
- (id)tileProvider;
- (void)didStopLoadingTilesWithError:(id)arg1;
- (void)willStartLoadingTiles;
- (void)tileProviderNeedsUpdate:(id)arg1;
- (BOOL)tileProviderMayUseNetwork:(id)arg1;
- (void)labelModel:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;
- (id)labelModel:(id)arg1 mapTileForTile:(id)arg2 layer:(unsigned int)arg3;
- (BOOL)overlayContainerIsInRealisticMode:(id)arg1;
- (id)overlayContainer:(id)arg1 roadTileForTile:(id)arg2;
- (id)overlayContainer:(id)arg1 painterForOverlay:(id)arg2;
- (void)annotationModel:(id)arg1 didFinishAddingAnnotationMarkers:(id)arg2;
- (void)annotationModel:(id)arg1 didAnimateInAnnotationMarkers:(id)arg2;
- (void)annotationModel:(id)arg1 willAnimateInAnnotationMarkers:(id)arg2;
- (id)labelDebugString;
- (void)_updateTileExclusionAreas;
- (id)_rasterOverlayTileSourceForLevel:(unsigned int)arg1;
- (void)setClearColor:(struct _VGLColor { float x1; float x2; float x3; float x4; })arg1;
- (void)_tryTransitionAndPreloadIfNecessary:(id)arg1;
- (void)_updateZoomLevel:(id)arg1;
- (double)maxTileHeightAtPoint:(struct VKPoint { double x1; double x2; double x3; })arg1;
- (void)foreachActiveLayer:(id)arg1;
- (void)didTapZoom;
- (void)willTapZoom;
- (void)shouldFlushCaches:(id)arg1;
- (void)_reloadStylesheet;
- (float)ppi;
- (void)_forceLayout;
- (void)_updateOverlayTileSource;
- (void)_updateRegularTileProviderMode;
- (void)performStylesheetDoneChanging;
- (void)performStylesheetDidChange;
- (void)performStylesheetWillChange;
- (void)_setStylesheetFromMapType:(int)arg1;
- (void)_mapConfigurationDidChange;
- (void)createTrafficTileSourceIfNecessary;
- (id)sourceForLayer:(unsigned int)arg1 mode:(int)arg2;
- (id)createSourceForLayer:(unsigned int)arg1 tileSet:(id)arg2 mode:(int)arg3;
- (int)tileStyleForMapLayer:(unsigned int)arg1;
- (void)configureTileSources;
- (void)_deactivateModel:(id)arg1;
- (void)_activateModel:(id)arg1;
- (void)_transitionFromMode:(int)arg1 toMode:(int)arg2 animated:(BOOL)arg3;
- (void)drawScene:(id)arg1 withContext:(id)arg2;
- (void)recursiveDrawScene:(id)arg1 withContext:(id)arg2 pass:(unsigned int)arg3;
- (void)layoutSceneIfNeeded:(id)arg1 withContext:(id)arg2;
- (unsigned int)supportedRenderPasses;
- (void)debugHighlightLabelAtScreenPoint:(struct CGPoint { float x1; float x2; })arg1 viewTransform:(id)arg2;
- (id)annotationMarkerForSelectionAtPoint:(struct VKPoint { double x1; double x2; double x3; })arg1 avoidCurrent:(BOOL)arg2 canvasSize:(struct CGSize { float x1; float x2; })arg3;
- (void)preloadNavigationSceneAnimationResourcesForDisplayStyle:(int)arg1 context:(id)arg2;
- (void)preloadNavigationSceneResourcesWithContext:(id)arg1;
- (id)navTileSource;
- (void)setLimitingNavCameraHeight:(BOOL)arg1;
- (void)didBeginTransitionToNavigation;
- (void)didEndNavigation;
- (double)heightAtPoint:(struct VKPoint { double x1; double x2; double x3; })arg1;
- (void)layoutScene:(id)arg1 withContext:(id)arg2;
- (int)currentMapMode;
- (void)flushCaches;
- (id)terrainHeightCache;
- (void)addSubmodel:(id)arg1;
- (id)initShouldRasterize:(BOOL)arg1 mapPurpose:(unsigned int)arg2 contentScale:(float)arg3;
- (void)setNeighborMode:(unsigned int)arg1;
- (unsigned int)neighborMode;
- (BOOL)isTrafficEnabled;
- (BOOL)disableGrid;
- (BOOL)disableRealisticLand;
- (BOOL)disableRealisticRoads;
- (BOOL)disableRasters;
- (BOOL)disableBuildingFootprints;
- (BOOL)disablePolygons;
- (BOOL)isFullyDrawn;
- (BOOL)isRoadClassDisabled:(int)arg1;
- (void)setDisableGrid:(BOOL)arg1;
- (void)setDisableRealisticLand:(BOOL)arg1;
- (void)setDisableRealisticRoads:(BOOL)arg1;
- (void)disableRoadClass:(BOOL)arg1 withRoadClass:(int)arg2;
- (void)setDisableRasters:(BOOL)arg1;
- (void)setEnableBlackRoadLines:(BOOL)arg1;
- (void)setDisableBuildingFootprints:(BOOL)arg1;
- (void)setDisablePolygons:(BOOL)arg1;
- (void)forceMapType:(int)arg1;
- (void)setFocusedLabelsPolylinePainter:(id)arg1;
- (id)focusedLabelsPolylinePainter;
- (void)setCurrentLocationText:(id)arg1;
- (void)setRouteUserOffset:(struct PolylineCoordinate { unsigned int x1; float x2; })arg1;
- (void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2;
- (void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2;
- (void)removeRasterOverlay:(id)arg1;
- (void)addRasterOverlay:(id)arg1;
- (id)labelMarkers;
- (id)selectedLabelMarker;
- (id)annotationCoordinateTest;
- (id)annotationRectTest;
- (void)deselectAnnotationMarker:(id)arg1;
- (void)selectLabelMarker:(id)arg1;
- (id)labelMarkerForSelectionAtPoint:(struct CGPoint { float x1; float x2; })arg1 selectableLabelsOnly:(BOOL)arg2;
- (id)routePreloadSession;
- (void)setRoutePreloadSession:(id)arg1;
- (void)_setStyleTransitionProgress:(float)arg1 targetStyle:(int)arg2 step:(int)arg3;
- (float)_styleTransitionProgress;
- (void)requestStylesheetAnimation:(id)arg1 targetMapDisplayStyle:(int)arg2 setupHandler:(id)arg3;
- (void)stylesheetAnimationDidEnd:(BOOL)arg1;
- (void)stylesheetAnimationDidProgress:(float)arg1;
- (void)stylesheetAnimationWillStartFromStyle:(int)arg1 toStyle:(int)arg2;
- (void)resetTileContainers;
- (int)targetDisplay;
- (void)setMapType:(int)arg1;
- (void)setDisableRoads:(BOOL)arg1;
- (BOOL)disableRoads;
- (void)setDisableLabels:(BOOL)arg1;
- (BOOL)disableLabels;
- (void)addExternalAnchor:(id)arg1;
- (void)removeExternalAnchor:(id)arg1;
- (id)externalAnchors;
- (void)deselectLabelMarker;
- (void)setRouteLineSplitAnnotation:(id)arg1;
- (id)routeLineSplitAnnotation;
- (void)addOverlay:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (id)overlays;
- (void)addPersistentOverlay:(id)arg1;
- (void)removePersistentOverlay:(id)arg1;
- (id)persistentOverlays;
- (void)selectAnnotationMarker:(id)arg1;
- (void)addAnnotationMarker:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)removeAnnotationMarker:(id)arg1;
- (id)annotationMarkers;
- (id)selectedAnnotationMarker;
- (void)setAnnotationMarkerDeselectionCallback:(id)arg1;
- (id)annotationMarkerDeselectionCallback;
- (void)setAlwaysVisibleTrafficIncidents:(id)arg1;
- (id)alwaysVisibleTrafficIncidents;
- (void)setDynamicMapModesEnabled:(BOOL)arg1;
- (BOOL)dynamicMapModesEnabled;
- (void)setDesiredMapMode:(int)arg1 immediate:(BOOL)arg2;
- (void)setShowsBuildings:(BOOL)arg1;
- (BOOL)showsBuildings;
- (void)setShowsPointsOfInterest:(BOOL)arg1;
- (BOOL)showsPointsOfInterest;
- (void)setShieldIdiom:(int)arg1;
- (int)shieldIdiom;
- (void)setNavigationShieldSize:(int)arg1;
- (int)navigationShieldSize;
- (void)setShieldSize:(int)arg1;
- (int)shieldSize;
- (id)detailedDescription;
- (BOOL)shouldLoadFallbackTiles;
- (void)setShouldLoadFallbackTiles:(BOOL)arg1;
- (void)clearScene;
- (void)setLabelScaleFactor:(int)arg1;
- (int)labelScaleFactor;
- (void)setLocalizeLabels:(BOOL)arg1;
- (BOOL)localizeLabels;
- (void)setTrafficEnabled:(BOOL)arg1;
- (void)setTargetDisplay:(int)arg1;
- (void)setStylesheet:(id)arg1;
- (id)stylesheet;
- (BOOL)isShowingNoDataPlaceholders;
- (id)attributionsForCurrentRegion;
- (id)visibleTileSets;
- (int)mapType;
- (void)setLabelMarkerSelectionEnabled:(BOOL)arg1;
- (BOOL)labelMarkerSelectionEnabled;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)_localeChanged:(id)arg1;
- (int)tileSize;
- (struct _VGLColor { float x1; float x2; float x3; float x4; })clearColor;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id).cxx_construct;
- (id)delegate;
- (float)contentScale;
- (void)setContentScale:(float)arg1;
- (void)didReceiveMemoryWarning;

@end
