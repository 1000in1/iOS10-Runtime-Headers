/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKPolylineGroupOverlayPainter : VKOverlayPainter <VKPolylineGroupOverlayObserver> {
    NSMapTable * _polylinesToPainters;
    VKPolylineOverlay * _selectedPolyline;
    BOOL  _showTraffic;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) VKPolylineOverlayPainter *selectedPolylinePainter;
@property (nonatomic) BOOL showTraffic;
@property (readonly) Class superclass;

- (void)_addPainterForOverlay:(id)arg1;
- (void)dealloc;
- (void)gglLayoutWithContext:(id)arg1 traveledStrokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; SEL x19; SEL x20; void*x21; const void*x22; void*x23; void*x24; int x25; in void*x26; out unsigned int x27/* : ? */; void*x28; BOOL x29; void*x30; void*x31; void*x32; void*x33; out SEL x34; SEL x35; void*x36; const void*x37; long x38; void*x39; void*x40; short x41; void*x42; void*x43; out unsigned int x44/* : ? */; void*x45; BOOL x46; void*x47; void*x48; void*x49; void*x50; out SEL x51; SEL x52; void*x53; void*x54; void*x55; short x56; void*x57; void*x58; out unsigned int x59/* : ? */; void*x60; BOOL x61; void*x62; void*x63; void*x64; void*x65; out SEL x66; SEL x67; void*x68; void*x69; long long x70; void*x71; void*x72; long x73; void*x74; out unsigned int x75/* : ? */; void*x76; BOOL x77; void*x78; void*x79; void*x80; void*x81; void*x82; short x83; void*x84; double x85; SEL x86; SEL x87; void*x88; void*x89; void*x90; SEL x91; SEL x92; void*x93; long long x94; void*x95; void*x96; long x97; void*x98; void*x99; out void*x100; short x101; void*x102; double x103; SEL x104; SEL x105; void*x106; void*x107; void*x108; SEL x109; SEL x110; short x111; void*x112; void*x113; const void*x114; double x115; void*x116; void*x117; void*x118; const void*x119; void*x120; short x121; short x122; SEL x123; SEL x124; unsigned short x125; void*x126; void*x127; long x128; void*x129; unsigned long long x130; void*x131; void*x132; const void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; const void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; float x146; }*)arg2 strokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; }*)arg3 traveledFillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; double x19; void*x20; void*x21; void*x22; long x23; void*x24; out void*x25; in void*x26; void*x27; void*x28; void*x29; void*x30; long x31; void*x32; out void*x33; in void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; short x41; void*x42; void*x43; void*x44; double x45; void*x46; SEL x47; void*x48; SEL x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; SEL x57; void*x58; SEL x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; short x69; void*x70; void*x71; void*x72; void*x73; void*x74; void x75; void*x76; void*x77; void*x78; long x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; in void*x99; short x100; void*x101; int x102; void*x103; void*x104; void*x105; in void*x106; void*x107; void*x108; double x109; void*x110; void*x111; void*x112; long x113; void*x114; out void*x115; in void*x116; void*x117; void*x118; void*x119; void*x120; long x121; void*x122; out void*x123; in void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void x131; void*x132; void*x133; void*x134; SEL x135; void*x136; SEL x137; void*x138; void*x139; void*x140; out void*x141; long x142; void*x143; void*x144; void*x145; void*x146; void*x147; out void*x148; in void*x149; void*x150; void*x151; out void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; const void*x164; int x165; void*x166; unsigned int x167/* : ? */; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; short x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; short x183; void*x184; void*x185; void*x186; double x187; void*x188; SEL x189; void*x190; SEL x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; SEL x199; void*x200; SEL x201; void*x202; void*x203; void*x204; long long x205; void*x206; void*x207; void*x208; void*x209; void*x210; long x211; void*x212; void*x213; void*x214; void*x215; void*x216; out void*x217; void*x218; void*x219; void*x220; void*x221; in void*x222; short x223; void*x224; int x225; void*x226; void*x227; void*x228; in void*x229; void*x230; void*x231; double x232; void*x233; void*x234; void*x235; long x236; void*x237; out void*x238; in void*x239; void*x240; void*x241; void*x242; void*x243; long x244; void*x245; out void*x246; in void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; const void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; struct x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; float x309; void*x310; long x311; void*x312; out void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; float x324; void*x325; int x326; void*x327; const void*x328; short x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; }*)arg4 fillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; long x19; void*x20; out void*x21; in void*x22; void*x23; void*x24; void*x25; void*x26; long x27; void*x28; out void*x29; in void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; oneway void*x37; void*x38; void*x39; void*x40; void*x41; out void*x42; long x43; void*x44; void*x45; void*x46; void*x47; void*x48; out void*x49; in void*x50; void*x51; void*x52; const void*x53; out void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; char *x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void x69; void*x70; out void*x71; int x72; void*x73; double x74; void*x75; void*x76; void*x77; char *x78; void*x79; void*x80; void*x81; void*x82; void*x83; char *x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; struct x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; short x148; void*x149; void*x150; void*x151; const void*x152; void*x153; void*x154; BOOL x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; BOOL x165; void*x166; out void*x167; void*x168; void*x169; void*x170; void*x171; const void*x172; void*x173; void*x174; short x175; void*x176; short x177; void*x178; void*x179; void*x180; double x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; int x189; void*x190; const void*x191; void*x192; void*x193; void*x194; void*x195; in void*x196; short x197; void*x198; int x199; void*x200; void*x201; void*x202; in void*x203; void*x204; void*x205; double x206; void*x207; void*x208; void*x209; long x210; void*x211; out void*x212; in void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; short x220; void*x221; void*x222; void*x223; double x224; void*x225; SEL x226; void*x227; SEL x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; SEL x236; void*x237; SEL x238; void*x239; void*x240; void*x241; long x242; void*x243; long x244; void*x245; out void*x246; BOOL x247; void*x248; void*x249; void*x250; void*x251; void*x252; out void*x253; const void*x254; void*x255; void*x256; short x257; void*x258; void*x259; void*x260; double x261; void*x262; SEL x263; void*x264; SEL x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; SEL x273; void*x274; SEL x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; short x285; void*x286; void*x287; void*x288; void*x289; void*x290; in void*x291; out void*x292; double x293; void*x294; void*x295; void*x296; void*x297; void*x298; short x299; void*x300; void*x301; void*x302; double x303; void*x304; SEL x305; void*x306; SEL x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; SEL x315; void*x316; SEL x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; short x327; void*x328; void*x329; void*x330; void*x331; void*x332; void x333; void*x334; void*x335; void*x336; long x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; in void*x357; short x358; void*x359; int x360; void*x361; void*x362; void*x363; in void*x364; void*x365; void*x366; double x367; void*x368; void*x369; void*x370; long x371; void*x372; out void*x373; void*x374; void*x375; void x376; void*x377; void*x378; void*x379; BOOL x380; void*x381; void*x382; void*x383; out void*x384; const void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; long x392; void*x393; SEL x394; void*x395; SEL x396; void*x397; void*x398; void*x399; void*x400; void*x401; in void*x402; double x403; void*x404; void*x405; void*x406; const void*x407; unsigned int x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; char *x418; void*x419; void*x420; void*x421; void*x422; void*x423; short x424; void*x425; void*x426; void*x427; double x428; void*x429; SEL x430; void*x431; SEL x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; SEL x440; void*x441; SEL x442; void*x443; void*x444; void*x445; long x446; void*x447; long x448; void*x449; out void*x450; BOOL x451; void*x452; void*x453; void*x454; void*x455; void*x456; out void*x457; const void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; long x465; void*x466; SEL x467; void*x468; SEL x469; void*x470; void*x471; void*x472; void*x473; void*x474; in void*x475; double x476; void*x477; void*x478; void*x479; const void*x480; unsigned int x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; char *x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; struct x501; void*x502; void*x503; void*x504; short x505; void*x506; void*x507; void*x508; const void*x509; void*x510; void*x511; BOOL x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; in void*x522; double x523; void*x524; void*x525; void*x526; const void*x527; unsigned int x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; struct x538; void*x539; }*)arg5 tiles:(id)arg6;
- (id)initWithOverlay:(id)arg1;
- (void)layoutWithContext:(id)arg1 tiles:(id)arg2 keysInView:(id)arg3;
- (void)polylineGroup:(id)arg1 didAddPolyline:(id)arg2;
- (void)polylineGroup:(id)arg1 didRemovePolyline:(id)arg2;
- (void)polylineGroup:(id)arg1 didSelectPolyline:(id)arg2;
- (id)selectedPolylinePainter;
- (void)setApplicationState:(unsigned char)arg1;
- (void)setContainerModel:(id)arg1;
- (void)setShowTraffic:(BOOL)arg1;
- (BOOL)showTraffic;
- (void)stylesheetDidChange;

@end
