/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@class VGLSharegroup, VGLResourceFactory, VGLVertexArrayObject, EAGLContext, VGLGPU, VGLRenderState, VGLTexture, NSMapTable, VGLFramebuffer, VGLProgram, NSString, VGLMesh, NSMutableArray, VGLProgramFactory;

@interface VGLContext : NSObject  {
    VGLGPU *_gpu;
    NSMutableArray *_renderStateStack;
    VGLSharegroup *_sharegroup;
    VGLResourceFactory *_resourceFactory;
    VGLFramebuffer *_framebuffer;
    struct CGSize { 
        float width; 
        float height; 
    } _sizeInPixels;
    union { 
        struct { 
            float m00; 
            float m01; 
            float m02; 
            float m03; 
            float m10; 
            float m11; 
            float m12; 
            float m13; 
            float m20; 
            float m21; 
            float m22; 
            float m23; 
            float m30; 
            float m31; 
            float m32; 
            float m33; 
        } ; 
        float m[16]; 
    } _pixelSpaceMatrix;
    BOOL _depthTest;
    BOOL _stencilTest;
    BOOL _cullFace;
    BOOL _blend;
    BOOL _scissorTest;
    struct { 
        float x0; 
        float x1; 
        float y0; 
        float y1; 
    } _scissorRect;
    int _blendMode;
    int _depthMode;
    float _lineWidth;
    float _clearDepth;
    struct _VGLColor { 
        float r; 
        float g; 
        float b; 
        float a; 
    } _clearColor;
    unsigned char _clearStencil;
    VGLProgram *_program;
    struct _VGLColor { 
        float r; 
        float g; 
        float b; 
        float a; 
    } _color;
    BOOL _depthMask;
    BOOL _colorMask;
    unsigned char _stencilMask;
    VGLMesh *_meshForUnitSquare;
    VGLMesh *_meshForUnitTexture;
    VGLMesh *_meshForUnitTextureInverted;
    unsigned int _activeTexture;
    VGLTexture *_texture[2][8];
    VGLVertexArrayObject *_VAO;
    unsigned int _sFactor;
    unsigned int _dFactor;
    unsigned int _sAlphaFactor;
    unsigned int _dAlphaFactor;
    int _currentFrameNumber;
    float _averageFPS;
    float _fpsStartTime;
    float _framerateSum;
    BOOL _drawFramerateGraph;
    struct _VGLColor { 
        float r; 
        float g; 
        float b; 
        float a; 
    } _frameRateGraphColor;
    float _framerateGraphSamples[30];
    NSMapTable *_programCache;
    VGLProgramFactory *_programFactory;
    NSString *_programFactoryCohort;
    BOOL _enablePolygonFillOffset;
    struct { 
        float factor; 
        float units; 
    } _polygonOffset;
    VGLRenderState *_simpleRenderState;
    EAGLContext *_eaglContext;
    struct _VGLColor { 
        float r; 
        float g; 
        float b; 
        float a; 
    } _framerateGraphColor;
}

@property(readonly) VGLGPU * gpu;
@property(readonly) VGLSharegroup * sharegroup;
@property(readonly) EAGLContext * eaglContext;
@property(retain) VGLFramebuffer * targetFramebuffer;
@property BOOL drawFramerateGraph;
@property struct _VGLColor { float x1; float x2; float x3; float x4; } framerateGraphColor;
@property(readonly) union { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; float x_1_1_5; float x_1_1_6; float x_1_1_7; float x_1_1_8; float x_1_1_9; float x_1_1_10; float x_1_1_11; float x_1_1_12; float x_1_1_13; float x_1_1_14; float x_1_1_15; float x_1_1_16; } x1; float x2[16]; } pixelSpaceMatrix;
@property BOOL depthTest;
@property BOOL stencilTest;
@property BOOL cullFace;
@property int blendMode;
@property int depthMode;
@property BOOL scissorTest;
@property struct { float x1; float x2; float x3; float x4; } scissorRect;
@property BOOL enablePolygonFillOffset;
@property struct { float x1; float x2; } polygonOffset;
@property float lineWidth;
@property float clearDepth;
@property struct _VGLColor { float x1; float x2; float x3; float x4; } clearColor;
@property unsigned char clearStencil;
@property BOOL depthMask;
@property BOOL colorMask;
@property unsigned char stencilMask;
@property(retain) VGLTexture * texture2D0;
@property(retain) VGLTexture * texture2D1;
@property(retain) VGLTexture * texture2D2;
@property(retain) VGLTexture * texture2D3;
@property(retain) VGLTexture * texture2D4;
@property(retain) VGLTexture * texture2D5;
@property(retain) VGLTexture * texture2D6;
@property(retain) VGLTexture * texture2D7;
@property(retain) VGLProgram * program;
@property(retain) VGLVertexArrayObject * VAO;
@property(readonly) VGLMesh * meshForUnitTexture;
@property(readonly) VGLMesh * meshForUnitTextureInverted;
@property unsigned int activeTexture;


- (id)VAO;
- (BOOL)colorMask;
- (unsigned int)activeTexture;
- (unsigned char)clearStencil;
- (float)clearDepth;
- (struct { float x1; float x2; float x3; float x4; })scissorRect;
- (struct _VGLColor { float x1; float x2; float x3; float x4; })framerateGraphColor;
- (BOOL)drawFramerateGraph;
- (id)eaglContext;
- (id)gpu;
- (id)programFactoryCohort;
- (id)newRenderbuffer;
- (id)newFramebuffer;
- (id)newBuffer;
- (id)newVAO;
- (id)newOcclusionResource:(int)arg1;
- (BOOL)isCurrentContext;
- (void)dumpCounts;
- (BOOL)checkForError;
- (id)meshForUnitTextureInverted;
- (void)drawTexture:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)fillRectAtZ:(float)arg1 x:(float)arg2 y:(float)arg3 w:(float)arg4 h:(float)arg5;
- (void)drawRectAtZ:(float)arg1 x:(float)arg2 y:(float)arg3 w:(float)arg4 h:(float)arg5;
- (void)fillRectangle:(struct { float x1; float x2; float x3; float x4; })arg1;
- (void)drawUnit;
- (void)fillCircleX:(float)arg1 Y:(float)arg2 radius:(float)arg3;
- (void)fillUnitCircle;
- (void)drawCircleX:(float)arg1 Y:(float)arg2 radius:(float)arg3;
- (void)drawUnitCircle;
- (void)drawTriangles:(int)arg1 nv:(int)arg2 pv:(float*)arg3;
- (void)drawTriangleStrip:(int)arg1 nv:(int)arg2 pv:(float*)arg3;
- (void)drawSegment3DP0:(struct { float x1; float x2; float x3; })arg1 p1:(struct { float x1; float x2; float x3; })arg2;
- (void)drawPointsDim:(int)arg1 nv:(int)arg2 pv:(float*)arg3;
- (void)drawAsteriskCX:(float)arg1 cy:(float)arg2 sz:(float)arg3;
- (void)doneStenciling;
- (void)stencilToInclusion;
- (void)stencilToExclusion;
- (void)captureStencilInclusion;
- (void)captureStencilExclusion;
- (void)beginCumulativeStencil;
- (void)setScissorRect:(struct { float x1; float x2; float x3; float x4; })arg1;
- (id)texture2D7;
- (id)texture2D6;
- (id)texture2D5;
- (id)texture2D4;
- (id)texture2D3;
- (id)texture2D2;
- (id)texture2D1;
- (id)texture2D0;
- (void)setTexture2D7:(id)arg1;
- (void)setTexture2D6:(id)arg1;
- (void)setTexture2D5:(id)arg1;
- (void)setTexture2D4:(id)arg1;
- (void)setTexture2D3:(id)arg1;
- (void)resetAlphaChannel:(unsigned char)arg1;
- (void)setColorMask:(BOOL)arg1;
- (BOOL)renderbufferStorage:(unsigned int)arg1 fromCanvas:(id)arg2;
- (id)initWithGPU:(id)arg1 sharegroup:(id)arg2;
- (union { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; float x_1_1_5; float x_1_1_6; float x_1_1_7; float x_1_1_8; float x_1_1_9; float x_1_1_10; float x_1_1_11; float x_1_1_12; float x_1_1_13; float x_1_1_14; float x_1_1_15; float x_1_1_16; } x1; float x2[16]; })pixelSpaceMatrix;
- (void)drawFramerateGraphMethod;
- (void)drawTriangleFan:(int)arg1 nv:(int)arg2 pv:(float*)arg3;
- (void)drawRectangle:(struct { float x1; float x2; float x3; float x4; })arg1;
- (void)_drawCircleWithMode:(unsigned int)arg1 X:(float)arg2 Y:(float)arg3 radius:(float)arg4;
- (void)drawLinesDim:(int)arg1 nv:(int)arg2 pv:(float*)arg3;
- (void)drawLineX0:(float)arg1 y0:(float)arg2 x1:(float)arg3 y1:(float)arg4;
- (void)_drawArrayMode:(unsigned int)arg1 dim:(int)arg2 nv:(int)arg3 pv:(float*)arg4 pt:(float*)arg5;
- (void)_drawArrayMode:(unsigned int)arg1 dim:(int)arg2 nv:(int)arg3 pv:(float*)arg4;
- (void)updatePixelSpaceMatrixWithSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_setTexture:(id)arg1 target:(int)arg2 unit:(int)arg3;
- (void)setActiveTexture:(unsigned int)arg1;
- (void)_blendFuncWithSFactor:(unsigned int)arg1 dFactor:(unsigned int)arg2 sAlphaFactor:(unsigned int)arg3 dAlphaFactor:(unsigned int)arg4;
- (id)renderState;
- (void)_forceBlendMode:(int)arg1;
- (void)setProgramFactoryCohort:(id)arg1;
- (void)setStencilMask:(unsigned char)arg1;
- (unsigned char)stencilMask;
- (void)setScissorTest:(BOOL)arg1;
- (void)setPolygonOffset:(struct { float x1; float x2; })arg1;
- (void)setEnablePolygonFillOffset:(BOOL)arg1;
- (void)setDepthMode:(int)arg1;
- (BOOL)scissorTest;
- (struct { float x1; float x2; })polygonOffset;
- (BOOL)enablePolygonFillOffset;
- (BOOL)cullFace;
- (BOOL)depthMask;
- (int)depthMode;
- (BOOL)depthTest;
- (void)setCullFace:(BOOL)arg1;
- (BOOL)stencilTest;
- (id)program;
- (void)setTexture2D2:(id)arg1;
- (void)drawLineStripDim:(int)arg1 nv:(int)arg2 pv:(float*)arg3;
- (void)popRenderState;
- (void)pushRenderState;
- (void)setDepthMask:(BOOL)arg1;
- (void)drawUnitSquareMesh;
- (void)drawUnitSquare;
- (void)fillRectX:(float)arg1 y:(float)arg2 w:(float)arg3 h:(float)arg4;
- (void)drawRectX:(float)arg1 y:(float)arg2 w:(float)arg3 h:(float)arg4;
- (void)drawCrossCX:(float)arg1 cy:(float)arg2 sz:(float)arg3;
- (void)setVAO:(id)arg1;
- (void)setTexture2D1:(id)arg1;
- (void)setTexture2D0:(id)arg1;
- (void)bindRenderState:(id)arg1;
- (void)setFramerateGraphColor:(struct _VGLColor { float x1; float x2; float x3; float x4; })arg1;
- (void)setDrawFramerateGraph:(BOOL)arg1;
- (float)averageFPS;
- (void)_pop:(void*)arg1;
- (BOOL)_push:(void**)arg1;
- (void)setStencilFunc:(int)arg1 ref:(unsigned char)arg2 mask:(unsigned char)arg3;
- (void)setStencilOpFail:(int)arg1 zFail:(int)arg2 zPass:(int)arg3;
- (void)setColorMaskRed:(BOOL)arg1 green:(BOOL)arg2 blue:(BOOL)arg3 alpha:(BOOL)arg4;
- (id)meshForUnitTexture;
- (void)setProgram:(id)arg1;
- (void)setDepthTest:(BOOL)arg1;
- (void)setStencilTest:(BOOL)arg1;
- (void)setClearColor:(struct _VGLColor { float x1; float x2; float x3; float x4; })arg1;
- (void)setClearDepth:(float)arg1;
- (void)setClearStencil:(unsigned char)arg1;
- (void)drawLineLoopDim:(int)arg1 nv:(int)arg2 pv:(float*)arg3;
- (void)clearBufferColor:(BOOL)arg1 stencil:(BOOL)arg2 depth:(BOOL)arg3;
- (void)bindSimpleRenderState;
- (id)newTextureResource;
- (id)programWithClass:(Class)arg1;
- (void)updatePixelSpaceMatrix;
- (void)setTargetFramebuffer:(id)arg1;
- (void)startFrame;
- (id)targetFramebuffer;
- (void)reset;
- (void)endFrame;
- (float)lineWidth;
- (id)sharegroup;
- (void)setBlendMode:(int)arg1;
- (int)blendMode;
- (struct _VGLColor { float x1; float x2; float x3; float x4; })clearColor;
- (void)dealloc;
- (id).cxx_construct;
- (id)description;
- (void)present;
- (void)perform:(id)arg1;
- (void)setLineWidth:(float)arg1;

@end
