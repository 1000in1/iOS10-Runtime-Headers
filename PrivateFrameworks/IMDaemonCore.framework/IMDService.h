/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/IMDaemonCore.framework/IMDaemonCore
 */

@class NSString, NSBundle, NSDictionary;

@interface IMDService : NSObject <IMSystemMonitorListener> {
    NSBundle *_bundle;
    Class _sessionClass;
    NSString *_internalName;
    NSDictionary *_accountDefaults;
    NSDictionary *_serviceDefaults;
    NSDictionary *_serviceProperties;
    NSDictionary *_cachedServiceDefaults;
    NSDictionary *_cachedSetupServiceDefaults;
    bool_blockPrefWriting;
}

@property(readonly) Class sessionClass;
@property(readonly) Class accountClass;
@property(retain,readonly) NSDictionary * serviceProperties;
@property(retain,readonly) NSBundle * bundle;
@property(retain,readonly) NSString * internalName;
@property(retain,readonly) NSString * serviceDomain;
@property(readonly) bool isIDSBased;
@property(retain,readonly) NSDictionary * serviceDefaults;
@property(retain,readonly) NSDictionary * serviceDefaultsForSetup;
@property(retain,readonly) NSDictionary * defaultAccountSettings;
@property(readonly) bool serviceRequiresSingleAccount;
@property(readonly) bool shouldCreateActiveAccounts;
@property(readonly) bool serviceWantsNullHostReachability;
@property(readonly) bool serviceIgnoresNetworkConnectivity;
@property(readonly) bool shouldForceAccountsActive;
@property(readonly) bool shouldForceAccountsConnected;
@property(readonly) bool serviceNeedsLogin;
@property(readonly) bool serviceNeedsPassword;
@property(readonly) bool serviceShouldBeAlwaysLoggedIn;
@property(readonly) bool serviceRequiresHost;
@property(readonly) bool serviceSupportsRegistration;
@property(readonly) bool serviceChatsIgnoreLoginStatus;
@property(readonly) bool serviceSupportsPresence;
@property(readonly) bool supportsDatabase;
@property(readonly) bool disallowDeactivation;
@property(readonly) long long serviceProtocolVersion;


- (bool)serviceSupportsPresence;
- (bool)serviceChatsIgnoreLoginStatus;
- (bool)serviceRequiresHost;
- (bool)serviceShouldBeAlwaysLoggedIn;
- (bool)serviceNeedsPassword;
- (bool)serviceNeedsLogin;
- (bool)serviceWantsNullHostReachability;
- (bool)serviceIgnoresNetworkConnectivity;
- (bool)serviceSupportsRegistration;
- (bool)supportsDatabase;
- (id)newAccountWithAccountDefaults:(id)arg1 accountID:(id)arg2;
- (bool)clearOneTimeImportAccounts;
- (id)serviceDefaultsForSetup;
- (void)purgeMemoryCaches;
- (id)_oldServiceDomain;
- (id)_serviceDefaultsForDomain:(id)arg1;
- (id)_defaultDefaults;
- (void)loadServiceBundle;
- (id)oldInternalName;
- (id)_serviceDomain;
- (long long)serviceProtocolVersion;
- (void)_reallyUnloadServiceBundle;
- (void)unloadServiceBundle;
- (void)synchronizeServiceDefaults;
- (id)_copyServicePropertiesFromIMServiceBundle:(id)arg1;
- (bool)shouldForceAccountsActive;
- (bool)disallowDeactivation;
- (bool)shouldCreateActiveAccounts;
- (bool)serviceRequiresSingleAccount;
- (id)serviceDefaults;
- (bool)isIDSBased;
- (bool)shouldForceAccountsConnected;
- (Class)sessionClass;
- (void)delayedSaveSettings;
- (id)serviceDomain;
- (void)accountRemoved:(id)arg1;
- (void)accountAdded:(id)arg1;
- (void)disableAccount:(id)arg1;
- (void)enableAccount:(id)arg1;
- (id)defaultAccountSettings;
- (id)serviceProperties;
- (id)internalName;
- (Class)accountClass;
- (id)bundle;
- (void)systemDidStartBackup;
- (void)systemDidEnterMemoryPressure;
- (void)dealloc;
- (id)description;
- (id)initWithBundle:(id)arg1;
- (void)saveSettings;

@end
