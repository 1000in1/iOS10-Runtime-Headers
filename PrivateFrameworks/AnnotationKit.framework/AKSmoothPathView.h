/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AnnotationKit.framework/AnnotationKit
 */

@interface AKSmoothPathView : UIView {
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _accumulatedSignatureDirtyRect;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  _aggregateInvalidRect;
    BOOL  _applyModelBaseScaleFactorToStroke;
    float  _cachedEffectiveStrokeWidthInModel;
    float  _cachedModelToViewScale;
    UIColor * _canvasBackgroundColor;
    AKController * _controller;
    float  _currentBlur;
    AKRichBrushStroke * _currentBrushStroke;
    <AKSmoothPathViewDelegate> * _delegate;
    BOOL  _gestureHasStartedSmoothedStroke;
    BOOL  _hasShadow;
    CHQuadCurvePointFIFO * _interpolatingFIFO;
    BOOL  _isAddingPointWithoutSmoothing;
    double  _lastSetNeedsDisplayCallToSuperTime;
    float  _maxBlur;
    float  _minBlur;
    struct CGPath { } * _mutablePath;
    BOOL  _prestrokedOutputMode;
    float  _sensitivity;
    float  _shadowRadiusInModel;
    float  _shadowRadiusInView;
    float  _singleDotCurrentSize;
    CHBoxcarFilterPointFIFO * _smoothingFIFO;
    BOOL  _startedTouchDrawing;
    UIColor * _strokeColor;
    CHPointStrokeFIFO * _strokeFIFO;
    float  _strokeWidth;
    NSMutableArray * _strokes;
}

@property (nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } aggregateInvalidRect;
@property BOOL applyModelBaseScaleFactorToStroke;
@property (retain) UIColor *canvasBackgroundColor;
@property AKController *controller;
@property float currentBlur;
@property (nonatomic, retain) AKRichBrushStroke *currentBrushStroke;
@property <AKSmoothPathViewDelegate> *delegate;
@property BOOL gestureHasStartedSmoothedStroke;
@property (nonatomic) BOOL hasShadow;
@property (nonatomic, retain) CHQuadCurvePointFIFO *interpolatingFIFO;
@property BOOL isAddingPointWithoutSmoothing;
@property (nonatomic) float maxBlur;
@property (nonatomic) float minBlur;
@property (nonatomic) BOOL prestrokedOutputMode;
@property (nonatomic) float sensitivity;
@property float shadowRadiusInModel;
@property float shadowRadiusInView;
@property float singleDotCurrentSize;
@property (nonatomic, retain) CHBoxcarFilterPointFIFO *smoothingFIFO;
@property (nonatomic) BOOL startedTouchDrawing;
@property (nonatomic, retain) UIColor *strokeColor;
@property (nonatomic, retain) CHPointStrokeFIFO *strokeFIFO;
@property (nonatomic) float strokeWidth;
@property (nonatomic, retain) NSMutableArray *strokes;

- (void).cxx_destruct;
- (float)_convertValueFromModelToSelf:(float)arg1;
- (void)_deferredInvalidate:(id)arg1;
- (void)_dipatchInvalidateWithNewPoints:(id)arg1 invalidViewRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (float)_effectiveStrokeWidthInModel;
- (id)_flipDrawingCooridnates:(id)arg1;
- (void)_forceRedisplay;
- (struct CGContext { }*)_getPlatformCGContext;
- (void)_handleForwardedUIEvent:(id)arg1;
- (BOOL)_isRTL;
- (void)_setupShadowInContext:(struct CGContext { }*)arg1;
- (void)_updateInterpolatingFifoLineWidth;
- (void)_updateInterpolatingFifoUnitScale;
- (void)_updateShadowRadiusInView;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })aggregateInvalidRect;
- (BOOL)applyModelBaseScaleFactorToStroke;
- (void)awakeFromNib;
- (void)callDelegate;
- (id)canvasBackgroundColor;
- (void)clear;
- (void)commonInit;
- (void)continueStroke;
- (void)continueStrokeWithoutSmoothing;
- (id)controller;
- (float)currentBlur;
- (id)currentBrushStroke;
- (id)delegate;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)drawing;
- (void)flush;
- (BOOL)gestureHasStartedSmoothedStroke;
- (void)handleDragAction:(id)arg1;
- (void)handleForwardedEvent:(id)arg1;
- (void)handleTapAction:(id)arg1;
- (BOOL)hasShadow;
- (id)initWithController:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)interpolatingFIFO;
- (BOOL)isAddingPointWithoutSmoothing;
- (BOOL)isOpaque;
- (float)maxBlur;
- (float)minBlur;
- (void)pointForRecognizer:(id)arg1;
- (BOOL)prestrokedOutputMode;
- (float)scaleFactor;
- (float)sensitivity;
- (void)setAggregateInvalidRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setApplyModelBaseScaleFactorToStroke:(BOOL)arg1;
- (void)setCanvasBackgroundColor:(id)arg1;
- (void)setController:(id)arg1;
- (void)setCurrentBlur:(float)arg1;
- (void)setCurrentBrushStroke:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setGestureHasStartedSmoothedStroke:(BOOL)arg1;
- (void)setHasShadow:(BOOL)arg1;
- (void)setInterpolatingFIFO:(id)arg1;
- (void)setIsAddingPointWithoutSmoothing:(BOOL)arg1;
- (void)setMaxBlur:(float)arg1;
- (void)setMinBlur:(float)arg1;
- (void)setPrestrokedOutputMode:(BOOL)arg1;
- (void)setSensitivity:(float)arg1;
- (void)setShadowRadiusInModel:(float)arg1;
- (void)setShadowRadiusInView:(float)arg1;
- (void)setSingleDotCurrentSize:(float)arg1;
- (void)setSmoothingFIFO:(id)arg1;
- (void)setStartedTouchDrawing:(BOOL)arg1;
- (void)setStrokeColor:(id)arg1;
- (void)setStrokeFIFO:(id)arg1;
- (void)setStrokeWidth:(float)arg1;
- (void)setStrokes:(id)arg1;
- (float)shadowRadiusInModel;
- (float)shadowRadiusInView;
- (float)singleDotCurrentSize;
- (float)smoothToPointInTouch:(id)arg1;
- (id)smoothingFIFO;
- (void)startStroke;
- (BOOL)startedTouchDrawing;
- (id)strokeColor;
- (id)strokeFIFO;
- (float)strokeWidth;
- (id)strokes;
- (void)teardown;
- (void)terminateStroke;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;

@end
