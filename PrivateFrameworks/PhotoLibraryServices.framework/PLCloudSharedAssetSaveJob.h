/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

@class NSString, MSASAssetCollection, NSArray, NSDictionary, AssetCollectionInfo;

@interface PLCloudSharedAssetSaveJob : PLCloudSharingJob  {
    bool_replacingOriginalWithDerivative;
    AssetCollectionInfo *_currentAssetCollectionInfo;
    bool_isVideo;
    NSString *_currentFilePath;
    NSString *_currentCloudAssetGUID;
    unsigned long long _currentCloudAssetMediaAssetType;
    NSString *_cloudAlbumGUID;
    NSString *_cloudPersonID;
    MSASAssetCollection *_currentCloudAssetCollection;
    NSArray *_assetCollectionInfos;
    NSArray *_cloudAssetGUIDsToDelete;
    long long _jobType;
    NSDictionary *_mstreamdInfoDictionary;
}

@property(retain) NSString * currentFilePath;
@property(retain) NSString * currentCloudAssetGUID;
@property unsigned long long currentCloudAssetMediaAssetType;
@property(retain) NSString * cloudAlbumGUID;
@property(retain) NSString * cloudPersonID;
@property(retain) MSASAssetCollection * currentCloudAssetCollection;
@property(retain) NSArray * assetCollectionInfos;
@property bool isVideo;
@property(retain) NSArray * cloudAssetGUIDsToDelete;
@property long long jobType;
@property(retain) NSDictionary * mstreamdInfoDictionary;

+ (id)placeholderImageProperties;
+ (void)replaceRecentlyUploadedOriginalWithDerivativeForCollection:(id)arg1 inAlbum:(id)arg2 personID:(id)arg3;
+ (void)deleteCloudSharedAssetsWithCloudGUIDs:(id)arg1 info:(id)arg2;
+ (void)saveCloudSharedAssetAtPath:(id)arg1 forAssetCollectionWithGUID:(id)arg2 mediaAssetType:(unsigned long long)arg3 albumGUID:(id)arg4 personID:(id)arg5 info:(id)arg6 shouldPrioritize:(bool)arg7;
+ (void)downloadPendingAssetsForPersonID:(id)arg1 info:(id)arg2;
+ (id)_dcimDirectoryForFileURL:(id)arg1;
+ (id)pathForInFlightAssetCollectionWithGUID:(id)arg1 mediaAssetType:(unsigned long long)arg2;
+ (bool)_lightweightReimportCacheDirectoryExists;
+ (id)_lightweightReimportPhotoCloudSharingAlbumInfoForAlbumWithCloudGUID:(id)arg1 cloudPersonID:(id)arg2;
+ (void)processMetadataForAssetCollections:(id)arg1 inAlbum:(id)arg2 personID:(id)arg3 info:(id)arg4;
+ (id)nextDCIMSaveFileURLForCloudPersonID:(id)arg1 cloudAlbumGUID:(id)arg2 fileExtension:(id)arg3;

- (void)setCurrentCloudAssetCollection:(id)arg1;
- (id)currentCloudAssetCollection;
- (short)attemptLightweightReimportAssetData;
- (bool)_createPlaceHolderInSharedAlbum:(id)arg1;
- (bool)_processSaveAssetWithPlaceholderKind:(short)arg1 withAssetDataFilePath:(id)arg2;
- (void)_processInFlightCommentsForAsset:(id)arg1 inAlbum:(id)arg2 inPhotoLibrary:(id)arg3;
- (unsigned long long)_insertionIndexForAsset:(id)arg1 inAlbum:(id)arg2;
- (bool)_parseISO6709String:(id)arg1 outLatitude:(double*)arg2 outLongitude:(double*)arg3;
- (void)saveJobAssetWithPlaceholderKind:(short)arg1;
- (short)placeHolderKindFromAssetMetadataType:(unsigned long long)arg1;
- (void)executeDaemonOperationDownloadPendingAssetsJobType;
- (void)executeDaemonOperationReplaceRecentlyUploadedOriginalJobType;
- (void)executeDaemonOperationDeleteAssetJobType;
- (void)executeDaemonOperationSaveAssetJobType;
- (void)executeDaemonOperationSaveAssetMetadataForCollectionsJobType;
- (bool)isProcessingThumbnail;
- (void)setJobType:(long long)arg1;
- (void)setMstreamdInfoDictionary:(id)arg1;
- (void)setAssetCollectionInfos:(id)arg1;
- (void)setCloudAssetGUIDsToDelete:(id)arg1;
- (void)setCloudAlbumGUID:(id)arg1;
- (void)setCurrentCloudAssetGUID:(id)arg1;
- (void)setCurrentCloudAssetMediaAssetType:(unsigned long long)arg1;
- (void)setCurrentFilePath:(id)arg1;
- (long long)jobType;
- (id)mstreamdInfoDictionary;
- (id)assetCollectionInfos;
- (id)cloudAssetGUIDsToDelete;
- (unsigned long long)currentCloudAssetMediaAssetType;
- (id)currentCloudAssetGUID;
- (id)cloudAlbumGUID;
- (id)currentFilePath;
- (long long)daemonOperation;
- (void)runDaemonSide;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)setIsVideo:(bool)arg1;
- (void)setCloudPersonID:(id)arg1;
- (id)cloudPersonID;
- (void)encodeToXPCObject:(id)arg1;
- (bool)isVideo;
- (void)run;
- (id)init;
- (void)dealloc;
- (id)description;

@end
