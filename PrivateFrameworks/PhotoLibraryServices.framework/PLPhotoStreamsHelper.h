/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

@interface PLPhotoStreamsHelper : NSObject  {
    bool_appHasPolledOnceThisForegroundSession;
}

+ (bool)canInitiateDistributedPhotoStreamDeletionForAssetUUID:(id)arg1;
+ (bool)writeBreadcrumbContent:(id)arg1 forHashString:(id)arg2;
+ (id)publishBreadcrumbsPath;
+ (id)iCloudServiceAccount;
+ (id)_acaccountStore;
+ (bool)photoStreamsEnabled;
+ (id)sharedPhotoStreamsHelper;

- (bool)shouldPublishScreenShots;
- (void)resetServerState;
- (void)enumerateMasterHashesAndPublicGlobalUUIDsForAssets:(id)arg1 withBlock:(id)arg2;
- (void)initiateDeletionOfOriginalAssets:(id)arg1;
- (void)resume_mstreamd:(id)arg1;
- (id)pause_mstreamd;
- (id)pathToSavedMetadataForAssetHash:(id)arg1 streamID:(id)arg2 createIntermediateDirs:(bool)arg3;
- (id)derivedAssetForMasterAsset:(id)arg1;
- (struct CGSize { double x1; double x2; })derivedAssetSizeForMasterSizeWidth:(double)arg1 height:(double)arg2;
- (id)temporaryPathForRecentlyUploadedAsset:(id)arg1;
- (long long)friendsLimit;
- (long long)imageLimitForFriendStream;
- (long long)imageLimitForOwnStream;
- (long long)maxPixelSizeForDerivative;
- (long long)_serverIntegerLimitForKey:(id)arg1 debugDefaultKey:(id)arg2;
- (void)pollForNewSubscriptionContentOncePerAppForegroundSession;
- (bool)dequeueAssetsForPSPublishing:(id)arg1;
- (bool)isValidUploadAsset:(id)arg1 type:(id)arg2 fileSize:(id)arg3;
- (void)writeDidPublishBreadcrumbforHash:(id)arg1 imagePath:(id)arg2;
- (void)writeDidEnqueueBreadcrumbForHash:(id)arg1 imagePath:(id)arg2;
- (void)writeWillEnqueueBreadcrumbForHash:(id)arg1 imagePath:(id)arg2;
- (bool)removeBreadcrumbsForHashString:(id)arg1;
- (id)lastPhotoStreamUpdateDate;
- (id)psHashAsString:(id)arg1;
- (id)psHashForData:(id)arg1;
- (void)_appDidEnterBackground:(id)arg1;
- (id)imageLimitsByAssetType;
- (bool)shouldUploadVideos;
- (void)pollForNewSubscriptionContent;
- (void)cleanupPhotoStreamMetadataForAssetsWithUUIDs:(id)arg1 forStreamID:(id)arg2;
- (void)resetMstreamdStateForPersonID:(id)arg1;
- (bool)enqueueAssetForPSPublishing:(id)arg1 assetHash:(id)arg2 fullPath:(id)arg3 fileSize:(id)arg4 type:(id)arg5 reenqueueCount:(id)arg6 publicGlobalUUID:(id*)arg7;
- (void)savePhotoStreamMetadata:(id)arg1 forAsset:(id)arg2;
- (id)photoStreamsPublishStreamID;
- (void)clearCachedAccountState;
- (void)initiateDeletionOfPhotoStreamAssets:(id)arg1;
- (id)init;
- (void)dealloc;

@end
