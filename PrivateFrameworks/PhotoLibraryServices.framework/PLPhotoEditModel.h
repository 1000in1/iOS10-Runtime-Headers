/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

@class NSString, NSDictionary, NSArray;

@interface PLPhotoEditModel : NSObject <NSCopying> {
    NSString *_effectFilterName;
    long long _effectFilterVersion;
    bool_smartToneEnabled;
    double _smartToneLevel;
    double _brightnessLevelOffset;
    double _contrastLevelOffset;
    double _exposureLevelOffset;
    double _shadowsLevelOffset;
    double _blackPointLevelOffset;
    double _highlightsLevelOffset;
    bool_smartColorEnabled;
    double _smartColorLevel;
    double _colorContrastLevelOffset;
    double _colorVibrancyLevelOffset;
    double _colorCastLevelOffset;
    bool_smartBWEnabled;
    double _smartBWLevel;
    double _bwStrengthLevelOffset;
    double _bwNeutralGammaLevelOffset;
    double _bwToneLevelOffset;
    double _bwHueLevelOffset;
    double _bwGrainLevelOffset;
    double _straightenAngle;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _normalizedCropRect;
    long long _cropConstraintWidth;
    long long _cropConstraintHeight;
    unsigned long long _rotation;
    NSDictionary *_smartToneStatistics;
    NSDictionary *_smartColorStatistics;
    NSDictionary *_smartBWStatistics;
    NSArray *_redEyeCorrections;
    NSArray *_autoRedEyeCorrections;
    NSArray *_autoEnhanceFilters;
    bool_autoEnhanceIsOn;
}

@property(copy,readonly) NSString * effectFilterName;
@property(readonly) long long effectFilterVersion;
@property(getter=isSmartToneEnabled,readonly) bool smartToneEnabled;
@property(copy,readonly) NSDictionary * smartToneStatistics;
@property(readonly) double smartToneLevel;
@property(readonly) double brightnessLevelOffset;
@property(readonly) double contrastLevelOffset;
@property(readonly) double exposureLevelOffset;
@property(readonly) double highlightsLevelOffset;
@property(readonly) double shadowsLevelOffset;
@property(readonly) double blackPointLevelOffset;
@property(getter=isSmartColorEnabled,readonly) bool smartColorEnabled;
@property(copy,readonly) NSDictionary * smartColorStatistics;
@property(readonly) double smartColorLevel;
@property(readonly) double colorContrastLevelOffset;
@property(readonly) double colorVibrancyLevelOffset;
@property(readonly) double colorCastLevelOffset;
@property(getter=isSmartBWEnabled,readonly) bool smartBWEnabled;
@property(copy,readonly) NSDictionary * smartBWStatistics;
@property(readonly) double smartBWLevel;
@property(readonly) double bwStrengthLevelOffset;
@property(readonly) double bwNeutralGammaLevelOffset;
@property(readonly) double bwToneLevelOffset;
@property(readonly) double bwHueLevelOffset;
@property(readonly) double bwGrainLevelOffset;
@property(readonly) unsigned long long rotation;
@property(readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } normalizedCropRect;
@property(readonly) long long cropConstraintWidth;
@property(readonly) long long cropConstraintHeight;
@property(readonly) double straightenAngle;
@property(readonly) bool hasIdentityCrop;
@property(copy,readonly) NSArray * redEyeCorrections;
@property(copy,readonly) NSArray * autoRedEyeCorrections;
@property(copy,readonly) NSArray * autoEnhanceFilters;
@property(readonly) bool autoEnhanceIsOn;

+ (int)identityOrientation;
+ (double)_referenceValueOfType:(long long)arg1 fromLevels:(struct { double x1; double x2; double x3; })arg2;
+ (void)_loadSubfilterReferenceLevelsIfNeeded;
+ (long long)identityCropConstraint;
+ (double)referenceSmartBWLevelOfType:(long long)arg1;
+ (double)referenceSmartColorLevelOfType:(long long)arg1;
+ (double)referenceSmartToneLevelOfType:(long long)arg1;
+ (double)referenceBWGrainLevelOfType:(long long)arg1;
+ (double)referenceBWHueLevelOfType:(long long)arg1;
+ (double)referenceBWToneLevelOfType:(long long)arg1;
+ (double)referenceBWNeutralGammaLevelOfType:(long long)arg1;
+ (double)referenceBWStrengthLevelOfType:(long long)arg1;
+ (double)referenceColorCastLevelOfType:(long long)arg1;
+ (double)referenceColorVibrancyLevelOfType:(long long)arg1;
+ (double)referenceColorContrastLevelOfType:(long long)arg1;
+ (double)referenceBlackPointLevelOfType:(long long)arg1;
+ (double)referenceShadowsLevelOfType:(long long)arg1;
+ (double)referenceHighlightsLevelOfType:(long long)arg1;
+ (double)referenceExposureLevelOfType:(long long)arg1;
+ (double)referenceContrastLevelOfType:(long long)arg1;
+ (double)referenceBrightnessLevelOfType:(long long)arg1;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })identityNormalizedCropRect;
+ (double)angleForRotation:(unsigned long long)arg1;
+ (unsigned long long)identityRotation;
+ (double)referenceStraightenAngleOfType:(long long)arg1;

- (bool)hasIdentityCrop;
- (bool)isIdentityModel;
- (bool)isVisuallyEqualToPhotoEditModel:(id)arg1;
- (long long)cropConstraintHeight;
- (long long)cropConstraintWidth;
- (void)_copyDataFromModel:(id)arg1;
- (id)smartBWStatistics;
- (double)smartBWLevel;
- (double)smartColorLevel;
- (double)smartToneLevel;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })normalizedCropRect;
- (double)straightenAngle;
- (long long)effectFilterVersion;
- (id)effectFilterName;
- (double)bwGrainLevelOffset;
- (double)bwHueLevelOffset;
- (double)bwToneLevelOffset;
- (double)bwNeutralGammaLevelOffset;
- (double)bwStrengthLevelOffset;
- (bool)isSmartBWEnabled;
- (double)colorCastLevelOffset;
- (double)colorVibrancyLevelOffset;
- (double)colorContrastLevelOffset;
- (bool)isSmartColorEnabled;
- (double)blackPointLevelOffset;
- (double)shadowsLevelOffset;
- (double)highlightsLevelOffset;
- (double)exposureLevelOffset;
- (double)contrastLevelOffset;
- (double)brightnessLevelOffset;
- (bool)isSmartToneEnabled;
- (id)autoEnhanceFilters;
- (id)autoRedEyeCorrections;
- (id)redEyeCorrections;
- (bool)autoEnhanceIsOn;
- (bool)isEqualToPhotoEditModel:(id)arg1;
- (unsigned long long)rotation;
- (id)smartColorStatistics;
- (id)smartToneStatistics;
- (id)init;
- (id)mutableCopy;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dictionaryRepresentation;

@end
