/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
 */

@class NSString;

@interface TUProxyCall : TUCall <NSSecureCoding> {
    bool_conferenced;
    bool_outgoing;
    bool_voicemail;
    int _status;
    int _callIdentifier;
    int _service;
    double _startTime;
    NSString *_destinationID;
    NSString *_conferenceIdentifier;
    NSString *_callerNameFromNetwork;
}

@property(copy) NSString * destinationID;
@property int callIdentifier;
@property(copy) NSString * displayName;
@property int status;
@property double startTime;
@property(getter=isConferenced) bool conferenced;
@property int service;
@property(getter=isOutgoing) bool outgoing;
@property(retain) NSString * conferenceIdentifier;
@property(getter=isVoicemail) bool voicemail;
@property(copy) NSString * callerNameFromNetwork;

+ (bool)supportsSecureCoding;

- (void)setStatus:(int)arg1;
- (int)status;
- (void)setVoicemail:(bool)arg1;
- (void)setOutgoing:(bool)arg1;
- (void)setConferenced:(bool)arg1;
- (bool)supportsRelayingAudioOrVideo;
- (void)playDTMFToneForKey:(unsigned char)arg1;
- (void)unhold;
- (void)hold;
- (id)initWithCall:(id)arg1;
- (id)initWithDestinationID:(id)arg1 service:(int)arg2 status:(int)arg3 sourceIdentifier:(id)arg4 outgoing:(bool)arg5 conferenceIdentifier:(id)arg6 voicemail:(bool)arg7 callerNameFromNetwork:(id)arg8;
- (void)updateWithCall:(id)arg1;
- (void)setCallerNameFromNetwork:(id)arg1;
- (void)setConferenceIdentifier:(id)arg1;
- (void)setCallIdentifier:(int)arg1;
- (void)setDestinationID:(id)arg1;
- (bool)isVoicemail;
- (bool)isHostedOnCurrentDevice;
- (id)remoteFrequency;
- (id)conferenceIdentifier;
- (id)localFrequency;
- (bool)managesAudioInterruptions;
- (double)callDuration;
- (id)callUUID;
- (int)callIdentifier;
- (id)callerNameFromNetwork;
- (id)destinationID;
- (void)leaveConference;
- (void)joinConference;
- (bool)isConferenced;
- (bool)setDownlinkMuted:(bool)arg1;
- (bool)isDownlinkMuted;
- (bool)setUplinkMuted:(bool)arg1;
- (bool)isUplinkMuted;
- (bool)isOutgoing;
- (void)answerWithSourceIdentifier:(id)arg1;
- (id)audioMode;
- (id)audioCategory;
- (int)supportedModelType;
- (int)service;
- (void)setService:(int)arg1;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStartTime:(double)arg1;
- (double)startTime;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)disconnect;

@end
