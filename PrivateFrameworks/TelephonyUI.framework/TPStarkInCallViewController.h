/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/TelephonyUI.framework/TelephonyUI
 */

@class UIView, <TPStarkInCallViewControllerDelegate>, NSArray, TUCall, TPStarkInCallHardPauseButton, TPStarkPhoneCallGalleryView, NSTimer, TUReplyWithMessageStore, TPStarkInCallButtonsView;

@interface TPStarkInCallViewController : UIViewController <TPStarkPhoneCallGalleryViewDelegate, TPStarkHardPauseButtonDelegate, TPStarkInCallButtonsViewDelegate, UIActionSheetDelegate> {
    TUReplyWithMessageStore *_replyWithMessageStore;
    unsigned short _currentMode;
    <TPStarkInCallViewControllerDelegate> *_delegate;
    NSArray *_primaryPhoneCalls;
    NSArray *_conferenceParticipants;
    TUCall *_incomingPhoneCall;
    UIView *_flippyView;
    TPStarkPhoneCallGalleryView *_galleryView;
    TPStarkInCallButtonsView *_buttonsView;
    TPStarkInCallHardPauseButton *_hardPauseButton;
    NSTimer *_viewUpdateClockTickTimer;
    TUCall *_callToDecline;
    TUCall *_failedCall;
}

@property <TPStarkInCallViewControllerDelegate> * delegate;
@property(readonly) bool isDismissable;
@property(copy) NSArray * primaryPhoneCalls;
@property(copy) NSArray * conferenceParticipants;
@property(retain) TUCall * incomingPhoneCall;
@property(retain) UIView * flippyView;
@property(retain) TPStarkPhoneCallGalleryView * galleryView;
@property(retain) TPStarkInCallButtonsView * buttonsView;
@property(retain) TPStarkInCallHardPauseButton * hardPauseButton;
@property(retain) NSTimer * viewUpdateClockTickTimer;
@property(retain) TUCall * callToDecline;
@property unsigned short currentMode;
@property(retain) TUCall * failedCall;


- (bool)isDismissable;
- (id)currentActivePhoneCall;
- (void)setPrimaryPhoneCalls:(id)arg1 conferencePhoneCalls:(id)arg2 incomingPhoneCall:(id)arg3;
- (bool)canSendMessage;
- (bool)isKeypadAllowed;
- (bool)isSwapCallsAllowed;
- (bool)isMergeCallsAllowed;
- (void)inCallButtonWasTapped:(id)arg1;
- (void)hardPauseButtonDidChangeVisibility:(id)arg1;
- (id)conferenceParticipantCallsForPhoneCall:(id)arg1;
- (void)highlightHardPauseButton;
- (void)selectNextHighlightableControlAscending:(bool)arg1;
- (bool)isSpringBoardPasscodeLocked;
- (bool)areIncomingCallOptionsAllowed;
- (void)setFailedCall:(id)arg1;
- (void)_sendMessageResponse:(id)arg1 toCall:(id)arg2;
- (void)handleAlertControllerSendMessageResponse:(id)arg1;
- (id)replyWithMessageStore;
- (void)setCallToDecline:(id)arg1;
- (bool)canSendMessageToCall:(id)arg1;
- (id)callToDecline;
- (id)failedCall;
- (void)updateButtonsViewState;
- (bool)currentCallStateWarrantsCallWaitingMode;
- (void)setIncomingPhoneCall:(id)arg1;
- (void)setConferenceParticipants:(id)arg1;
- (void)setPrimaryPhoneCalls:(id)arg1;
- (id)__sanitizedPrimaryPhoneCallOrdering:(id)arg1;
- (id)incomingPhoneCall;
- (id)conferenceParticipants;
- (id)primaryPhoneCalls;
- (void)viewUpdateClockTickTimerFired:(id)arg1;
- (void)setViewUpdateClockTickTimer:(id)arg1;
- (id)viewUpdateClockTickTimer;
- (id)hardPauseButton;
- (void)setHardPauseButton:(id)arg1;
- (id)buttonsView;
- (void)setButtonsView:(id)arg1;
- (id)galleryView;
- (void)setGalleryView:(id)arg1;
- (id)flippyView;
- (void)setFlippyView:(id)arg1;
- (void)callFailedNotification:(id)arg1;
- (void)muteStateChangedNotification:(id)arg1;
- (id)representativePhoneCallForConferenceForGalleryView:(id)arg1;
- (id)primaryPhoneCallsForGalleryView:(id)arg1;
- (id)allConferenceParticipantCalls;
- (void)setIsMuted:(bool)arg1;
- (unsigned short)currentMode;
- (bool)isMuted;
- (bool)isAddCallAllowed;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (void)setCurrentMode:(unsigned short)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;

@end
