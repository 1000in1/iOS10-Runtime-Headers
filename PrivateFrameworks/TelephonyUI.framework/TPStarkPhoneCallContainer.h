/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/TelephonyUI.framework/TelephonyUI
 */

@class <TPStarkPhoneCallContainerDataSource>, NSMutableArray, <TPStarkPhoneCallContainerDelegate>;

@interface TPStarkPhoneCallContainer : UIView  {
    bool_shouldMerge;
    bool_merging;
    <TPStarkPhoneCallContainerDataSource> *_dataSource;
    <TPStarkPhoneCallContainerDelegate> *_delegate;
    NSMutableArray *_visibleCells;
}

@property <TPStarkPhoneCallContainerDataSource> * dataSource;
@property <TPStarkPhoneCallContainerDelegate> * delegate;
@property(retain) NSMutableArray * visibleCells;
@property bool shouldMerge;
@property(getter=isMerging) bool merging;


- (void)setShouldMerge:(bool)arg1;
- (bool)shouldMerge;
- (void)setVisibleCells:(id)arg1;
- (void)addRelationForRightOfCell:(id)arg1;
- (void)addRelationForLeftOfCell:(id)arg1;
- (void)removeAllConstraintsForCell:(id)arg1;
- (void)addRelationForWidthOfCell:(id)arg1;
- (id)constraintToFillContainerWithRightOfCell:(id)arg1;
- (id)constraintToFillContainerWithLeftOfCell:(id)arg1;
- (void)addConstraintsForNewCell:(id)arg1;
- (void)phoneCallViewCellTapped:(id)arg1;
- (void)mergeAllCellConstraints;
- (void)animateLayoutOfViewWithCompletionBlock:(id)arg1;
- (void)updateAllCellConstraints;
- (void)removeVisibleCells:(unsigned long long)arg1;
- (void)mergeVisibleCells;
- (void)updateLayoutAnimated:(bool)arg1;
- (void)createVisibleCells:(unsigned long long)arg1;
- (void)updateCell:(id)arg1 atIndex:(unsigned long long)arg2 animated:(bool)arg3;
- (void)updateNumberOfCellsWithNewValue:(unsigned long long)arg1 animated:(bool)arg2;
- (bool)shouldReloadCellsWithNumberOfCells:(unsigned long long)arg1;
- (id)_reloadQueue;
- (void)setNeedsMerge;
- (void)reloadDataAnimated:(bool)arg1;
- (bool)isMerging;
- (void)setMerging:(bool)arg1;
- (void)setDataSource:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)dataSource;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)visibleCells;
- (void)reloadData;

@end
