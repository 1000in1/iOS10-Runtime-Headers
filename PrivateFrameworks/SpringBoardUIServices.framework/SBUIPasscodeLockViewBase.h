/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 */

@class <SBFLegibilitySettingsProvider>, _UILegibilitySettings, SBUIPasscodeEntryField, NSString, <SBUIPasscodeLockViewDelegate>, <SBUIPasscodeLockViewDelegate_Internal>, UIColor;

@interface SBUIPasscodeLockViewBase : UIView <SBUIBiometricEventObserver, SBFLegibilitySettingsProviderDelegate, SBUIPasscodeLockView> {
    <SBUIPasscodeLockViewDelegate_Internal> *_delegate;
    int _style;
    NSString *_passcode;
    BOOL _playsKeypadSounds;
    BOOL _showsEmergencyCallButton;
    BOOL _showsStatusField;
    BOOL _becameVisible;
    float _backgroundAlpha;
    UIColor *_customBackgroundColor;
    SBUIPasscodeEntryField *_entryField;
    <SBFLegibilitySettingsProvider> *_backgroundLegibilitySettingsProvider;
    float _luminanceBoost;
    float _currentBacklightLevel;
    _UILegibilitySettings *_legibilitySettings;
    BOOL _allowsStatusTextUpdatingOnResignFirstResponder;
    BOOL _mesaLockedOut;
    unsigned int _biometricMatchMode;
    BOOL _shouldResetForFailedPasscodeAttempt;
}

@property int style;
@property(getter=_luminosityBoost,setter=_setLuminosityBoost:) float luminosityBoost;
@property(getter=_entryField,setter=_setEntryField:,retain) SBUIPasscodeEntryField * _entryField;
@property BOOL shouldResetForFailedPasscodeAttempt;
@property <SBUIPasscodeLockViewDelegate> * delegate;
@property(readonly) NSString * passcode;
@property BOOL playsKeypadSounds;
@property BOOL showsStatusField;
@property BOOL showsEmergencyCallButton;
@property float backgroundAlpha;
@property(retain) UIColor * customBackgroundColor;
@property(retain) <SBFLegibilitySettingsProvider> * backgroundLegibilitySettingsProvider;
@property unsigned int biometricMatchMode;


- (void)setShouldResetForFailedPasscodeAttempt:(BOOL)arg1;
- (BOOL)shouldResetForFailedPasscodeAttempt;
- (void)_setEntryField:(id)arg1;
- (void)_sendDelegateKeypadKeyUp;
- (void)_sendDelegateKeypadKeyDown;
- (BOOL)_isBoundsPortraitOriented;
- (void)setBiometricMatchMode:(unsigned int)arg1;
- (void)setBackgroundLegibilitySettingsProvider:(id)arg1;
- (id)backgroundLegibilitySettingsProvider;
- (void)setCustomBackgroundColor:(id)arg1;
- (id)customBackgroundColor;
- (float)backgroundAlpha;
- (BOOL)showsEmergencyCallButton;
- (BOOL)showsStatusField;
- (BOOL)playsKeypadSounds;
- (id)passcode;
- (void)setAllowsStatusTextUpdatingOnResignFirstResponder:(BOOL)arg1;
- (void)resetForFailedPasscode;
- (void)biometricEventMonitor:(id)arg1 handleBiometricEvent:(unsigned int)arg2;
- (void)_handleBiometricEvent:(unsigned int)arg1;
- (void)_resetForFailedMesaAttemptWithEvent:(unsigned int)arg1;
- (void)_notifyDelegatePasscodeEnteredViaMesa;
- (void)_updateStatusTextForBioEvent:(unsigned int)arg1 animated:(BOOL)arg2;
- (id)_entryField;
- (void)_updateStatusText:(id)arg1 animated:(BOOL)arg2;
- (float)_luminanceBoostFromDisplayBrightness;
- (float)_luminanceBoostFromLegibility;
- (void)_screenBrightnessReallyDidChange;
- (unsigned int)biometricMatchMode;
- (void)_setLuminosityBoost:(float)arg1;
- (float)_luminosityBoost;
- (void)_luminanceBoostDidChange;
- (void)_evaluateLuminance;
- (void)_resetStatusText;
- (void)_resetForFailedPasscode:(BOOL)arg1;
- (void)_clearBrightnessChangeTimer;
- (void)_noteScreenBrightnessDidChange;
- (BOOL)_wantsBiometricAuthentication;
- (void)setShowsStatusField:(BOOL)arg1;
- (void)setShowsEmergencyCallButton:(BOOL)arg1;
- (void)setPlaysKeypadSounds:(BOOL)arg1;
- (void)providerLegibilitySettingsChanged:(id)arg1;
- (int)_orientation;
- (void)reset;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setStyle:(int)arg1;
- (int)style;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (void)setBackgroundAlpha:(float)arg1;
- (void)_setLegibilitySettings:(id)arg1;
- (BOOL)canResignFirstResponder;
- (BOOL)isFirstResponder;
- (BOOL)canBecomeFirstResponder;
- (void)didMoveToWindow;

@end
