/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation
 */

@class <SBFProceduralWallpaper>, NSDictionary, NSTimer, UIImage;

@interface SBFProceduralWallpaperView : SBFWallpaperView <SBFProceduralWallpaperDelegate> {
    <SBFProceduralWallpaper> *_proceduralWallpaper;
    NSDictionary *_options;
    NSTimer *_colorSampleTimer;
    UIImage *_blur;
    int _thermalNotificationToken;
    bool_pausedForThermalReasons;
    bool_amAppearing;
}

+ (bool)_allowsRasterization;
+ (bool)_allowsParallax;

- (void)wallpaper:(id)arg1 didComputeAverageColor:(id)arg2 forRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)wallpaper:(id)arg1 didGenerateBlur:(void*)arg2 forRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)recomputeLegibilitySettings;
- (void)_sample;
- (bool)_shouldSampleContinuously;
- (id)_newImageFromBlurSurface:(void*)arg1 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_updateSampleTimer;
- (void)_updateAnimating;
- (void)setWallpaperAnimationEnabled:(bool)arg1;
- (void)setContinuousColorSamplingEnabled:(bool)arg1;
- (bool)isDisplayingWallpaper:(id)arg1 forVariant:(long long)arg2 options:(id)arg3;
- (void)prepareToDisappear;
- (void)prepareToAppear;
- (void)_stopGeneratingBlurredImages;
- (void)_startGeneratingBlurredImages;
- (void)_handleVisibilityChange;
- (id)_blurredImage;
- (void)_handleVariantChange;
- (id)_computeAverageColor;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 proceduralWallpaper:(id)arg2 options:(id)arg3;
- (bool)_isVisible;
- (void)invalidate;
- (void)dealloc;
- (void)layoutSubviews;

@end
