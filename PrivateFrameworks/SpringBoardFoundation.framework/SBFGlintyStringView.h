/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation
 */

@class UIImage, _UILegibilitySettings, UIFont, NSTimer, SBFGlintyStringSettings, UIView, <SBFGlintyStringViewDelegate>, NSString, UILabel, UIColor, UIImageView;

@interface SBFGlintyStringView : UIView <_UISettingsKeyPathObserver> {
    BOOL _animationRepeats;
    BOOL _showsOverlay;
    BOOL _adjustsFontSizeToFitWidth;
    BOOL _hasCustomBackgroundColor;
    BOOL _needsTextUpdate;
    <SBFGlintyStringViewDelegate> *_delegate;
    SBFGlintyStringSettings *_settings;
    NSString *_text;
    UIFont *_font;
    NSString *_textLanguage;
    _UILegibilitySettings *_legibilitySettings;
    UIView *_backgroundView;
    UIColor *_backgroundColor;
    float _chevronStyle;
    NSTimer *_timer;
    UILabel *_label;
    UIView *_lightTintView;
    UIView *_colorCompositingView;
    UIView *_darkTintView;
    UIView *_chevronGlimmer1;
    UIView *_chevronGlimmer2;
    UIImageView *_spotlightView1;
    UIImageView *_spotlightView2;
    int _textIndex;
    int _animationCounter;
    UIImage *_chevron;
    struct CGSize { 
        float width; 
        float height; 
    } _labelSize;
    double _spotlightPointTraversalTime;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _spotlightAnimationStartFrame;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _spotlightAnimationEndFrame;
}

@property <SBFGlintyStringViewDelegate> * delegate;
@property(retain) SBFGlintyStringSettings * settings;
@property(copy) NSString * text;
@property(retain) UIFont * font;
@property(copy) NSString * textLanguage;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } labelFrame;
@property(retain) _UILegibilitySettings * legibilitySettings;
@property(retain) UIView * backgroundView;
@property(retain) UIColor * backgroundColor;
@property BOOL animationRepeats;
@property BOOL showsOverlay;
@property BOOL adjustsFontSizeToFitWidth;
@property BOOL hasCustomBackgroundColor;
@property float chevronStyle;
@property BOOL needsTextUpdate;
@property(retain) NSTimer * timer;
@property(retain) UILabel * label;
@property struct CGSize { float x1; float x2; } labelSize;
@property(retain) UIView * lightTintView;
@property(retain) UIView * colorCompositingView;
@property(retain) UIView * darkTintView;
@property(retain) UIView * chevronGlimmer1;
@property(retain) UIView * chevronGlimmer2;
@property(retain) UIImageView * spotlightView1;
@property(retain) UIImageView * spotlightView2;
@property int textIndex;
@property struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } spotlightAnimationStartFrame;
@property struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } spotlightAnimationEndFrame;
@property double spotlightPointTraversalTime;
@property int animationCounter;
@property(retain) UIImage * chevron;


- (id)initWithText:(id)arg1 andFont:(id)arg2;
- (void)setSpotlightPointTraversalTime:(double)arg1;
- (double)spotlightPointTraversalTime;
- (void)setTextIndex:(int)arg1;
- (int)textIndex;
- (void)setLabelSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })labelSize;
- (void)setNeedsTextUpdate:(BOOL)arg1;
- (BOOL)needsTextUpdate;
- (float)chevronStyle;
- (void)setHasCustomBackgroundColor:(BOOL)arg1;
- (void)setShowsOverlay:(BOOL)arg1;
- (BOOL)showsOverlay;
- (void)setAnimationRepeats:(BOOL)arg1;
- (BOOL)animationRepeats;
- (id)legibilitySettings;
- (id)textLanguage;
- (float)baselineOffsetFromBottom;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })labelFrame;
- (void)setLegibilitySettings:(id)arg1;
- (void)setTextLanguage:(id)arg1;
- (id)lightTintView;
- (id)darkTintView;
- (id)colorCompositingView;
- (void)setChevronGlimmer2:(id)arg1;
- (void)setChevronGlimmer1:(id)arg1;
- (void)setSpotlightAnimationEndFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setSpotlightAnimationStartFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setSpotlightView2:(id)arg1;
- (void)setSpotlightView1:(id)arg1;
- (void)setLightTintView:(id)arg1;
- (void)setDarkTintView:(id)arg1;
- (void)setColorCompositingView:(id)arg1;
- (BOOL)colorIsLowSaturationWithHighBrightness:(id)arg1;
- (float)_chevronHeightWithInset;
- (float)_chevronWidthWithPadding;
- (void)setChevron:(id)arg1;
- (id)_chevronImageForStyle:(int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })spotlightAnimationEndFrame;
- (void)animateChevronGlimmer;
- (void)animateSpotlight;
- (int)animationCounter;
- (void)setAnimationCounter:(int)arg1;
- (id)chevronGlimmer2;
- (id)chevronGlimmer1;
- (id)spotlightView2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })spotlightAnimationStartFrame;
- (id)spotlightView1;
- (void)animate;
- (BOOL)hasCustomBackgroundColor;
- (void)updateText;
- (void)setChevronStyle:(float)arg1;
- (id)chevron;
- (void)setBackgroundColor:(id)arg1;
- (void)setSettings:(id)arg1;
- (id)text;
- (id)label;
- (id)font;
- (id)backgroundColor;
- (void)setDelegate:(id)arg1;
- (void)setTimer:(id)arg1;
- (id)timer;
- (void)dealloc;
- (id)delegate;
- (void)setMaskImage:(id)arg1 onLayer:(id)arg2;
- (id)settings;
- (void)settings:(id)arg1 changedValueForKeyPath:(id)arg2;
- (void)setLabel:(id)arg1;
- (void)startAnimating;
- (void)stopAnimating;
- (BOOL)isAnimating;
- (id)backgroundView;
- (void)setBackgroundView:(id)arg1;
- (BOOL)adjustsFontSizeToFitWidth;
- (void)setAdjustsFontSizeToFitWidth:(BOOL)arg1;
- (void)setText:(id)arg1;
- (void)setFont:(id)arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;

@end
