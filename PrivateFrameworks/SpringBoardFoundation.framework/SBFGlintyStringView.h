/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation
 */

@class UIImageView, UIFont, UILabel, SBFGlintyStringSettings, NSTimer, <SBFGlintyStringViewDelegate>, NSString, UIView, UIColor, NSArray;

@interface SBFGlintyStringView : UIView <_UISettingsKeyPathObserver> {
    BOOL _animationRepeats;
    BOOL _showsOverlay;
    BOOL _needsTextUpdate;
    <SBFGlintyStringViewDelegate> *_delegate;
    SBFGlintyStringSettings *_settings;
    NSString *_text;
    UIFont *_font;
    UIColor *_textColor;
    NSTimer *_timer;
    UILabel *_label;
    NSArray *_glints;
    UIView *_overlayView;
    UIImageView *_spotlightView;
    int _textIndex;
    struct CGSize { 
        float width; 
        float height; 
    } _labelSize;
    double _spotlightPointTraversalTime;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _spotlightAnimationStartFrame;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _spotlightAnimationEndFrame;
}

@property <SBFGlintyStringViewDelegate> * delegate;
@property(retain) SBFGlintyStringSettings * settings;
@property(copy) NSString * text;
@property(retain) UIFont * font;
@property(retain) UIColor * textColor;
@property BOOL animationRepeats;
@property BOOL showsOverlay;
@property BOOL needsTextUpdate;
@property(retain) NSTimer * timer;
@property(retain) UILabel * label;
@property struct CGSize { float x1; float x2; } labelSize;
@property(retain) NSArray * glints;
@property(retain) UIView * overlayView;
@property(retain) UIImageView * spotlightView;
@property int textIndex;
@property struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } spotlightAnimationStartFrame;
@property struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } spotlightAnimationEndFrame;
@property double spotlightPointTraversalTime;

+ (id)_initializeSafeCategoryFromValidationManager;
+ (void)_accessibilityPerformValidations:(id)arg1;
+ (void)_initializeSafeCategory;

- (id)initWithText:(id)arg1 andFont:(id)arg2;
- (void)setSpotlightPointTraversalTime:(double)arg1;
- (double)spotlightPointTraversalTime;
- (void)setTextIndex:(int)arg1;
- (int)textIndex;
- (void)setLabelSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })labelSize;
- (void)setNeedsTextUpdate:(BOOL)arg1;
- (BOOL)needsTextUpdate;
- (BOOL)showsOverlay;
- (void)setAnimationRepeats:(BOOL)arg1;
- (BOOL)animationRepeats;
- (float)baselineOffsetFromBottom;
- (void)setShowsOverlay:(BOOL)arg1;
- (void)createGlints;
- (void)setSpotlightAnimationEndFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setSpotlightAnimationStartFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setOverlayView:(id)arg1;
- (void)setSpotlightView:(id)arg1;
- (void)setGlints:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })spotlightAnimationEndFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })spotlightAnimationStartFrame;
- (id)spotlightView;
- (id)glints;
- (void)animateGlints;
- (void)animateSpotlight;
- (void)animate;
- (void)updateText;
- (void)setSettings:(id)arg1;
- (id)text;
- (id)label;
- (id)font;
- (void)setDelegate:(id)arg1;
- (void)setTimer:(id)arg1;
- (id)timer;
- (void)dealloc;
- (id)delegate;
- (id)overlayView;
- (id)settings;
- (void)settings:(id)arg1 changedValueForKeyPath:(id)arg2;
- (void)setLabel:(id)arg1;
- (void)startAnimating;
- (void)stopAnimating;
- (id)textColor;
- (void)setTextColor:(id)arg1;
- (void)setFont:(id)arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)setText:(id)arg1;
- (void)layoutSubviews;
- (unsigned long long)accessibilityTraits;
- (id)accessibilityIdentifier;
- (BOOL)accessibilityActivate;
- (id)accessibilityLabel;
- (BOOL)isAccessibilityElement;
- (BOOL)_accessibilitySupportsActivateAction;

@end
