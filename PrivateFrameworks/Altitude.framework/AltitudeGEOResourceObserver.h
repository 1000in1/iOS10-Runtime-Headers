/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/Altitude.framework/Altitude
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@interface AltitudeGEOResourceObserver : NSObject <GEOResourceManifestTileGroupObserver> {
    struct GeoResourceManager { int (**x1)(); struct ReflectionBase {} *x2; struct BitField<unsigned int> { unsigned int x_3_1_1; } x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_5_1; unsigned int x_1_5_2; char *x_1_5_3; } x_1_4_1; struct __short { union { unsigned char x_1_6_1; BOOL x_1_6_2; } x_2_5_1; BOOL x_2_5_2[11]; } x_1_4_2; struct __raw { unsigned long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_4_1_1; } x4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_5_1; unsigned int x_1_5_2; char *x_1_5_3; } x_1_4_1; struct __short { union { unsigned char x_1_6_1; BOOL x_1_6_2; } x_2_5_1; BOOL x_2_5_2[11]; } x_1_4_2; struct __raw { unsigned long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_5_1_1; } x5; struct Context {} *x6; boolx7; boolx8; boolx9; boolx10; boolx11; boolx12; boolx13; struct KaroMapImp<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char> > > { int (**x_14_1_1)(); struct ReflectionBase {} *x_14_1_2; struct BitField<unsigned int> { unsigned int x_3_2_1; } x_14_1_3; unsigned int x_14_1_4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_6_1; unsigned int x_1_6_2; char *x_1_6_3; } x_1_5_1; struct __short { union { unsigned char x_1_7_1; BOOL x_1_7_2; } x_2_6_1; BOOL x_2_6_2[11]; } x_1_5_2; struct __raw { unsigned long x_3_6_1[3]; } x_1_5_3; } x_1_4_1; } x_1_3_1; } x_5_2_1; } x_14_1_5; struct InputSlot { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_7_1; unsigned int x_1_7_2; char *x_1_7_3; } x_1_6_1; struct __short { union { unsigned char x_1_8_1; BOOL x_1_8_2; } x_2_7_1; BOOL x_2_7_2[11]; } x_1_6_2; struct __raw { unsigned long x_3_7_1[3]; } x_1_6_3; } x_1_5_1; } x_1_4_1; } x_1_3_1; } x_6_2_1; struct Rtti {} *x_6_2_2; struct Node {} *x_6_2_3; struct KaroArrayImp<karo::Node *> { int (**x_4_3_1)(); struct ReflectionBase {} *x_4_3_2; struct BitField<unsigned int> { unsigned int x_3_4_1; } x_4_3_3; unsigned int x_4_3_4; struct vector<karo::Node *, std::__1::allocator<karo::Node *> > { struct Node {} **x_5_4_1; struct Node {} **x_5_4_2; struct __compressed_pair<karo::Node **, std::__1::allocator<karo::Node *> > { struct Node {} **x_3_5_1; } x_5_4_3; } x_4_3_5; unsigned int x_4_3_6; } x_6_2_4; boolx_6_2_5; struct BitField<unsigned int> { unsigned int x_6_3_1; } x_6_2_6; } x_14_1_6; unsigned int x_14_1_7; unsigned int x_14_1_8; struct map<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, karo::Node::InputSlot> > > { struct __tree<std::__1::pair<std::__1::basic_string<char>, karo::Node::InputSlot>, std::__1::__map_value_compare<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, karo::Node::InputSlot> > > { struct __tree_node<std::__1::pair<std::__1::basic_string<char>, karo::Node::InputSlot>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<std::__1::basic_string<char>, karo::Node::InputSlot>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_9_2_1; } x_14_1_9; } x14; struct KaroArrayImp<karo::Node *> { int (**x_15_1_1)(); struct ReflectionBase {} *x_15_1_2; struct BitField<unsigned int> { unsigned int x_3_2_1; } x_15_1_3; unsigned int x_15_1_4; struct vector<karo::Node *, std::__1::allocator<karo::Node *> > { struct Node {} **x_5_2_1; struct Node {} **x_5_2_2; struct __compressed_pair<karo::Node **, std::__1::allocator<karo::Node *> > { struct Node {} **x_3_3_1; } x_5_2_3; } x_15_1_5; unsigned int x_15_1_6; } x15; struct BitField<unsigned int> { unsigned int x_16_1_1; } x16; struct ToggleMutex { void *x_17_1_1; boolx_17_1_2; } x17; struct ManifestManager {} *x18; struct GeoResourceObserverWrapper {} *x19; } *_geoResourceManager;
}


- (id)initWithResourceManager:(struct GeoResourceManager { int (**x1)(); struct ReflectionBase {} *x2; struct BitField<unsigned int> { unsigned int x_3_1_1; } x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_5_1; unsigned int x_1_5_2; char *x_1_5_3; } x_1_4_1; struct __short { union { unsigned char x_1_6_1; BOOL x_1_6_2; } x_2_5_1; BOOL x_2_5_2[11]; } x_1_4_2; struct __raw { unsigned long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_4_1_1; } x4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_5_1; unsigned int x_1_5_2; char *x_1_5_3; } x_1_4_1; struct __short { union { unsigned char x_1_6_1; BOOL x_1_6_2; } x_2_5_1; BOOL x_2_5_2[11]; } x_1_4_2; struct __raw { unsigned long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_5_1_1; } x5; struct Context {} *x6; boolx7; boolx8; boolx9; boolx10; boolx11; boolx12; boolx13; struct KaroMapImp<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char> > > { int (**x_14_1_1)(); struct ReflectionBase {} *x_14_1_2; struct BitField<unsigned int> { unsigned int x_3_2_1; } x_14_1_3; unsigned int x_14_1_4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_6_1; unsigned int x_1_6_2; char *x_1_6_3; } x_1_5_1; struct __short { union { unsigned char x_1_7_1; BOOL x_1_7_2; } x_2_6_1; BOOL x_2_6_2[11]; } x_1_5_2; struct __raw { unsigned long x_3_6_1[3]; } x_1_5_3; } x_1_4_1; } x_1_3_1; } x_5_2_1; } x_14_1_5; struct InputSlot { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_7_1; unsigned int x_1_7_2; char *x_1_7_3; } x_1_6_1; struct __short { union { unsigned char x_1_8_1; BOOL x_1_8_2; } x_2_7_1; BOOL x_2_7_2[11]; } x_1_6_2; struct __raw { unsigned long x_3_7_1[3]; } x_1_6_3; } x_1_5_1; } x_1_4_1; } x_1_3_1; } x_6_2_1; struct Rtti {} *x_6_2_2; struct Node {} *x_6_2_3; struct KaroArrayImp<karo::Node *> { int (**x_4_3_1)(); struct ReflectionBase {} *x_4_3_2; struct BitField<unsigned int> { unsigned int x_3_4_1; } x_4_3_3; unsigned int x_4_3_4; struct vector<karo::Node *, std::__1::allocator<karo::Node *> > { struct Node {} **x_5_4_1; struct Node {} **x_5_4_2; struct __compressed_pair<karo::Node **, std::__1::allocator<karo::Node *> > { struct Node {} **x_3_5_1; } x_5_4_3; } x_4_3_5; unsigned int x_4_3_6; } x_6_2_4; boolx_6_2_5; struct BitField<unsigned int> { unsigned int x_6_3_1; } x_6_2_6; } x_14_1_6; unsigned int x_14_1_7; unsigned int x_14_1_8; struct map<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, karo::Node::InputSlot> > > { struct __tree<std::__1::pair<std::__1::basic_string<char>, karo::Node::InputSlot>, std::__1::__map_value_compare<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, karo::Node::InputSlot> > > { struct __tree_node<std::__1::pair<std::__1::basic_string<char>, karo::Node::InputSlot>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<std::__1::basic_string<char>, karo::Node::InputSlot>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_9_2_1; } x_14_1_9; } x14; struct KaroArrayImp<karo::Node *> { int (**x_15_1_1)(); struct ReflectionBase {} *x_15_1_2; struct BitField<unsigned int> { unsigned int x_3_2_1; } x_15_1_3; unsigned int x_15_1_4; struct vector<karo::Node *, std::__1::allocator<karo::Node *> > { struct Node {} **x_5_2_1; struct Node {} **x_5_2_2; struct __compressed_pair<karo::Node **, std::__1::allocator<karo::Node *> > { struct Node {} **x_3_3_1; } x_5_2_3; } x_15_1_5; unsigned int x_15_1_6; } x15; struct BitField<unsigned int> { unsigned int x_16_1_1; } x16; struct ToggleMutex { void *x_17_1_1; boolx_17_1_2; } x17; struct ManifestManager {} *x18; struct GeoResourceObserverWrapper {} *x19; }*)arg1;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)dealloc;

@end
