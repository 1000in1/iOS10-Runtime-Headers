/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

@class NSString, MIPArtist;

@interface MIPAlbum : PBCodable <NSCopying> {
    long long _storeId;
    MIPArtist *_artist;
    NSString *_artworkId;
    NSString *_name;
    int _numDiscs;
    int _numTracks;
    NSString *_sortName;
    int _userRating;
    bool_compilation;
    struct { 
        unsigned int storeId : 1; 
        unsigned int numDiscs : 1; 
        unsigned int numTracks : 1; 
        unsigned int userRating : 1; 
        unsigned int compilation : 1; 
    } _has;
}

@property bool hasStoreId;
@property long long storeId;
@property(readonly) bool hasName;
@property(retain) NSString * name;
@property(readonly) bool hasSortName;
@property(retain) NSString * sortName;
@property(readonly) bool hasArtist;
@property(retain) MIPArtist * artist;
@property bool hasNumTracks;
@property int numTracks;
@property bool hasNumDiscs;
@property int numDiscs;
@property(readonly) bool hasArtworkId;
@property(retain) NSString * artworkId;
@property bool hasUserRating;
@property int userRating;
@property bool hasCompilation;
@property bool compilation;


- (bool)hasName;
- (void)copyTo:(id)arg1;
- (void)setCompilation:(bool)arg1;
- (id)artworkId;
- (int)numDiscs;
- (int)numTracks;
- (bool)hasCompilation;
- (void)setHasCompilation:(bool)arg1;
- (bool)hasArtworkId;
- (bool)hasNumDiscs;
- (void)setHasNumDiscs:(bool)arg1;
- (void)setNumDiscs:(int)arg1;
- (bool)hasNumTracks;
- (void)setHasNumTracks:(bool)arg1;
- (void)setNumTracks:(int)arg1;
- (void)setArtworkId:(id)arg1;
- (id)sortName;
- (bool)hasSortName;
- (void)setSortName:(id)arg1;
- (void)setHasStoreId:(bool)arg1;
- (void)setStoreId:(long long)arg1;
- (bool)compilation;
- (int)userRating;
- (bool)hasUserRating;
- (void)setHasUserRating:(bool)arg1;
- (void)setUserRating:(int)arg1;
- (bool)hasArtist;
- (void)setArtist:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)writeTo:(id)arg1;
- (long long)storeId;
- (bool)hasStoreId;
- (id)artist;
- (void)setName:(id)arg1;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)name;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dictionaryRepresentation;

@end
