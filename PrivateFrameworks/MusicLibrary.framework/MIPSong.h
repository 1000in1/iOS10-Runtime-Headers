/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

@class MIPGenre, NSString, MIPPlaybackInfo, MIPArtist, MIPAlbum;

@interface MIPSong : PBCodable <NSCopying> {
    long long _geniusId;
    MIPAlbum *_album;
    MIPArtist *_artist;
    int _audioFormat;
    MIPArtist *_composer;
    int _discNumber;
    MIPGenre *_genre;
    NSString *_lyrics;
    MIPPlaybackInfo *_playbackInfo;
    int _trackNumber;
    int _userRating;
    bool_excludeFromShuffle;
    bool_hasVideo;
    struct { 
        unsigned int geniusId : 1; 
        unsigned int audioFormat : 1; 
        unsigned int discNumber : 1; 
        unsigned int trackNumber : 1; 
        unsigned int userRating : 1; 
        unsigned int excludeFromShuffle : 1; 
        unsigned int hasVideo : 1; 
    } _has;
}

@property(readonly) bool hasAlbum;
@property(retain) MIPAlbum * album;
@property(readonly) bool hasArtist;
@property(retain) MIPArtist * artist;
@property(readonly) bool hasComposer;
@property(retain) MIPArtist * composer;
@property(readonly) bool hasGenre;
@property(retain) MIPGenre * genre;
@property bool hasDiscNumber;
@property int discNumber;
@property bool hasTrackNumber;
@property int trackNumber;
@property bool hasUserRating;
@property int userRating;
@property bool hasExcludeFromShuffle;
@property bool excludeFromShuffle;
@property bool hasGeniusId;
@property long long geniusId;
@property bool hasAudioFormat;
@property int audioFormat;
@property bool hasHasVideo;
@property bool hasVideo;
@property(readonly) bool hasLyrics;
@property(retain) NSString * lyrics;
@property(readonly) bool hasPlaybackInfo;
@property(retain) MIPPlaybackInfo * playbackInfo;


- (bool)hasVideo;
- (void)copyTo:(id)arg1;
- (id)genre;
- (void)setGenre:(id)arg1;
- (id)playbackInfo;
- (long long)geniusId;
- (bool)excludeFromShuffle;
- (int)userRating;
- (int)trackNumber;
- (bool)hasPlaybackInfo;
- (bool)hasLyrics;
- (bool)hasHasVideo;
- (void)setHasHasVideo:(bool)arg1;
- (void)setHasVideo:(bool)arg1;
- (bool)hasAudioFormat;
- (void)setHasAudioFormat:(bool)arg1;
- (void)setAudioFormat:(int)arg1;
- (bool)hasGeniusId;
- (void)setHasGeniusId:(bool)arg1;
- (void)setGeniusId:(long long)arg1;
- (bool)hasExcludeFromShuffle;
- (void)setHasExcludeFromShuffle:(bool)arg1;
- (void)setExcludeFromShuffle:(bool)arg1;
- (bool)hasUserRating;
- (void)setHasUserRating:(bool)arg1;
- (void)setUserRating:(int)arg1;
- (bool)hasTrackNumber;
- (void)setHasTrackNumber:(bool)arg1;
- (void)setTrackNumber:(int)arg1;
- (bool)hasDiscNumber;
- (void)setHasDiscNumber:(bool)arg1;
- (void)setDiscNumber:(int)arg1;
- (bool)hasGenre;
- (bool)hasComposer;
- (bool)hasAlbum;
- (void)setPlaybackInfo:(id)arg1;
- (void)setLyrics:(id)arg1;
- (void)setComposer:(id)arg1;
- (void)setAlbum:(id)arg1;
- (bool)hasArtist;
- (void)setArtist:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)writeTo:(id)arg1;
- (int)discNumber;
- (id)composer;
- (id)artist;
- (id)album;
- (int)audioFormat;
- (id)lyrics;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dictionaryRepresentation;

@end
