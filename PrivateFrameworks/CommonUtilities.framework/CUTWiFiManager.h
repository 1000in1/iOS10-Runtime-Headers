/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities
 */

@class NSString, NSRecursiveLock, NSDictionary, NSNumber, NSMapTable;

@interface CUTWiFiManager : NSObject <CUTPowerMonitorDelegate> {
    NSRecursiveLock *_lock;
    void *_wifiManager;
    void *_wifiDevice;
    void *_currentNetwork;
    void *_dynamicStore;
    int _linkToken;
    NSMapTable *_delegateMap;
    NSDictionary *_lastWiFiPowerInfo;
}

@property(readonly) BOOL isWiFiEnabled;
@property(readonly) BOOL isWiFiAssociated;
@property(readonly) BOOL isHostingWiFiHotSpot;
@property(readonly) BOOL isWiFiCaptive;
@property(readonly) NSNumber * wiFiSignalStrength;
@property(readonly) NSNumber * wiFiScaledRSSI;
@property(readonly) NSNumber * wiFiScaledRate;
@property(readonly) NSString * currentSSID;
@property(readonly) NSDictionary * currentWiFiNetworkPowerUsage;
@property(retain) NSRecursiveLock * lock;
@property void* wifiManager;
@property void* wifiDevice;
@property void* currentNetwork;
@property void* dynamicStore;
@property int linkToken;
@property(retain) NSMapTable * delegateMap;
@property(copy) NSDictionary * lastWiFiPowerInfo;

+ (id)sharedInstance;

- (void)setLastWiFiPowerInfo:(id)arg1;
- (id)lastWiFiPowerInfo;
- (void)setDelegateMap:(id)arg1;
- (id)delegateMap;
- (void)setLinkToken:(int)arg1;
- (int)linkToken;
- (void)setDynamicStore:(void*)arg1;
- (void*)dynamicStore;
- (void)setCurrentNetwork:(void*)arg1;
- (void*)currentNetwork;
- (void)setWifiDevice:(void*)arg1;
- (void*)wifiDevice;
- (void)setWifiManager:(void*)arg1;
- (void*)wifiManager;
- (void)setLock:(id)arg1;
- (BOOL)isWiFiCaptive;
- (BOOL)_isPrimaryCellular;
- (id)currentSSID;
- (id)currentWiFiNetworkPowerUsage;
- (double)_wifiMeasurementErrorForInterval:(double)arg1;
- (BOOL)isWiFiEnabled;
- (BOOL)isWiFiAssociated;
- (id)wiFiScaledRate;
- (id)wiFiScaledRSSI;
- (id)wiFiSignalStrength;
- (BOOL)willTryToSearchForWiFiNetwork;
- (BOOL)willTryToAutoAssociateWiFiNetwork;
- (BOOL)isHostingWiFiHotSpot;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (void)_createDynamicStore;
- (void)_createWiFiManager;
- (id)init;
- (void)dealloc;
- (id)lock;

@end
