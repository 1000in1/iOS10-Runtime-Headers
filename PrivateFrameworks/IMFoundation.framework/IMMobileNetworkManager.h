/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation
 */

@class NSNumber, NSMutableSet, NSRecursiveLock;

@interface IMMobileNetworkManager : IMNetworkManager  {
    bool_registered;
    bool_shouldBringUpDataContext;
    bool_dataContextActive;
    NSRecursiveLock *_lock;
    NSMutableSet *_disableFastDormancyTokens;
    NSMutableSet *_wiFiAutoAssociationTokens;
    NSMutableSet *_cellAutoAssociationTokens;
    void *__suspendDormancyAssertion;
}

@property(readonly) bool isAirplaneModeEnabled;
@property(readonly) bool isWiFiEnabled;
@property(readonly) bool isWiFiUsable;
@property(readonly) bool isWiFiAssociated;
@property(readonly) bool isWiFiCaptive;
@property(readonly) bool isHostingWiFiHotSpot;
@property(readonly) bool autoAssociateWiFi;
@property(readonly) bool autoAssociateCellular;
@property(readonly) bool disableFastDormancy;
@property(readonly) bool willTryToSearchForWiFiNetwork;
@property(readonly) bool willTryToAutoAssociateWiFiNetwork;
@property(retain,readonly) NSNumber * wiFiSignalStrength;
@property(retain,readonly) NSNumber * wiFiScaledRSSI;
@property(retain,readonly) NSNumber * wiFiScaledRate;
@property(readonly) bool dataConnectionExists;
@property(readonly) bool has2GDataConnection;
@property(readonly) bool hasLTEDataConnection;
@property(readonly) bool isDataSwitchEnabled;
@property(readonly) bool isDataConnectionActive;
@property(readonly) bool inValidSIMState;
@property(readonly) bool isSIMLocked;
@property(readonly) bool isSIMRemoved;
@property void* _suspendDormancyAssertion;
@property(retain) NSRecursiveLock * lock;
@property(retain) NSMutableSet * wiFiAutoAssociationTokens;
@property(retain) NSMutableSet * cellularAutoAssociationTokens;
@property(retain) NSMutableSet * disableFastDormancyTokens;
@property bool registered;
@property bool shouldBringUpDataContext;
@property bool dataContextActive;


- (void)set_suspendDormancyAssertion:(void*)arg1;
- (void*)_suspendDormancyAssertion;
- (void)setDataContextActive:(bool)arg1;
- (bool)dataContextActive;
- (void)setShouldBringUpDataContext:(bool)arg1;
- (bool)shouldBringUpDataContext;
- (void)setRegistered:(bool)arg1;
- (bool)registered;
- (void)setCellularAutoAssociationTokens:(id)arg1;
- (id)cellularAutoAssociationTokens;
- (void)setDisableFastDormancyTokens:(id)arg1;
- (id)disableFastDormancyTokens;
- (bool)isDataSwitchEnabled;
- (bool)hasLTEDataConnection;
- (bool)has2GDataConnection;
- (bool)dataConnectionExists;
- (bool)inValidSIMState;
- (void)showSIMUnlock;
- (bool)isSIMLocked;
- (bool)isSIMRemoved;
- (void)_makeDataConnectionAvailable:(bool)arg1;
- (bool)_isDataConnectionAvailable;
- (void)_releaseCTServerConnection;
- (void)_createCTServerConnection;
- (void)_ctServerCallBack:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)removeCellularAutoAssociationClientToken:(id)arg1;
- (void)addCellularAutoAssociationClientToken:(id)arg1;
- (bool)autoAssociateCellular;
- (bool)isWiFiUsable;
- (void)removeFastDormancyDisableToken:(id)arg1;
- (void)addFastDormancyDisableToken:(id)arg1;
- (bool)disableFastDormancy;
- (void)_setFastDormancySuspended:(bool)arg1;
- (bool)isAirplaneModeEnabled;
- (void*)_getValueForKey:(id)arg1;
- (void)_initializeSCPrefs:(id)arg1;
- (void)_synchronize;
- (void)cutWiFiManagerLinkDidChange:(id)arg1 context:(id)arg2;
- (void)_adjustCelluarAutoAssociation;
- (void)showNetworkOptions;
- (void)removeWiFiAutoAssociationClientToken:(id)arg1;
- (void)addWiFiAutoAssociationClientToken:(id)arg1;
- (bool)autoAssociateWiFi;
- (bool)isWiFiCaptive;
- (bool)isWiFiAssociated;
- (bool)isWiFiEnabled;
- (id)wiFiScaledRate;
- (id)wiFiScaledRSSI;
- (id)wiFiSignalStrength;
- (bool)willTryToSearchForWiFiNetwork;
- (bool)willTryToAutoAssociateWiFiNetwork;
- (bool)isHostingWiFiHotSpot;
- (void)__adjustFastDormancyTokens;
- (void)_adjustFastDormancyTokens;
- (void)_adjustCellularAutoAssociation;
- (bool)isDataConnectionActive;
- (void)setDataConnectionActive:(bool)arg1;
- (void)setLock:(id)arg1;
- (void)setWiFiAutoAssociationTokens:(id)arg1;
- (id)wiFiAutoAssociationTokens;
- (void)refresh;
- (id)init;
- (id)lock;
- (void)dealloc;

@end
