/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/Message.framework/Message
 */

@class NSLock, NSString, RadiosPreferences, NSThread, NSMutableSet, NSObject<OS_dispatch_queue>, NSMutableArray;

@interface MFNetworkController : NSObject <RadiosPreferencesDelegate> {
    NSLock *_lock;
    struct __CFRunLoop { } *_rl;
    NSThread *_thread;
    NSMutableArray *_observers;
    struct __SCNetworkReachability { } *_reachability;
    unsigned int _flags;
    struct __SCDynamicStore { } *_store;
    struct __CFRunLoopSource { } *_store_source;
    bool_dns;
    struct __CTServerConnection { } *_telephony;
    NSMutableSet *_calls;
    NSMutableSet *_backgroundWifiClients;
    int _interface;
    struct __SCPreferences { } *_wiFiPreferences;
    bool_hasCellDataCapability;
    bool_hasWiFiCapability;
    bool_isWiFiEnabled;
    bool_isRoamingAllowed;
    bool_data;
    NSString *_dataIndicator;
    RadiosPreferences *_radiosPreferences;
    NSObject<OS_dispatch_queue> *_prefsQueue;
}

+ (id)networkAssertionWithIdentifier:(id)arg1;
+ (id)sharedInstance;

- (id)copyDiagnosticInformation;
- (void)removeBackgroundWifiClient:(id)arg1;
- (void)addBackgroundWifiClient:(id)arg1;
- (void)removeNetworkObserver:(id)arg1;
- (void)_handleWiFiNotification:(unsigned int)arg1;
- (void)_handleNotification:(id)arg1 info:(id)arg2 forConnection:(struct __CTServerConnection { }*)arg3;
- (void)_setFlags:(unsigned int)arg1 forReachability:(struct __SCNetworkReachability { }*)arg2;
- (bool)isOnWWAN;
- (bool)isDataAvailable;
- (void)_updateWifiClientType;
- (id)_networkAssertionWithIdentifier:(id)arg1;
- (bool)_simulationOverrideForType:(unsigned long long)arg1 actualValue:(bool)arg2;
- (int)dataStatus;
- (bool)_isNetworkUp_nts;
- (void)_tearDownTelephony_nts;
- (struct { int x1; int x2; })_pollDataAndCallStatus_nts;
- (void)_setDataStatus_nts:(id)arg1;
- (void)_inititializeWifiManager;
- (void)_setUpTelephony_nts;
- (void)_checkKeys:(id)arg1 forStore:(struct __SCDynamicStore { }*)arg2;
- (id)addNetworkObserverBlock:(id)arg1 queue:(id)arg2;
- (bool)inAirplaneMode;
- (bool)is3GConnection;
- (bool)is4GConnection;
- (bool)isFatPipe;
- (bool)isNetworkUp;
- (void)airplaneModeChanged;
- (id)init;
- (void)invalidate;
- (void)dealloc;

@end
