/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Message.framework/Message
 */

@interface MFLibrarySearchableIndex : NSObject <CSSearchableIndexDelegate> {
    NSObject<OS_dispatch_source> * _coalescingTimer;
    unsigned int  _currentMaximumBatchSize;
    <MFLibrarySearchableIndexDataSource> * _dataSource;
    NSObject<OS_dispatch_queue> * _dataSourceQueue;
    CSSearchableIndex * _index;
    NSObject<OS_dispatch_queue> * _indexingQueue;
    NSMutableSet * _pendingDomainRemovals;
    _MFLibrarySearchableIndexPendingRemovals * _pendingIdentifierRemovals;
    NSMutableArray * _pendingItems;
    NSObject<OS_dispatch_queue> * _queue;
    MFLazyCache * _searchResultsCache;
    struct { 
        unsigned int isForeground : 1; 
        unsigned int isActive : 1; 
        unsigned int needsRefresh : 1; 
        unsigned int clientStateFetched : 1; 
        unsigned int coalesceTimerFired : 1; 
        unsigned int scheduledProcessing : 1; 
        unsigned int scheduledRefresh : 1; 
    }  _state;
    unsigned int  _throttledDataSourceBatchSize;
    unsigned int  _throttledIndexingBatchSize;
    long long  _transaction;
}

@property (nonatomic) <MFLibrarySearchableIndexDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=_isForeground, setter=_setForeground:, nonatomic) BOOL foreground;
@property (readonly) unsigned int hash;
@property (readonly) Class superclass;
@property (getter=_transaction, readonly) long long transaction;

+ (id)_localClientState;
+ (id)_localClientStateURL;
+ (void)_saveLocalClientState:(id)arg1;

- (void)_coalescingTimerFired;
- (id)_consumeBatchOfSize:(unsigned int)arg1;
- (void)_dataSourceAssignTransaction:(long long)arg1 forIdentifiers:(id)arg2 completion:(id /* block */)arg3;
- (void)_dataSourceAssignTransaction:(long long)arg1 forItems:(id)arg2 completion:(id /* block */)arg3;
- (void)_dataSourceIndexItemsNeedingRefreshWithCompletion:(id /* block */)arg1;
- (void)_dataSourceInvalidateItemsGreaterThanTransaction:(long long)arg1 completion:(id /* block */)arg2;
- (void)_dataSourceScheduleWork:(id /* block */)arg1;
- (void)_fetchLastClientState;
- (void)_invalidateCache;
- (BOOL)_isForeground;
- (long long)_nextTransaction;
- (void)_noteNeedsLastClientStateFetch;
- (void)_processIndexingBatch:(id)arg1;
- (void)_processRefreshRequestWithCompletion:(id /* block */)arg1;
- (void)_processRemovals;
- (void)_queueRefresh;
- (void)_queueTransitionActive:(BOOL)arg1;
- (void)_scheduleDataSourceRefresh;
- (void)_scheduleProcessPendingItems;
- (void)_setForeground:(BOOL)arg1;
- (void)_startCoalescingTimer;
- (void)_stopCoalescingTimer;
- (double)_throttleRequestedSize:(unsigned int*)arg1 action:(id /* block */)arg2;
- (long long)_transaction;
- (void)_transition;
- (void)applicationWillResume;
- (void)applicationWillSuspend;
- (id)dataSource;
- (void)dealloc;
- (id)identifiersMatchingCriterion:(id)arg1;
- (void)indexItems:(id)arg1;
- (id)init;
- (id)initWithName:(id)arg1 dataSource:(id)arg2;
- (void)refresh;
- (void)removeAllItems;
- (void)removeItemsForDomainIdentifier:(id)arg1;
- (void)removeItemsWithIdentifiers:(id)arg1;
- (void)resume;
- (void)searchableIndex:(id)arg1 reindexAllSearchableItemsWithAcknowledgementHandler:(id /* block */)arg2;
- (void)searchableIndex:(id)arg1 reindexSearchableItemsWithIdentifiers:(id)arg2 acknowledgementHandler:(id /* block */)arg3;
- (void)setDataSource:(id)arg1;
- (void)suspend;

@end
