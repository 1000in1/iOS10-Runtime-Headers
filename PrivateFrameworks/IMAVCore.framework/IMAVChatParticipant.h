/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/IMAVCore.framework/IMAVCore
 */

@class NSTimer, NSString, IMHandle, NSArray, NSData, NSDictionary, NSMutableArray, IMAVChat;

@interface IMAVChatParticipant : NSObject  {
    bool_sendingAudio;
    bool_sendingVideo;
    bool_audioMuted;
    bool_videoPaused;
    bool_videoDegraded;
    bool_mediaStalled;
    bool_isInitiator;
    bool_inviteDelivered;
    bool_hasReinitiateCapability;
    unsigned int _state;
    unsigned int _cameraType;
    unsigned int _cameraOrientation;
    unsigned int _chatEndedReason;
    int _chatError;
    unsigned int _screenOrientation;
    float _volumeMeter;
    NSArray *_additionalPeers;
    NSString *_vcPartyID;
    IMHandle *_imHandle;
    IMHandle *_inviter;
    IMAVChat *_avChat;
    NSDictionary *_properties;
    NSString *_conferenceID;
    NSTimer *_connectTimeoutTimer;
    NSMutableArray *_participantsCallInfo;
    NSData *_inFrequencyLevel;
    NSData *_outFrequencyLevel;
    struct CGSize { 
        double width; 
        double height; 
    } _remotePortraitOrientation;
    struct CGSize { 
        double width; 
        double height; 
    } _remoteLandscapeOrientation;
    struct CGSize { 
        double width; 
        double height; 
    } _remotePIPPortraitOrientation;
    struct CGSize { 
        double width; 
        double height; 
    } _remotePIPLandscapeOrientation;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _remotePortraitContentRect;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _remoteLandscapeContentRect;
}

@property void* videoLayer;
@property void* videoBackLayer;
@property(setter=setAudioMuted:) bool isAudioMuted;
@property(setter=setVideoPaused:) bool isVideoPaused;
@property(readonly) bool isSendingAudio;
@property(readonly) bool isSendingVideo;
@property(readonly) bool isVideoDegraded;
@property(readonly) bool isMediaStalled;
@property(retain,readonly) IMHandle * imHandle;
@property(retain,readonly) IMHandle * invitedBy;
@property IMAVChat * avChat;
@property(retain,readonly) NSString * name;
@property(readonly) bool isInitiator;
@property(readonly) bool isLocalParticipant;
@property(retain) NSArray * additionalPeers;
@property(readonly) unsigned int reasonChatEnded;
@property int error;
@property unsigned int state;
@property float volumeMeter;
@property(retain) NSData * inFrequencyLevel;
@property(retain) NSData * outFrequencyLevel;
@property(setter=setVideoDegraded:) bool isVideoDegraded;
@property(setter=setMediaStalled:) bool isMediaStalled;
@property(setter=setVCPartyID:,retain) NSString * vcPartyID;
@property(readonly) long long _activeCallID;
@property(retain) NSMutableArray * _participantsCallInfo;
@property(setter=_setInviteDelivered:) bool _inviteDelivered;
@property(setter=_setConnectTimeoutTimer:,retain) NSTimer * _connectTimeoutTimer;
@property(setter=_setConferenceID:,retain) NSString * _conferenceID;
@property(retain) NSDictionary * properties;
@property(setter=_setRemoteLandscapeOrientation:) struct CGSize { double x1; double x2; } _remoteLandscapeOrientation;
@property(setter=_setRemotePortraitOrientation:) struct CGSize { double x1; double x2; } _remotePortraitOrientation;
@property(setter=_setRemotePIPLandscapeOrientation:) struct CGSize { double x1; double x2; } _remotePIPLandscapeOrientation;
@property(setter=_setRemotePIPPortraitOrientation:) struct CGSize { double x1; double x2; } _remotePIPPortraitOrientation;
@property(setter=_setRemotePortraitContentRect:) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _remotePortraitContentRect;
@property(setter=_setRemoteLandscapeContentRect:) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _remoteLandscapeContentRect;
@property bool hasReinitiateCapability;
@property(readonly) bool hasUnfinishedSessions;
@property(readonly) bool hasConnectingSessions;
@property(setter=_setCameraType:) unsigned int cameraType;
@property(setter=_setCameraOrientation:) unsigned int cameraOrientation;
@property(setter=_setScreenOrientation:) unsigned int _screenOrientation;
@property(setter=setAudioMuted:) bool isAudioMuted;
@property(setter=setVideoPaused:) bool isVideoPaused;
@property(readonly) bool isSendingAudio;
@property(readonly) bool isSendingVideo;


- (void)setVideoBackLayer:(void*)arg1;
- (void*)videoBackLayer;
- (void)setVideoLayer:(void*)arg1;
- (void)resetWaitingToConnectTimer;
- (void)setWaitingToConnect:(bool)arg1;
- (void)_reInitiate;
- (void)_connectTimeout:(id)arg1;
- (id)_proxyRepresentation;
- (void)setOutFrequencyLevel:(id)arg1;
- (void)setInFrequencyLevel:(id)arg1;
- (void)setVolumeMeter:(float)arg1;
- (void)set_participantsCallInfo:(id)arg1;
- (unsigned int)_screenOrientation;
- (void)_setRemoteLandscapeContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_remoteLandscapeContentRect;
- (void)_setRemotePortraitContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_remotePortraitContentRect;
- (void)_setRemotePIPLandscapeOrientation:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })_remotePIPLandscapeOrientation;
- (void)_setRemotePIPPortraitOrientation:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })_remotePIPPortraitOrientation;
- (void)_setConnectTimeoutTimer:(id)arg1;
- (id)_connectTimeoutTimer;
- (void)_setRemoteLandscapeOrientation:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })_remoteLandscapeOrientation;
- (void)_setRemotePortraitOrientation:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })_remotePortraitOrientation;
- (void)_setChatError:(int)arg1;
- (unsigned int)cameraOrientation;
- (unsigned int)cameraType;
- (void)setMediaStalled:(bool)arg1;
- (bool)isMediaStalled;
- (void)setVideoDegraded:(bool)arg1;
- (bool)isVideoDegraded;
- (void)setVideoPaused:(bool)arg1;
- (bool)isVideoPaused;
- (void)setAudioMuted:(bool)arg1;
- (bool)isAudioMuted;
- (struct CGSize { double x1; double x2; })aspectRatioForCameraOrientation:(unsigned int)arg1 cameraType:(unsigned int)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentRectForCameraOrientation:(unsigned int)arg1 cameraType:(unsigned int)arg2;
- (void)reinitializeCallForCallID:(unsigned int)arg1;
- (void)_hangupCallLaterIfReinitiateFails:(id)arg1;
- (void)_cleanupOrphanedCallInfos;
- (bool)_generateCallInfo:(id)arg1;
- (id)_callInfosWaitingForAcceptAction;
- (void)requestIconIfNecessary;
- (void)updateStateForCurrentCallInfo:(unsigned int)arg1;
- (long long)_activeCallID;
- (bool)hasReinitiateCapability;
- (bool)hasUnfinishedSessions;
- (id)callInfoBeingHandedOff;
- (struct CGSize { double x1; double x2; })localAspectRatioForCameraOrientation:(unsigned int)arg1 cameraType:(unsigned int)arg2;
- (void)_processPropertyUpdate:(id)arg1;
- (void)_setState:(unsigned int)arg1 withReason:(unsigned int)arg2 andError:(int)arg3;
- (void)_setInviteDelivered:(bool)arg1;
- (bool)_inviteDelivered;
- (id)_callInfoWithState:(long long)arg1;
- (void)_handleIMAVResponse:(unsigned int)arg1;
- (id)_callInfosWaitingForResponse;
- (void)setHasReinitiateCapability:(bool)arg1;
- (void)_registerCallInfo:(id)arg1;
- (id)vcPartyID;
- (id)_initAs:(id)arg1 invitedBy:(id)arg2 sendingAudio:(bool)arg3 sendingVideo:(bool)arg4 usingICE:(bool)arg5 toChat:(id)arg6 inState:(unsigned int)arg7 withError:(int)arg8 andReason:(unsigned int)arg9 andVCPartyID:(id)arg10 account:(id)arg11;
- (id)_callInfoForCallID:(long long)arg1;
- (void)setVCPartyID:(id)arg1;
- (void)_setCameraOrientation:(unsigned int)arg1;
- (void)_setCameraType:(unsigned int)arg1;
- (void)_setScreenOrientation:(unsigned int)arg1;
- (void)setAVChat:(id)arg1;
- (id)_conferenceID;
- (id)_natType;
- (long long)bestCallID;
- (unsigned int)reasonChatEnded;
- (bool)matchesAVConferenceCallID:(long long)arg1;
- (void)sendAVMessage:(unsigned int)arg1 userInfo:(id)arg2;
- (void)_switchToUseNewIMHandle:(id)arg1;
- (id)initAs:(id)arg1 invitedBy:(id)arg2 toChat:(id)arg3 account:(id)arg4;
- (void)setAdditionalPeers:(id)arg1;
- (void)sendInvitation;
- (id)additionalPeers;
- (id)_participantsCallInfo;
- (void)setStateToEndedWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)disconnectFromAVChat;
- (id)imHandle;
- (void)_noteInviteDelivered:(bool)arg1;
- (void)_updateProperties:(id)arg1;
- (bool)_processResponseDictionary:(id)arg1 allowSecondConnection:(bool)arg2;
- (void)_setConferenceID:(id)arg1;
- (void)_sendResponse:(unsigned int)arg1 callInfo:(id)arg2;
- (id)_processIncomingCallProperties:(id)arg1;
- (bool)isInitiator;
- (bool)hasConnectingSessions;
- (void)cancelInvitation;
- (id)invitedBy;
- (void)setProperties:(id)arg1;
- (void*)videoLayer;
- (bool)isLocalParticipant;
- (id)avChat;
- (bool)isSendingAudio;
- (id)outFrequencyLevel;
- (id)inFrequencyLevel;
- (float)volumeMeter;
- (bool)isSendingVideo;
- (id)init;
- (id)name;
- (id)properties;
- (int)error;
- (void)setState:(unsigned int)arg1;
- (unsigned int)state;
- (void)dealloc;
- (id)description;
- (void)sendResponse:(unsigned int)arg1;

@end
