/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSDate, NSString, NSArray, CKDatabase, CKServerChangeToken, CKContainer, BRCAccountSession, NSDictionary, BRCLocalContainer, PQLConnection, PQLNameInjection;

@interface BRCServerContainer : NSObject <BRCContainer> {
    NSDate *_lastSyncDownDate;
    BRCAccountSession *_session;
    unsigned int _schemaVersion;
    PQLConnection *_db;
    CKContainer *_container;
    bool_needsSave;
    bool_hasRegisteredPushTopics;
    NSString *_containerID;
    CKServerChangeToken *_changeToken;
    CKServerChangeToken *_pendingChangeToken;
    NSString *_containerMetadataEtag;
    BRCLocalContainer *_localContainer;
    unsigned long long _clientRequestID;
    PQLNameInjection *_itemsTable;
    PQLNameInjection *_pendingFetchesTable;
    NSArray *_tableNames;
    PQLNameInjection *_xattrsTable;
}

@property NSDate * lastSyncDownDate;
@property(readonly) CKServerChangeToken * changeToken;
@property(readonly) CKServerChangeToken * pendingChangeToken;
@property(readonly) NSString * containerMetadataEtag;
@property(readonly) unsigned long long clientRequestID;
@property BRCLocalContainer * localContainer;
@property(readonly) PQLNameInjection * itemsTable;
@property(readonly) PQLNameInjection * xattrsTable;
@property(readonly) PQLNameInjection * pendingFetchesTable;
@property(readonly) PQLConnection * db;
@property(retain) BRCAccountSession * accountSession;
@property(readonly) CKContainer * container;
@property(readonly) CKDatabase * cloudDatabase;
@property(readonly) NSString * containerIdentifier;
@property(readonly) NSString * prefixedContainerID;
@property(readonly) NSString * pushTopic;
@property bool hasRegisteredPushTopics;
@property(retain) NSString * containerID;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;
@property(readonly) bool needsSave;
@property(readonly) NSString * zoneName;
@property(readonly) NSDictionary * plist;
@property(readonly) NSArray * tableNames;

+ (bool)_sql_upgrade_to_version1:(id)arg1;
+ (struct PQLResultSet { Class x1; }*)containersEnumerator:(id)arg1;
+ (id)containerByID:(id)arg1 withDB:(id)arg2;

- (id)xattrsTable;
- (id)pendingFetchesTable;
- (void)setHasRegisteredPushTopics:(bool)arg1;
- (bool)hasRegisteredPushTopics;
- (unsigned long long)clientRequestID;
- (void)setLocalContainer:(id)arg1;
- (id)pendingChangeToken;
- (id)changeToken;
- (unsigned long long)allocateRanksWithUnappliedRanks:(id)arg1 andKilledItems:(id)arg2;
- (id)deviceKeyForName:(id)arg1;
- (id)versionByItemID:(id)arg1;
- (bool)deletePendingFetchRecords;
- (bool)savePendingFetchStructureRecordsToServerTruth;
- (bool)savePendingFetchContentRecordsToServerTruth;
- (id)createUpdateQuotaOperation;
- (void)didSyncDownRequestID:(unsigned long long)arg1 serverChangeToken:(id)arg2 stateIsInconsistent:(bool)arg3;
- (void)collectTombstoneRanks:(id)arg1;
- (id)xattrForSignature:(id)arg1;
- (bool)storeXattr:(id)arg1;
- (bool)hasXattrWithSignature:(id)arg1;
- (id)prefixedContainerID;
- (id)tableNames;
- (struct PQLResultSet { Class x1; }*)itemsEnumeratorWithDB:(id)arg1;
- (void)_checkResultSetIsEmpty:(id)arg1 logToFile:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg2 reason:(id)arg3 result:(bool*)arg4;
- (bool)_dumpChildrenOfDirectory:(id)arg1 toContext:(id)arg2 visitedItems:(id)arg3 depth:(int)arg4 error:(id*)arg5;
- (unsigned long long)_allocateRanksWithUnappliedRanks:(id)arg1 andKilledItems:(id)arg2 nextRank:(unsigned long long)arg3;
- (struct PQLResultSet { Class x1; }*)_enumeratePendingFetchDeletedRecordIDs;
- (struct PQLResultSet { Class x1; }*)_enumeratePendingFetchRecords;
- (void)updateWithPlist:(id)arg1;
- (void)setupTableName;
- (id)initWithDB:(id)arg1;
- (void)setLastSyncDownDate:(id)arg1;
- (id)plist;
- (id)containerMetadataEtag;
- (id)lastSyncDownDate;
- (id)_initWithContainerID:(id)arg1 db:(id)arg2 accountSession:(id)arg3;
- (bool)upgradeTables;
- (void)resetTruthWithResetType:(unsigned long long)arg1;
- (id)initFromPQLResultSet:(id)arg1 error:(id*)arg2;
- (bool)validateStructureLoggingToFile:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg1 withDB:(id)arg2;
- (bool)validateItemsLoggingToFile:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg1 withDB:(id)arg2;
- (id)descriptionWithContext:(id)arg1;
- (id)localContainer;
- (id)itemByParentID:(id)arg1 andName:(id)arg2;
- (bool)dumpTablesToContext:(id)arg1 error:(id*)arg2;
- (bool)saveToDB;
- (id)itemsTable;
- (id)itemByItemID:(id)arg1;
- (void)setAccountSession:(id)arg1;
- (id)accountSession;
- (id)cloudDatabase;
- (id)pushTopic;
- (id)db;
- (id)containerID;
- (id)zoneName;
- (void)setContainerID:(id)arg1;
- (id)containerIdentifier;
- (bool)needsSave;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)container;
- (void).cxx_destruct;
- (id)description;

@end
