/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSNumber, NSString, BRCDesiredVersion, BRCLocalStatInfo, NSMutableSet, BRCLocalVersion, BRCLocalContainer, BRCLocalItem, BRCItemID;

@interface BRCLocalItem : NSObject <BRCSyncThrottleItemProtocol, BRCItem> {
    BRCLocalContainer *_container;
    NSNumber *_knownByServer;
    NSNumber *_isInDocumentScope;
    id _serverPathMatchID;
    bool_resolvedPath;
    bool_forceDelete;
    bool_forceDeletedAlready;
    unsigned int _syncUpState;
    unsigned long long _dbRowID;
    BRCItemID *_itemID;
    BRCLocalStatInfo *_st;
    BRCLocalVersion *_currentVersion;
    BRCLocalItem *_orig;
    unsigned long long _localDiffs;
    NSNumber *_inFlightDiffs;
    unsigned long long _notifsRank;
    BRCDesiredVersion *_desiredVersion;
    long long _transferPriority;
    NSString *_path;
}

@property(readonly) unsigned int queryItemStatus;
@property(readonly) unsigned int downloadStatus;
@property(readonly) unsigned int uploadStatus;
@property(readonly) bool isInTransfer;
@property(readonly) NSString * bookmarkData;
@property(readonly) NSString * digestDescription;
@property(retain) BRCItemID * itemID;
@property(readonly) BRCLocalItem * orig;
@property(readonly) unsigned long long dbRowID;
@property(readonly) bool needsInsert;
@property(readonly) bool isFault;
@property(readonly) bool isLost;
@property(readonly) bool isFromInitialScan;
@property(readonly) bool isInDocumentScope;
@property(readonly) bool hasLocalContent;
@property(readonly) bool isOfEvictableSize;
@property(readonly) bool isReserved;
@property(readonly) bool isKnownByServer;
@property(readonly) bool isKnownByServerOrInFlight;
@property(readonly) bool isDownloadRequested;
@property(readonly) bool isReadAndUploaded;
@property(readonly) bool isIdleOrRejected;
@property(readonly) bool isRejected;
@property(readonly) bool needsReading;
@property(readonly) bool needsUpload;
@property(readonly) bool needsSyncUp;
@property(readonly) BRCItemID * serverPathMatchItemID;
@property(readonly) NSMutableSet * setOfContainersIDsWithReverseAliases;
@property(readonly) BRCLocalStatInfo * st;
@property(readonly) BRCLocalVersion * currentVersion;
@property(readonly) BRCDesiredVersion * desiredVersion;
@property(readonly) BRCLocalContainer * container;
@property(readonly) unsigned int syncUpState;
@property(readonly) NSNumber * inFlightDiffs;
@property(readonly) unsigned long long localDiffs;
@property(readonly) unsigned long long notifsRank;
@property(readonly) bool localNameNeedsRename;
@property long long transferPriority;
@property(readonly) NSString * path;
@property(readonly) NSString * filename;
@property(readonly) NSString * extension;
@property(readonly) NSNumber * isDocumentObj;
@property(readonly) NSNumber * isDeadObj;
@property(readonly) bool isDead;
@property(readonly) bool isLive;
@property(readonly) bool isAlias;
@property(readonly) bool isDocument;
@property(readonly) bool isDirectory;

+ (bool)parseBookmarkData:(id)arg1 inAccountSession:(id)arg2 itemID:(id*)arg3 containerID:(id*)arg4 error:(id*)arg5;
+ (bool)supportsSecureCoding;

- (void)fixupStagedItemAtStartup;
- (void)applyMetadataOnFileID:(unsigned long long)arg1 liveFD:(unsigned long long)arg2;
- (bool)finishPackageStageWithManifestID:(id)arg1;
- (bool)moveDocumentToStageFromDownloadPath:(id)arg1;
- (bool)hasStagedThumbnail;
- (id)desiredThumbnail;
- (id)desiredLoserForEtag:(id)arg1;
- (unsigned long long)countOfStagedConflictLosers;
- (struct PQLResultSet { Class x1; }*)conflictLosersNeedingDownloadEnumerator;
- (long long)transferPriority;
- (id)inFlightDiffs;
- (unsigned long long)localDiffs;
- (unsigned int)syncUpState;
- (unsigned long long)dbRowID;
- (void)didApplyChangesFromItem:(id)arg1;
- (void)postponeApplyChangesFromItem:(id)arg1;
- (void)markUploadedWithRecord:(id)arg1;
- (bool)isRejected;
- (bool)needsSyncUp;
- (bool)needsUpload;
- (void)setTransferPriority:(long long)arg1;
- (void)markBounceFailed;
- (void)markBounceFinished;
- (void)beginBounceAndSaveToDBWithName:(id)arg1;
- (void)forceiWorkConflictEtag:(id)arg1;
- (void)markLiveFromStage;
- (void)updateContentsCKInfoAndDeviceIDFromServerItem:(id)arg1;
- (void)updateStatMetadataFromServerItem:(id)arg1;
- (void)markStagedWithFileID:(unsigned long long)arg1 generationID:(unsigned int)arg2 documentID:(unsigned int)arg3;
- (void)markStagedWithFileID:(unsigned long long)arg1 generationID:(unsigned int)arg2;
- (void)refreshDesiredVersion:(id)arg1;
- (void)clearVersionToStage;
- (bool)setVersionToStage:(id)arg1 wantsFault:(bool)arg2 startDownload:(bool)arg3 needsSave:(bool*)arg4;
- (void)markRenamedUsingServerItem:(id)arg1;
- (void)markRemovedFromFilesystem;
- (void)markReserved;
- (void)markLostWithoutBackoff;
- (void)markLostDirectoryAsAlmostDead;
- (void)forceVersionConflictByClearkingCKInfo;
- (unsigned long long)markChildrenLost;
- (bool)hasLostChildren;
- (void)markLatestRequestAcknowledged;
- (void)markLatestSyncRequestRejected;
- (void)markLatestSyncRequestFailed;
- (void)prepareForSyncUp;
- (void)markNeedsUploadOrSyncingUpWithAliasTarget:(id)arg1;
- (void)markForceNeedsSyncUp;
- (void)appDidResolveConflictLoserWithEtag:(id)arg1;
- (bool)changedAtRelativePath:(id)arg1 scanPackage:(bool)arg2;
- (bool)updateLocationAndMetaFromFSAtPath:(id)arg1 parentID:(id)arg2;
- (void)forceUpdateNotification;
- (void)triggerTransferNotificationIfNeeded;
- (void)forceScanParent;
- (id)initFromPQLResultSet:(id)arg1 container:(id)arg2 error:(id*)arg3;
- (id)initFromPQLResultSet:(id)arg1 error:(id*)arg2;
- (id)initWithRelativePath:(id)arg1 parentID:(id)arg2;
- (id)initWithServerItem:(id)arg1 dbRowID:(unsigned long long)arg2;
- (id)digestDescription;
- (bool)localNameNeedsRename;
- (id)serverPathMatchItemID;
- (bool)isFromInitialScan;
- (bool)validateLoggingToFile:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg1;
- (id)isDeadObj;
- (id)isDocumentObj;
- (void)clearFromStage;
- (id)_scheduleLosersDownloadForVersion:(id)arg1;
- (void)deleteAllDesiredLosers;
- (void)markLostClearGenerationID:(bool)arg1 backoffMode:(unsigned char)arg2;
- (void)deleteForRescheduleOfItem:(id)arg1;
- (void)_markLostWhenReplacedByItem:(id)arg1 backoffMode:(unsigned char)arg2;
- (void)moveAsideLocally;
- (void)_clearInFlightDiffs;
- (bool)isReadAndUploaded;
- (void)updateVersionMetadataFromServerItem:(id)arg1;
- (void)updateStructuralCKInfoFromServerItem:(id)arg1;
- (void)_markNeedsSyncingUp;
- (bool)needsReading;
- (void)markNeedsReading;
- (bool)updateFromFSAtPath:(id)arg1 parentID:(id)arg2;
- (unsigned long long)diffAgainstLocalItem:(id)arg1;
- (bool)hasDeadChildren;
- (bool)_saveToDB:(id)arg1 diffs:(unsigned long long)arg2;
- (bool)_insertInDB:(id)arg1;
- (bool)_deleteFromDB:(id)arg1 diffs:(unsigned long long)arg2;
- (bool)_isInterestingUpdateForNotifsWithDiffs:(unsigned long long)arg1;
- (void)deleteAllDesiredAdditions;
- (bool)isIdleOrRejected;
- (void)_sendNotificationIfNeededWithDiffs:(unsigned long long)arg1 regather:(bool)arg2;
- (id)_setOfParentIDs;
- (id)setOfContainersIDsWithReverseAliases;
- (unsigned int)queryItemStatus;
- (bool)needsInsert;
- (bool)isOfEvictableSize;
- (bool)_nukeVersionsFromDB:(id)arg1;
- (bool)saveToDBForServerEdit:(bool)arg1;
- (void)markLostWhenReplacedByItem:(id)arg1;
- (id)initWithLocalItem:(id)arg1;
- (bool)updateXattrInfoFromPathPath:(id)arg1 error:(id*)arg2;
- (bool)hasLocalContent;
- (bool)isInDocumentScopeWithParent:(id)arg1;
- (bool)isInDocumentScope;
- (bool)isKnownByServerOrInFlight;
- (void)updateFromFSAtPath:(id)arg1;
- (void)clearVersionSignatures:(unsigned long long)arg1 isPackage:(bool)arg2;
- (id)bookmarkData;
- (bool)isKnownByServer;
- (unsigned long long)notifsRank;
- (id)descriptionWithContext:(id)arg1;
- (unsigned long long)diffAgainstServerItem:(id)arg1;
- (unsigned long long)diffAgainstOriginalItem;
- (bool)isDownloadRequested;
- (id)desiredVersion;
- (bool)isReserved;
- (bool)isLost;
- (id)st;
- (id)orig;
- (bool)isDocument;
- (void)markDead;
- (unsigned int)uploadStatus;
- (bool)isAlias;
- (bool)isInTransfer;
- (id)parentItem;
- (void)setItemID:(id)arg1;
- (unsigned int)downloadStatus;
- (bool)isLive;
- (id)currentVersion;
- (bool)isFault;
- (id)path;
- (bool)isDead;
- (id)itemID;
- (id)debugDescription;
- (id)container;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)filename;
- (bool)isDirectory;
- (id)extension;

@end
