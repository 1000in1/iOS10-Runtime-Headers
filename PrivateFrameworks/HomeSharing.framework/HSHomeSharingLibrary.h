/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/HomeSharing.framework/HomeSharing
 */

@class NSString, NSURL, NSObject<OS_dispatch_queue>, <NSObject>, HSConnection;

@interface HSHomeSharingLibrary : NSObject  {
    NSObject<OS_dispatch_queue> *_connectionAccessQueue;
    bool_requiresPassword;
    bool_available;
    bool__hasPendingUpdateRequest;
    unsigned int _version;
    NSString *_name;
    NSString *_uniqueIdentifier;
    NSString *_homeSharingGroupID;
    NSURL *_baseURL;
    <NSObject> *_context;
    long long _connectionType;
    HSConnection *_connection;
}

@property(copy,readonly) NSString * name;
@property(copy,readonly) NSString * uniqueIdentifier;
@property(readonly) unsigned int version;
@property(readonly) bool requiresPassword;
@property(copy,readonly) NSString * homeSharingGroupID;
@property(retain,readonly) NSURL * baseURL;
@property(getter=isAvailable,readonly) bool available;
@property(retain) <NSObject> * context;
@property(readonly) unsigned int databaseID;
@property(readonly) unsigned int basePlaylistContainerID;
@property(readonly) long long connectionType;
@property(readonly) long long connectionState;
@property(readonly) NSString * deviceGUID;
@property(retain) HSConnection * connection;
@property bool _hasPendingUpdateRequest;


- (bool)_hasPendingUpdateRequest;
- (void)set_hasPendingUpdateRequest:(bool)arg1;
- (void)_onQueue_ensureConnection;
- (void)_sendUpdateRequest;
- (long long)connectionType;
- (id)signedRequestFromURLRequest:(id)arg1;
- (void)connectWithCompletionHandler:(id)arg1;
- (void)sendRequest:(id)arg1 withResponseHandler:(id)arg2;
- (unsigned int)basePlaylistContainerID;
- (long long)connectionState;
- (id)securityInfoForURL:(id)arg1;
- (id)initWithName:(id)arg1 uniqueIdentifier:(id)arg2 version:(unsigned int)arg3 baseURL:(id)arg4 homeSharingGroupID:(id)arg5 connectionType:(long long)arg6;
- (id)homeSharingGroupID;
- (unsigned int)databaseID;
- (id)deviceGUID;
- (id)urlForRequest:(id)arg1;
- (bool)requiresPassword;
- (bool)isAvailable;
- (id)context;
- (void)setContext:(id)arg1;
- (unsigned int)version;
- (id)connection;
- (id)baseURL;
- (id)name;
- (id)uniqueIdentifier;
- (void)setConnection:(id)arg1;
- (void).cxx_destruct;
- (void)disconnect;

@end
