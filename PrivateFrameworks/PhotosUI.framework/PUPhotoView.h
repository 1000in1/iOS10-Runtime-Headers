/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/PhotosUI.framework/PhotosUI
 */

@class PUPhotoDecoration, PUBackgroundColorView, UIImageView, UILabel, UIImage, NSString, NSNumber;

@interface PUPhotoView : UIView  {
    PUBackgroundColorView *_photoDecorationBorderView;
    PUBackgroundColorView *_photoDecorationOverlayView;
    UIImageView *_bannerView;
    UIImageView *_bannerImageView;
    UILabel *_bannerLabel;
    BOOL _isVideoBannerVisible;
    int _fillMode;
    UIImage *_photoImage;
    PUPhotoDecoration *_photoDecoration;
    NSNumber *_videoDuration;
    UIImageView *_photoImageView;
    UIImage *_bannerImage;
    NSString *_bannerText;
    struct CGSize { 
        float width; 
        float height; 
    } _photoSize;
    struct CGAffineTransform { 
        float a; 
        float b; 
        float c; 
        float d; 
        float tx; 
        float ty; 
    } _imageTransform;
}

@property int fillMode;
@property struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; } imageTransform;
@property struct CGSize { float x1; float x2; } photoSize;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } imageContentFrame;
@property(retain) UIImage * photoImage;
@property(copy) PUPhotoDecoration * photoDecoration;
@property(getter=isVideoBannerVisible,readonly) BOOL videoBannerVisible;
@property(readonly) NSNumber * videoDuration;
@property(retain) UIImageView * photoImageView;
@property(retain) UIImage * bannerImage;
@property(copy) NSString * bannerText;

+ (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1 imageSize:(struct CGSize { float x1; float x2; })arg2 fillMode:(int)arg3;
+ (BOOL)_showPhotoStreamBadges;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_imageContentFrameForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 imageSize:(struct CGSize { float x1; float x2; })arg2 fillMode:(int)arg3;

- (id)videoDuration;
- (id)photoImage;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })imageTransform;
- (BOOL)isVideoBannerVisible;
- (void)setImageTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_photoDecorationBorderViewFrameForImageContentFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)bannerText;
- (id)bannerImage;
- (void)_updateBannerView;
- (void)_updatePhotoDecoration;
- (id)photoImageView;
- (void)setBannerText:(id)arg1;
- (void)setBannerImage:(id)arg1;
- (void)setPhotoImageView:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })imageContentFrame;
- (void)_updateSubviewOrdering;
- (struct CGSize { float x1; float x2; })photoSize;
- (id)photoDecoration;
- (void)setPhotoDecoration:(id)arg1;
- (void)setPhotoStreamBannerVisible:(BOOL)arg1;
- (void)setVideoBannerVisible:(BOOL)arg1 videoDuration:(id)arg2;
- (void)setPhotoImage:(id)arg1;
- (void)setPhotoSize:(struct CGSize { float x1; float x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setFillMode:(int)arg1;
- (int)fillMode;
- (void).cxx_destruct;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)layoutSubviews;

@end
