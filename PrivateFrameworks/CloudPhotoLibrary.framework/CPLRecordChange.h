/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary
 */

@class NSString, NSData, NSDate;

@interface CPLRecordChange : NSObject <NSSecureCoding, NSCopying> {
    bool_shouldFilterDefaultValuesForNewProperties;
    bool_isSparseFullChange;
    bool_inTrash;
    bool_inExpunged;
    NSString *_identifier;
    NSDate *_recordModificationDate;
    unsigned long long _changeType;
    NSDate *_dateDeleted;
    NSString *_realIdentifier;
    NSData *_recordChangeData;
}

@property(copy) NSString * identifier;
@property(copy) NSDate * recordModificationDate;
@property unsigned long long changeType;
@property(copy) NSDate * dateDeleted;
@property bool inTrash;
@property bool inExpunged;
@property(copy) NSString * realIdentifier;
@property(copy) NSData * recordChangeData;

+ (id)newChangeWithType:(unsigned long long)arg1;
+ (id)_descriptionForChangeType:(unsigned long long)arg1 isSparseFullChange:(bool)arg2;
+ (id)newRecord;
+ (id)descriptionForChangeType:(unsigned long long)arg1;
+ (id)newRecordWithIdentifier:(id)arg1;
+ (id)deleteChangeWithIdentifier:(id)arg1;
+ (id)newChangeWithIdentifier:(id)arg1 changeType:(unsigned long long)arg2;
+ (Class)classForStoredClassName:(id)arg1 forCPLArchiver:(id)arg2;
+ (id)cplAdditionalSecureClassesForProperty:(id)arg1;
+ (bool)supportsSecureCoding;

- (bool)addExpandedChangesToChangeBatch:(id)arg1 andApplyToClientCache:(id)arg2 error:(id*)arg3;
- (bool)_addRealChangeToChangeBatch:(id)arg1 withStoredRecord:(id)arg2 andApplyToClientCache:(id)arg3 error:(id*)arg4;
- (id)compactedChangeWithRelatedChanges:(id)arg1 isOnlyChange:(bool)arg2 usingClientCache:(id)arg3;
- (void)setRecordChangeData:(id)arg1;
- (void)setRealIdentifier:(id)arg1;
- (bool)isSparseFullChange;
- (bool)shouldFilterDefaultValuesForNewProperties;
- (void)setShouldFilterDefaultValuesForNewProperties:(bool)arg1;
- (bool)shouldApplyPropertiesWithSelector:(SEL)arg1;
- (id)mergeRecordChangeWithNewRecordChange:(id)arg1;
- (id)realRecordChangeFromRecordChange:(id)arg1 newRecord:(id*)arg2;
- (bool)decodePropertiesFromObject:(id)arg1;
- (bool)encodePropertiesInObject:(id)arg1;
- (id)dateDeleted;
- (id)realRecordChangeFromRecordChange:(id)arg1 newRecord:(id*)arg2 updatedProperties:(id*)arg3;
- (bool)applyChange:(id)arg1 copyPropertiesToFinalChange:(id)arg2 forChangeType:(unsigned long long)arg3 updatedProperty:(id*)arg4;
- (void)setSecondaryIdentifier:(id)arg1;
- (id)secondaryIdentifier;
- (void)markAsSparseFullChange;
- (id)recordChangeData;
- (bool)isFullRecord;
- (id)realIdentifier;
- (void)setRelatedIdentifier:(id)arg1;
- (id)relatedIdentifier;
- (void)setRecordModificationDate:(id)arg1;
- (id)recordModificationDate;
- (id)resourceForType:(unsigned long long)arg1;
- (id)translateToClientChangeUsingIDMapping:(id)arg1 error:(id*)arg2;
- (id)translateToCloudChangeUsingIDMapping:(id)arg1 error:(id*)arg2;
- (id)identifiersForMapping;
- (id)proposedLocalIdentifier;
- (id)proposedCloudIdentifierWithError:(id*)arg1;
- (id)storedClassNameForCPLArchiver:(id)arg1;
- (id)cplFullDescription;
- (bool)hasChangeType:(unsigned long long)arg1;
- (bool)supportsResources;
- (void)awakeFromStorage;
- (void)prepareForStorage;
- (id)propertiesDescription;
- (id)checkDefaultValueBlockForPropertyWithSelector:(SEL)arg1;
- (id)propertiesForChangeType:(unsigned long long)arg1;
- (id)resourcesDescription;
- (long long)dequeueOrder;
- (unsigned long long)totalResourceSize;
- (unsigned long long)realResourceSize;
- (bool)inTrash;
- (void)setDateDeleted:(id)arg1;
- (void)setInExpunged:(bool)arg1;
- (void)setInTrash:(bool)arg1;
- (bool)inExpunged;
- (id)resources;
- (void)setResources:(id)arg1;
- (void)setChangeType:(unsigned long long)arg1;
- (unsigned long long)changeType;
- (void)setIdentifier:(id)arg1;
- (id)identifier;
- (bool)isDelete;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;

@end
