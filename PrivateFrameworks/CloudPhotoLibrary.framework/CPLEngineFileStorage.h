/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary
 */

@class NSString, CPLPlatformObject, NSURL, NSObject<OS_dispatch_queue>, NSMutableArray;

@interface CPLEngineFileStorage : NSObject <CPLAbstractObject> {
    NSObject<OS_dispatch_queue> *_lock;
    NSString *_logDomain;
    NSURL *_crashMarkerURL;
    NSMutableArray *_uncommittedFiles;
    bool_keepOriginals;
    bool_deleteImmediately;
    CPLPlatformObject *_platformObject;
    NSURL *_baseURL;
}

@property(readonly) NSURL * baseURL;
@property bool keepOriginals;
@property bool deleteImmediately;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;
@property(readonly) CPLPlatformObject * platformObject;

+ (id)platformImplementationProtocol;

- (void)setDeleteImmediately:(bool)arg1;
- (bool)deleteImmediately;
- (void)setKeepOriginals:(bool)arg1;
- (bool)keepOriginals;
- (id)fileEnumerator;
- (bool)tryToFreeDiskSpace:(unsigned long long)arg1 actuallyFreedSpace:(unsigned long long*)arg2 error:(id*)arg3;
- (bool)storeData:(id)arg1 identity:(id)arg2 isOriginal:(bool)arg3 needsCommit:(bool*)arg4 error:(id*)arg5;
- (bool)hasCrashMarker;
- (unsigned long long)countOfUncommittedFiles;
- (bool)_compactStorageIncludeOriginals:(bool)arg1 desiredFreeSpace:(unsigned long long*)arg2 error:(id*)arg3;
- (id)fileEnumeratorIncludingPropertiesForKeys:(id)arg1 errorHandler:(id)arg2;
- (bool)tryToFreeDiskSpace:(unsigned long long)arg1 actuallyFreedSpace:(unsigned long long*)arg2 includeOriginals:(bool)arg3 error:(id*)arg4;
- (bool)compactStorageIncludeOriginals:(bool)arg1 error:(id*)arg2;
- (bool)storeUnretainedData:(id)arg1 identity:(id)arg2 isOriginal:(bool)arg3 error:(id*)arg4;
- (bool)deleteFileWithIdentity:(id)arg1 includingOriginal:(bool)arg2 error:(id*)arg3;
- (void)_removeIdentityFromUncommittedFiles:(id)arg1;
- (void)_addIdentityToUncommittedFiles:(id)arg1;
- (bool)_fixupIdentity:(id)arg1 fileURL:(id)arg2 data:(id)arg3 error:(id*)arg4;
- (bool)_recoverFromCrashWithRecoveryHandler:(id)arg1 error:(id*)arg2;
- (bool)commitFileWithIdentity:(id)arg1 error:(id*)arg2;
- (bool)compactStorage:(id*)arg1;
- (bool)discardAllRetainedFileURLsWithError:(id*)arg1;
- (bool)deleteFileWithIdentity:(id)arg1 error:(id*)arg2;
- (bool)storeUnretainedFileAtURL:(id)arg1 identity:(id)arg2 isOriginal:(bool)arg3 error:(id*)arg4;
- (bool)linkOrCopyFileWithIdentity:(id)arg1 destinationURL:(id)arg2 error:(id*)arg3;
- (bool)hasFileWithIdentity:(id)arg1;
- (bool)releaseFileURL:(id)arg1 error:(id*)arg2;
- (void)doRead:(id)arg1;
- (void)checkFileSizeForIdentity:(id)arg1;
- (id)retainFileURLForIdentity:(id)arg1 resourceType:(unsigned long long)arg2 error:(id*)arg3;
- (bool)discardUncommittedFileWithIdentity:(id)arg1 error:(id*)arg2;
- (bool)storeFileAtURL:(id)arg1 identity:(id)arg2 isOriginal:(bool)arg3 needsCommit:(bool*)arg4 error:(id*)arg5;
- (bool)doWrite:(id)arg1 error:(id*)arg2;
- (bool)openWithRecoveryHandler:(id)arg1 error:(id*)arg2;
- (id)platformObject;
- (id)initWithBaseURL:(id)arg1;
- (id)baseURL;
- (void).cxx_destruct;
- (bool)closeWithError:(id*)arg1;

@end
