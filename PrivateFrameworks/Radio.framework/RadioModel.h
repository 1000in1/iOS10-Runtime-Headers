/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode5.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/System/Library/PrivateFrameworks/Radio.framework/Radio
 */

@class NSArray, NSObject<OS_dispatch_source>, NSObject<OS_dispatch_queue>, NSManagedObjectContext, NSFetchRequest, NSFetchedResultsController, BKSProcessAssertion, NSPersistentStoreCoordinator, NSString, NSManagedObjectModel;

@interface RadioModel : NSObject <NSFetchedResultsControllerDelegate> {
    BKSProcessAssertion *_backgroundProcessAssertion;
    NSObject<OS_dispatch_queue> *_backgroundTaskAccessQueue;
    int _backgroundTaskCount;
    NSObject<OS_dispatch_source> *_backgroundTaskInvalidateTimerSource;
    NSManagedObjectContext *_context;
    BOOL _isBackgroundModel;
    NSManagedObjectModel *_model;
    int _modelChangedToken;
    BOOL _modelChangedTokenIsValid;
    int _modelDeletedToken;
    BOOL _modelDeletedTokenIsValid;
    NSFetchedResultsController *_stationFetchedResultsController;
    NSFetchRequest *_stationFetchRequest;
    NSPersistentStoreCoordinator *_storeCoordinator;
    NSFetchedResultsController *_trackHistoriesFetchedResultsController;
    NSFetchRequest *_trackHistoriesFetchRequest;
    int _transactionCount;
    NSFetchedResultsController *_wishlistedTracksFetchedResultsController;
    NSFetchRequest *_wishlistedTracksFetchRequest;
}

@property unsigned long long authenticatedAccountIdentifier;
@property unsigned long long globalVersion;
@property(copy) NSString * globalHash;
@property(readonly) NSArray * stations;
@property(copy) NSArray * stationSortOrdering;
@property(readonly) NSArray * featuredStations;
@property(readonly) NSArray * previewStations;
@property(readonly) NSArray * trackHistories;
@property(readonly) NSArray * trackHistorySections;
@property(readonly) NSArray * wishlistedTracks;
@property(readonly) NSArray * reportProblemIssueTypes;

+ (unsigned int)maxStationArtworkSize;
+ (void)deleteAllData;
+ (id)backgroundModel;
+ (id)sharedModel;
+ (void)initialize;

- (void)copySkipHistoryFromStationHash:(id)arg1 toStationID:(long long)arg2;
- (id)trackHistorySections;
- (id)stationWithHash:(id)arg1;
- (void)setStationSortOrdering:(id)arg1;
- (void)setReportProblemIssueTypes:(id)arg1;
- (void)setGlobalVersion:(unsigned long long)arg1;
- (void)setGlobalHash:(id)arg1;
- (void)setAuthenticatedAccountIdentifier:(unsigned long long)arg1;
- (id)reportProblemIssueTypes;
- (void)removeTrackForPlayback:(id)arg1 fromStation:(id)arg2;
- (void)removeAllTracksForPlaybackFromStation:(id)arg1;
- (id)previewStations;
- (id)newTrackWithDictionary:(id)arg1;
- (id)newHistoryForTrack:(id)arg1 station:(id)arg2 date:(id)arg3;
- (void)insertHistoryForTrack:(id)arg1 station:(id)arg2 date:(id)arg3;
- (void)markTracksNeedRefreshForStation:(id)arg1;
- (id)newPreviewStationWithDictionary:(id)arg1;
- (id)newFeaturedStationWithDictionary:(id)arg1;
- (id)globalHash;
- (id)featuredStations;
- (void)enumerateRevisionsSinceRevisionID:(long long)arg1 usingBlock:(id)arg2;
- (void)deleteUnreferencedTracks;
- (void)deleteStationWithID:(long long)arg1;
- (void)deletePreviewStation:(id)arg1;
- (void)deleteTrackFromWishlist:(id)arg1;
- (void)deleteAllWishlistedTracks;
- (void)deleteTrackHistoryItem:(id)arg1;
- (void)deleteAllTrackHistory;
- (id)convertObjects:(id)arg1;
- (void)_createRadioDirectoryAndDatabaseIfNecessary;
- (id)_setByReplacingManagedObjectsInSet:(id)arg1;
- (id)convertObjectsInSet:(id)arg1;
- (void)_endBackgroundTaskAssertion;
- (void)_beginBackgroundTaskAssertion;
- (void)_contextDidSaveNotification:(id)arg1;
- (unsigned long long)globalVersion;
- (void)_setDatabasePropertyValue:(id)arg1 forKey:(id)arg2;
- (id)stations;
- (void)_performTransactionAndSave:(BOOL)arg1 withBlock:(id)arg2;
- (id)_newManagedSkipHistoryWithStationHash:(id)arg1;
- (id)_newManagedSkipHistoryWithStationID:(long long)arg1;
- (void)_addTimestamp:(double)arg1 toManagedSkipHistory:(id)arg2 withSkipIntervalForCulling:(double)arg3;
- (id)_newManagedSkipHistoryWithSkipIdentifier:(id)arg1;
- (id)newAudioClipWithDictionary:(id)arg1;
- (id)trackWithStoreID:(long long)arg1;
- (id)stationWithPersistentID:(long long)arg1;
- (id)audioClipWithStoreID:(long long)arg1;
- (void)_cullTrackHistoryIfNecessary;
- (void)insertHistoryForTrackStoreID:(long long)arg1 stationID:(long long)arg2 stationHash:(id)arg3 stationName:(id)arg4 date:(id)arg5;
- (void)insertHistoryForTrack:(id)arg1 stationID:(long long)arg2 stationHash:(id)arg3 stationName:(id)arg4 date:(id)arg5;
- (id)newStationWithDictionary:(id)arg1;
- (id)_arrayByReplacingManagedObjectsInArray:(id)arg1;
- (void)_insertRevisionWithStationID:(long long)arg1 revisionType:(int)arg2;
- (id)stationWithID:(long long)arg1;
- (void)deleteStation:(id)arg1;
- (id)wishlistedTracks;
- (void)performWriteTransactionWithBlock:(id)arg1;
- (id)trackHistories;
- (void)deleteAllData;
- (id)convertObject:(id)arg1;
- (id)_managedSkipHistoryWithStationHash:(id)arg1;
- (id)_managedSkipHistoryWithStationID:(long long)arg1;
- (unsigned int)_numberOfSkipsUsedWithSkipTimestamps:(id)arg1 currentTimestamp:(double)arg2 skipInterval:(double)arg3;
- (id)_managedSkipHistoryWithSkipIdentifier:(id)arg1;
- (unsigned int)numberOfTracksSkippedForStation:(id)arg1;
- (id)_databasePropertyValueForKey:(id)arg1;
- (void)_resetModel;
- (void)_postContextDidChangeNotification:(id)arg1;
- (void)_prepareModel;
- (void)_defaultRadioModelInitialization;
- (id)_initBackgroundModelWithPersistentStoreCoordinator:(id)arg1;
- (void)noteTrackWasSkippedForStation:(id)arg1;
- (void)removeTracksForPlaybackFromAllStations;
- (void)setCurrentPlayingTrack:(id)arg1 withTime:(double)arg2 forStation:(id)arg3;
- (BOOL)canSkipTracksForStation:(id)arg1;
- (id)stationSortOrdering;
- (unsigned long long)authenticatedAccountIdentifier;
- (void)performTransactionWithBlock:(id)arg1;
- (id)context;
- (void)controllerDidChangeContent:(id)arg1;
- (void)controller:(id)arg1 didChangeObject:(id)arg2 atIndexPath:(id)arg3 forChangeType:(unsigned int)arg4 newIndexPath:(id)arg5;
- (long long)databaseVersion;
- (void)setDatabaseVersion:(long long)arg1;
- (id)init;
- (void)dealloc;
- (void).cxx_destruct;
- (id)_init;

@end
