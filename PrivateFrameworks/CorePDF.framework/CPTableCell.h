/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

@interface CPTableCell : CPChunk <CPDisposable> {
    struct CGColor { } * backgroundColor;
    unsigned int  backgroundGraphicCount;
    id * backgroundGraphics;
    struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGColor {} *x2; unsigned int x3; id *x4; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; unsigned short x36; void*x37; short x38; void*x39; void*x40; void*x41; void*x42; unsigned long x43; int x44; unsigned int x45/* : ? */; const void*x46; const void*x47; void*x48; void*x49; const int x50; void x51; void*x52; void*x53; void*x54; void*x55; const void*x56; void*x57; void*x58; void*x59; out const void*x60; short x61; void*x62; unsigned char x63; out const void*x64; void*x65; long doublex66; void*x67; void*x68; float x69; const void*x70; void*x71; void*x72; void*x73; out const void*x74; void*x75; unsigned char x76; out const void*x77; void*x78; long doublex79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; out void*x105; int x106; void*x107; in void*x108; void*x109; void*x110; void*x111; void*x112; struct x113; void*x114; void*x115; void*x116; double x117; void*x118; out void*x119; void*x120; void*x121; unsigned int x122/* : ? */; void*x123; long x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; double x138; void*x139; out void*x140; void*x141; void*x142; unsigned int x143/* : ? */; void*x144; long x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; } * borders;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  cellBounds;
    struct { 
        long long location; 
        long long length; 
    }  columnSpan;
    struct { 
        long long location; 
        long long length; 
    }  rowSpan;
}

@property (nonatomic, readonly) unsigned int backgroundGraphicCount;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cellBounds;
@property (nonatomic) struct { long long x1; long long x2; } columnSpan;
@property (nonatomic) struct { long long x1; long long x2; } rowSpan;

- (struct CGColor { }*)backgroundColor;
- (id)backgroundGraphicAtIndex:(unsigned int)arg1;
- (unsigned int)backgroundGraphicCount;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundsOfBorder:(int)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cellBounds;
- (struct CGColor { }*)colorOfBorder:(int)arg1;
- (struct { long long x1; long long x2; })columnSpan;
- (long long)compareCellOrdinal:(id)arg1;
- (void)dealloc;
- (void)dispose;
- (void)finalize;
- (unsigned int)graphicCountOfBorder:(int)arg1;
- (id)graphicObjectOfBorder:(int)arg1 atIndex:(unsigned int)arg2;
- (id)initWithBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct { long long x1; long long x2; })rowSpan;
- (void)setBackgroundGraphics:(id)arg1;
- (void)setBorder:(int)arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 graphics:(id)arg3;
- (void)setColumnSpan:(struct { long long x1; long long x2; })arg1;
- (void)setRowSpan:(struct { long long x1; long long x2; })arg1;

@end
