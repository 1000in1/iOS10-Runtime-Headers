/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

@class UIView, NSString, PLVideoView, NSDictionary, CAMStillImageCaptureResponse, PLCropOverlay, PLPhotoTileViewController;

@interface PLImagePickerCameraView : CAMCameraView <PLVideoViewDelegate> {
    bool_allowsEditing;
    bool_showsCropRegion;
    bool_displayedInPopover;
    bool_cropOverlayUsesTelephonyUI;
    bool_wantsImageData;
    bool_showingCropOverlay;
    bool__manipulatingCrop;
    bool__shouldSkipPostcaptureReview;
    bool__retakingPhoto;
    int _photoSavingOptions;
    int __enabledGestures;
    int __windowEdgeClip;
    NSDictionary *_imagePickerOptions;
    PLPhotoTileViewController *_tileViewController;
    CAMStillImageCaptureResponse *__mostRecentCaptureResponse;
    PLCropOverlay *__cropOverlay;
    PLVideoView *__videoView;
}

@property(retain) NSDictionary * imagePickerOptions;
@property bool allowsEditing;
@property bool showsCropRegion;
@property bool controlsAreVisible;
@property(getter=isDisplayedInPopover) bool displayedInPopover;
@property(retain) UIView * customOverlayView;
@property bool cropOverlayUsesTelephonyUI;
@property bool wantsImageData;
@property int photoSavingOptions;
@property(getter=isShowingCropOverlay) bool showingCropOverlay;
@property(readonly) PLPhotoTileViewController * tileViewController;
@property(readonly) CAMStillImageCaptureResponse * _mostRecentCaptureResponse;
@property(readonly) PLCropOverlay * _cropOverlay;
@property(getter=_isManipulatingCrop,setter=_setManipulatingCrop:) bool _manipulatingCrop;
@property(readonly) PLVideoView * _videoView;
@property(setter=_setEnabledGestures:) int _enabledGestures;
@property(readonly) bool _shouldSkipPostcaptureReview;
@property(getter=_isRetakingPhoto,setter=_setRetakingPhoto:) bool _retakingPhoto;
@property(setter=_setWindowEdgeClip:) int _windowEdgeClip;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;


- (int)_windowEdgeClip;
- (bool)_wantsPreviewSizeAdjustmentForBars;
- (bool)_wantsForcedPreviewAspectRatio;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_bottomBarFrame;
- (void)captureController:(id)arg1 didStopRecordingForVideoRequest:(id)arg2;
- (void)setControlsAreVisible:(bool)arg1;
- (bool)_wantsOrientationAnimations;
- (bool)_isLockedToPortraitOrientation;
- (void)verifyViewOrdering;
- (bool)_wantsFullScreenPreview;
- (void)cameraControllerPreviewDidStart:(id)arg1;
- (void)_removeVideoCaptureControls;
- (void)performPostcapturePreviewForVideoAtPath:(id)arg1;
- (bool)_supportsPreviewingAfterCapture;
- (bool)_shouldPausePreviewDuringCapture;
- (void)_showVideoCaptureControls;
- (bool)_wantsCaptureAnimations;
- (bool)_shouldStartPreviewWhenApplicationBecomesActive;
- (bool)_shouldBlurWhenSessionStops;
- (bool)_wantsSuspensionBlurs;
- (void)captureController:(id)arg1 didCompleteResponse:(id)arg2 forStillImageRequest:(id)arg3 error:(id)arg4;
- (void)viewWillBeDisplayed;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 spec:(id)arg2;
- (int)_enabledGestures;
- (id)_mostRecentCaptureResponse;
- (bool)isShowingCropOverlay;
- (int)photoSavingOptions;
- (bool)wantsImageData;
- (bool)showsCropRegion;
- (void)cropOverlayWasToggled:(id)arg1;
- (void)_setEnabledGestures:(int)arg1;
- (void)_previewVideoAtPath:(id)arg1;
- (bool)_shouldSkipPostcaptureReview;
- (bool)_isRetakingPhoto;
- (bool)_allowsVideoEditing;
- (void)_setRetakingPhoto:(bool)arg1;
- (id)imagePickerOptions;
- (bool)cropOverlayUsesTelephonyUI;
- (struct CGSize { double x1; double x2; })_displaySizeForPreviewForCameraMode:(long long)arg1;
- (bool)_isManipulatingCrop;
- (void)_updateImageEditability;
- (void)_setWindowEdgeClip:(int)arg1;
- (bool)isDisplayedInPopover;
- (void)_createCropOverlayIfNecessary;
- (void)_setManipulatingCrop:(bool)arg1;
- (void)_resetImageTile;
- (id)tileViewController;
- (void)setCustomOverlayView:(id)arg1;
- (id)customOverlayView;
- (void)setAllowsMultipleModes:(bool)arg1;
- (void)setDisplayedInPopover:(bool)arg1;
- (void)embedControlsIntoNavigationItem:(id)arg1 animated:(bool)arg2;
- (void)setWantsImageData:(bool)arg1;
- (void)setImagePickerOptions:(id)arg1;
- (void)setPhotoSavingOptions:(int)arg1;
- (void)setShowingCropOverlay:(bool)arg1;
- (void)setCropOverlayUsesTelephonyUI:(bool)arg1;
- (id)_cropOverlay;
- (void)cropOverlay:(id)arg1 didFinishSaving:(id)arg2;
- (void)cropOverlayPause:(id)arg1;
- (void)cropOverlayPlay:(id)arg1;
- (void)cropOverlayWasOKed:(id)arg1;
- (void)cropOverlayWasCancelled:(id)arg1;
- (void)setShowsCropRegion:(bool)arg1;
- (bool)photoTileViewControllerIsDisplayingLandscape:(id)arg1;
- (void)videoViewDidEndPlayback:(id)arg1 didFinish:(bool)arg2;
- (void)videoViewDidPausePlayback:(id)arg1;
- (void)videoViewDidBeginPlayback:(id)arg1;
- (void)videoViewIsReadyToBeginPlayback:(id)arg1;
- (bool)videoViewCanBeginPlayback:(id)arg1;
- (double)videoViewScrubberYOrigin:(id)arg1 forOrientation:(long long)arg2;
- (id)_videoView;
- (void)dealloc;
- (void)setAllowsEditing:(bool)arg1;
- (bool)allowsEditing;
- (void)setAllowsImageEditing:(bool)arg1;
- (void)didMoveToWindow;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;

@end
