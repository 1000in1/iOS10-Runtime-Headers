/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode6.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

@class UIImageView, <PLSlalomRegionEditorDelegate>;

@interface PLSlalomRegionEditor : UIControl  {
    UIImageView *_startHandleView;
    UIImageView *_endHandleView;
    UIImageView *_trackImageView;
    UIImageView *_trackSnapshotView;
    bool_draggingStart;
    bool_draggingEnd;
    double _touchOffset;
    bool_zoomed;
    bool_trackingZoom;
    struct CGPoint { 
        double x; 
        double y; 
    } _touchLocationWhenTrackingZoomBegan;
    bool_forceLayout;
    double _zoomMinValue;
    double _zoomMaxValue;
    bool_zoomAnimating;
    <PLSlalomRegionEditorDelegate> *_delegate;
    double _trimHandleWidth;
    double _minValue;
    double _maxValue;
    double _startValue;
    double _endValue;
    double _zoomDelay;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    } _trackInsets;
}

@property <PLSlalomRegionEditorDelegate> * delegate;
@property struct UIEdgeInsets { double x1; double x2; double x3; double x4; } trackInsets;
@property double trimHandleWidth;
@property double minValue;
@property double maxValue;
@property double startValue;
@property double endValue;
@property double zoomDelay;
@property(getter=isZoomAnimating,setter=setZoomAnimating:) bool zoomAnimating;


- (void)setTrimHandleWidth:(double)arg1;
- (double)trimHandleWidth;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })trackInsets;
- (void)_drawCurveWithFlatEndsFromX:(double)arg1 fromY:(double)arg2 toX:(double)arg3 toY:(double)arg4;
- (void)setTrackInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (id)_trackImageForZoom:(bool)arg1;
- (void)_zoomPressWasHeld;
- (double)_valueFromEndHandleFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)_valueFromStartHandleFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_cancelZoom;
- (void)_cancelTrackingZoom;
- (void)_stopTrackingAndSendControlEvents:(unsigned long long)arg1;
- (void)_cancelZoomTrackingIfNeccessaryWithTouch:(id)arg1;
- (void)_updateSlidersWithTouch:(id)arg1;
- (void)_beginTrackingZoomWithTouch:(id)arg1;
- (bool)_isTouch:(id)arg1 inHandleIsStart:(bool)arg2 outTouchOffset:(double*)arg3;
- (double)_trimHandleWidth;
- (double)_trackScale;
- (bool)_isZoomed;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_trackFrameNoZoom;
- (double)_valueFromHandleFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 isStart:(bool)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_handleFrameForValue:(double)arg1 isStart:(bool)arg2;
- (double)_zoomMaxValue;
- (double)_zoomMinValue;
- (void)setEndValue:(double)arg1 notify:(bool)arg2;
- (void)setStartValue:(double)arg1 notify:(bool)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_endHandleFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_startHandleFrame;
- (void)_updateTrack;
- (id)_handleImage;
- (double)endValue;
- (double)startValue;
- (void)setZoomMinValue:(double)arg1 maxValue:(double)arg2;
- (void)setZoomAnimating:(bool)arg1;
- (double)maxValue;
- (void)setEnabled:(bool)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_trackFrame;
- (void)setZoomDelay:(double)arg1;
- (double)zoomDelay;
- (bool)isZoomAnimating;
- (void)setEndValue:(double)arg1;
- (void)setStartValue:(double)arg1;
- (void)setMinValue:(double)arg1;
- (void)setMaxValue:(double)arg1;
- (double)minValue;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)layoutSubviews;

@end
