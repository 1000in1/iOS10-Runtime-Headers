/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/lib/libextension.dylib
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSString, NSArray, NSMutableDictionary, NSDictionary, NSBundle, NSObject<OS_dispatch_queue>, <PKPlugIn>;

@interface NSExtension : NSObject <_NSExtensionContextHosting> {
    NSString *_identifier;
    NSString *_version;
    NSDictionary *_attributes;
    NSDictionary *_infoDictionary;
    NSString *_extensionPointIdentifier;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _requestCompletionBlock;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _requestCancellationBlock;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _requestInterruptionBlock;

    <PKPlugIn> *__plugIn;
    NSBundle *__extensionBundle;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id __requestPostCompletionBlock;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id __requestPostCompletionBlockWithItems;

    NSMutableDictionary *__extensionExpirationIdentifiers;
    NSMutableDictionary *__extensionServiceConnections;
    NSMutableDictionary *__extensionContexts;
    NSObject<OS_dispatch_queue> *__safePluginQueue;
}

@property(getter=_isMarkedNew,readonly) bool _markedNew;
@property(copy) NSString * identifier;
@property(copy) NSString * version;
@property(copy) NSDictionary * attributes;
@property(copy) NSDictionary * infoDictionary;
@property(copy) NSString * extensionPointIdentifier;
@property(copy) NSArray * icons;
@property(readonly) bool optedIn;
@property(copy) id requestCompletionBlock;
@property(copy) id requestCancellationBlock;
@property(copy) id requestInterruptionBlock;
@property(setter=_setPlugIn:,retain) <PKPlugIn> * _plugIn;
@property(setter=_setExtensionBundle:,retain) NSBundle * _extensionBundle;
@property(copy) id _requestPostCompletionBlock;
@property(copy) id _requestPostCompletionBlockWithItems;
@property(setter=_setExtensionExpirationsIdentifiers:,retain) NSMutableDictionary * _extensionExpirationIdentifiers;
@property(setter=_setExtensionServiceConnections:,retain) NSMutableDictionary * _extensionServiceConnections;
@property(setter=_setExtensionContexts:,retain) NSMutableDictionary * _extensionContexts;
@property(getter=_extensionState,setter=_setExtensionState:,copy) NSDictionary * _extensionState;
@property NSObject<OS_dispatch_queue> * _safePluginQueue;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy,readonly) NSString * description;
@property(copy,readonly) NSString * debugDescription;

+ (id)extensionsWithMatchingAttributes:(id)arg1 error:(id*)arg2;
+ (id)predicateForActivationRule:(id)arg1;
+ (bool)evaluateActivationRule:(id)arg1 withExtensionItemsRepresentation:(id)arg2;
+ (void)initializeFiltering;
+ (void)initialize;
+ (void)endMatchingExtensions:(id)arg1;
+ (id)beginMatchingExtensionsWithAttributes:(id)arg1 completion:(id)arg2;
+ (id)extensionWithIdentifier:(id)arg1 error:(id*)arg2;

- (void)set_safePluginQueue:(id)arg1;
- (id)_safePluginQueue;
- (void)_setExtensionExpirationsIdentifiers:(id)arg1;
- (id)_extensionExpirationIdentifiers;
- (void)set_requestPostCompletionBlock:(id)arg1;
- (void)_setExtensionBundle:(id)arg1;
- (void)setExtensionPointIdentifier:(id)arg1;
- (void)setInfoDictionary:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)_safelyEndUsing:(id)arg1;
- (bool)_isSystemExtension;
- (void)_kill:(int)arg1;
- (int)_plugInProcessIdentifier;
- (id)_itemProviderForPayload:(id)arg1 extensionContext:(id)arg2;
- (id)requestCancellationBlock;
- (id)_requestPostCompletionBlockWithItems;
- (id)requestCompletionBlock;
- (id)_requestPostCompletionBlock;
- (void)beginExtensionRequestWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 completion:(id)arg3;
- (void)_safelyBeginUsing:(id)arg1;
- (void)_reallyBeginExtensionRequestWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 completion:(id)arg3;
- (id)requestInterruptionBlock;
- (id)attributes;
- (id)version;
- (id)identifier;
- (id)_initWithPKPlugin:(id)arg1;
- (void)_openURL:(id)arg1 completion:(id)arg2;
- (void)_loadPreviewImageForPayload:(id)arg1 contextIdentifier:(id)arg2 completionHandler:(id)arg3;
- (void)_loadItemForPayload:(id)arg1 contextIdentifier:(id)arg2 completionHandler:(id)arg3;
- (void)_cancelRequestWithError:(id)arg1 forExtensionContextWithUUID:(id)arg2 completion:(id)arg3;
- (void)_completeRequestReturningItems:(id)arg1 forExtensionContextWithUUID:(id)arg2 completion:(id)arg3;
- (void)_setExtensionContexts:(id)arg1;
- (id)_extensionContexts;
- (void)_setExtensionServiceConnections:(id)arg1;
- (id)_extensionServiceConnections;
- (id)_extensionContextForUUID:(id)arg1;
- (id)infoDictionary;
- (void)_resetExtensionState;
- (void)_didShowNewExtensionIndicator;
- (void)_didShowExtensionManagementInterface;
- (bool)_isMarkedNew;
- (void)_setExtensionState:(id)arg1;
- (id)_extensionState;
- (id)_plugIn;
- (id)objectForInfoDictionaryKey:(id)arg1;
- (void)setAttributes:(id)arg1;
- (id)init;
- (bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)description;
- (void)setVersion:(id)arg1;
- (int)pidForRequestIdentifier:(id)arg1;
- (void)beginExtensionRequestWithInputItems:(id)arg1 completion:(id)arg2;
- (void)setRequestInterruptionBlock:(id)arg1;
- (id)extensionPointIdentifier;
- (void)setRequestCancellationBlock:(id)arg1;
- (void)setRequestCompletionBlock:(id)arg1;
- (void)set_requestPostCompletionBlockWithItems:(id)arg1;
- (bool)attemptOptOut:(id*)arg1;
- (bool)attemptOptIn:(id*)arg1;
- (bool)optedIn;
- (id)_extensionBundle;
- (bool)_isPhotoServiceAccessGranted;
- (void)_setPlugIn:(id)arg1;
- (void)cancelExtensionRequestWithIdentifier:(id)arg1;
- (id)icons;
- (id)__UIKit_upcall_icons;
- (void)instantiateViewControllerWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 connectionHandler:(id)arg3;
- (void)instantiateViewControllerWithInputItems:(id)arg1 connectionHandler:(id)arg2;

@end
